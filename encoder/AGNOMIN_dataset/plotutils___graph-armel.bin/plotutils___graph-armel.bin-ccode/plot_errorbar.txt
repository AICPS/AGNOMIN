
/* WARNING: Heritage AFTER dead removal. Example location: s1 : 0x000155d4 */
/* WARNING: Restarted to delay deadcode elimination for space: register */

void plot_errorbar(Multigrapher *multigrapher,Point *p)

{
  double dVar1;
  bool bVar2;
  bool bVar3;
  bool bVar4;
  undefined4 uVar5;
  double dVar6;
  double extraout_d1;
  double dVar7;
  double extraout_d1_00;
  double extraout_d1_01;
  double dVar8;
  double dVar9;
  double dVar10;
  double extraout_d5;
  double dVar11;
  double dVar12;
  double dVar13;
  double dVar14;
  double dVar15;
  double dVar16;
  double dVar17;
  double dVar18;
  double dVar19;
  
  if ((p->have_x_errorbar == false) && (p->have_y_errorbar == false)) {
    return;
  }
  uVar5 = pl_savestate_r(multigrapher->plotter);
  uVar5 = pl_linemod_r(uVar5,multigrapher->plotter,"solid");
  if (p->have_x_errorbar != false) {
    bVar2 = (multigrapher->x_trans).reverse;
    dVar17 = (multigrapher->x_trans).output_min;
    dVar9 = (multigrapher->x_trans).squeezed_min;
    if (bVar2 == false) {
      dVar14 = (p->xmin - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = dVar14;
    }
    else {
      dVar14 = (p->xmin - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = 1.0 - dVar14;
    }
    dVar6 = (multigrapher->x_trans).squeezed_range;
    dVar8 = (multigrapher->x_trans).output_range;
    bVar3 = (multigrapher->y_trans).reverse;
    bVar4 = bVar3 == false;
    dVar10 = (multigrapher->y_trans).input_range;
    dVar7 = extraout_d1;
    if (!bVar4) {
      dVar7 = 1.0;
    }
    dVar18 = (multigrapher->y_trans).squeezed_min;
    dVar16 = (multigrapher->y_trans).squeezed_range;
    dVar15 = (multigrapher->y_trans).output_range;
    dVar19 = (multigrapher->y_trans).output_min;
    dVar12 = (multigrapher->y_trans).input_min;
    if (bVar4) {
      dVar7 = (p->y - dVar12) / dVar10;
    }
    else {
      dVar12 = (p->y - dVar12) / dVar10;
    }
    if (!bVar4) {
      dVar7 = dVar7 - dVar12;
    }
    if (bVar4) {
      dVar12 = dVar7;
    }
    dVar10 = dVar16 * dVar15;
    if ((int)bVar3 < 0) {
      dVar10 = dVar6 * dVar8;
    }
    dVar7 = (dVar19 + (dVar18 + dVar7 * dVar16) * dVar15) - dVar10 * p->symbol_size * 0.5;
    if (bVar2 != false) {
      dVar14 = 1.0 - dVar14;
    }
    if (bVar3 != false) {
      dVar12 = 1.0 - dVar12;
    }
    dVar10 = dVar6 * dVar8;
    if (-1 < (int)bVar3) {
      dVar10 = dVar16 * dVar15;
    }
    dVar10 = dVar10 * p->symbol_size;
    pl_fline_r(SUB84(dVar17 + (dVar9 + dVar13 * dVar6) * dVar8,0),(int)((ulonglong)dVar6 >> 0x20),
               SUB84(dVar7,0),(int)((ulonglong)dVar7 >> 0x20),
               SUB84(dVar17 + dVar8 * (dVar9 + dVar14 * dVar6),0),(int)((ulonglong)dVar8 >> 0x20),
               SUB84(dVar19 + dVar15 * (dVar18 + dVar12 * dVar16) + dVar10 * 0.5,0),
               multigrapher->plotter);
    dVar7 = (multigrapher->x_trans).input_min;
    bVar2 = (multigrapher->x_trans).reverse;
    dVar9 = p->xmin - dVar7;
    bVar3 = (multigrapher->y_trans).reverse;
    dVar14 = (multigrapher->x_trans).input_range;
    dVar13 = (multigrapher->x_trans).squeezed_min;
    dVar17 = extraout_d5;
    if (bVar2 != false) {
      dVar9 = dVar9 / dVar14;
      dVar17 = 1.0;
    }
    dVar8 = (multigrapher->x_trans).squeezed_range;
    dVar12 = (multigrapher->x_trans).output_min;
    dVar18 = (multigrapher->x_trans).output_range;
    dVar6 = (multigrapher->y_trans).squeezed_min;
    dVar19 = (multigrapher->y_trans).squeezed_range;
    dVar15 = (multigrapher->y_trans).output_min;
    if (bVar2 != false) {
      dVar9 = dVar17 - dVar9;
    }
    else {
      dVar9 = dVar9 / dVar14;
    }
    bVar4 = bVar3 == false;
    if (!bVar4) {
      dVar16 = (multigrapher->y_trans).input_range;
    }
    if (bVar4) {
      dVar17 = (multigrapher->y_trans).input_range;
    }
    else {
      dVar17 = 1.0;
    }
    dVar11 = (multigrapher->y_trans).input_min;
    if (bVar4) {
      dVar17 = (p->y - dVar11) / dVar17;
    }
    else {
      dVar16 = (p->y - dVar11) / dVar16;
      dVar17 = dVar17 - dVar16;
    }
    dVar11 = (multigrapher->y_trans).output_range;
    if (bVar4) {
      dVar16 = dVar17;
    }
    if (bVar2 != false) {
      dVar10 = 1.0;
    }
    if (bVar2 != false) {
      dVar14 = dVar10 - (p->xmax - dVar7) / dVar14;
    }
    else {
      dVar14 = (p->xmax - dVar7) / dVar14;
    }
    if (bVar3 != false) {
      dVar16 = 1.0 - dVar16;
    }
    dVar14 = dVar12 + dVar18 * (dVar13 + dVar14 * dVar8);
    pl_fline_r(SUB84(dVar12 + (dVar13 + dVar9 * dVar8) * dVar18,0),(int)((ulonglong)dVar6 >> 0x20),
               SUB84(dVar15 + (dVar6 + dVar17 * dVar19) * dVar11,0),(int)((ulonglong)dVar8 >> 0x20),
               SUB84(dVar14,0),(int)((ulonglong)dVar14 >> 0x20),
               SUB84(dVar15 + dVar11 * (dVar6 + dVar16 * dVar19),0),multigrapher->plotter);
    bVar2 = (multigrapher->x_trans).reverse;
    dVar17 = (multigrapher->x_trans).output_min;
    dVar9 = (multigrapher->x_trans).squeezed_min;
    if (bVar2 == false) {
      dVar14 = (p->xmax - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = dVar14;
    }
    else {
      dVar14 = (p->xmax - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = 1.0 - dVar14;
    }
    dVar6 = (multigrapher->x_trans).squeezed_range;
    dVar8 = (multigrapher->x_trans).output_range;
    bVar3 = (multigrapher->y_trans).reverse;
    bVar4 = bVar3 == false;
    dVar10 = (multigrapher->y_trans).input_range;
    dVar7 = extraout_d1_00;
    if (!bVar4) {
      dVar7 = 1.0;
    }
    dVar18 = (multigrapher->y_trans).squeezed_min;
    dVar15 = (multigrapher->y_trans).squeezed_range;
    dVar12 = (multigrapher->y_trans).output_range;
    dVar19 = (multigrapher->y_trans).output_min;
    dVar16 = (multigrapher->y_trans).input_min;
    if (bVar4) {
      dVar7 = (p->y - dVar16) / dVar10;
    }
    else {
      dVar16 = (p->y - dVar16) / dVar10;
    }
    if (!bVar4) {
      dVar7 = dVar7 - dVar16;
    }
    if (bVar4) {
      dVar16 = dVar7;
    }
    dVar10 = dVar15 * dVar12;
    if ((int)bVar3 < 0) {
      dVar10 = dVar6 * dVar8;
    }
    dVar7 = (dVar19 + (dVar18 + dVar7 * dVar15) * dVar12) - dVar10 * p->symbol_size * 0.5;
    if (bVar2 != false) {
      dVar14 = 1.0 - dVar14;
    }
    if (bVar3 != false) {
      dVar16 = 1.0 - dVar16;
    }
    dVar10 = dVar6 * dVar8;
    if (-1 < (int)bVar3) {
      dVar10 = dVar15 * dVar12;
    }
    uVar5 = pl_fline_r(SUB84(dVar17 + (dVar9 + dVar13 * dVar6) * dVar8,0),
                       (int)((ulonglong)dVar6 >> 0x20),SUB84(dVar7,0),
                       (int)((ulonglong)dVar7 >> 0x20),
                       SUB84(dVar17 + dVar8 * (dVar9 + dVar14 * dVar6),0),
                       (int)((ulonglong)dVar8 >> 0x20),
                       SUB84(dVar19 + dVar12 * (dVar18 + dVar16 * dVar15) +
                             dVar10 * p->symbol_size * 0.5,0),multigrapher->plotter);
  }
  if (p->have_y_errorbar != false) {
    bVar2 = (multigrapher->x_trans).reverse;
    dVar17 = (multigrapher->x_trans).output_min;
    dVar9 = (multigrapher->x_trans).squeezed_min;
    if (bVar2 == false) {
      dVar14 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = dVar14;
    }
    else {
      dVar14 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = 1.0 - dVar14;
    }
    dVar6 = (multigrapher->x_trans).squeezed_range;
    dVar10 = (multigrapher->x_trans).output_range;
    dVar8 = (multigrapher->y_trans).squeezed_range;
    dVar16 = (multigrapher->y_trans).output_range;
    bVar3 = (multigrapher->y_trans).reverse;
    dVar15 = (multigrapher->y_trans).squeezed_min;
    dVar12 = (multigrapher->y_trans).output_min;
    dVar7 = dVar16 * dVar8;
    if ((int)bVar2 < 0) {
      dVar7 = dVar6 * dVar10;
    }
    dVar19 = (multigrapher->y_trans).input_min;
    dVar18 = p->ymin;
    dVar11 = (multigrapher->y_trans).input_range;
    if (bVar3 != false) {
      dVar18 = (dVar18 - dVar19) / dVar11;
      dVar11 = 1.0 - dVar18;
    }
    else {
      dVar11 = (dVar18 - dVar19) / dVar11;
    }
    if (bVar3 == false) {
      dVar18 = dVar11;
    }
    if (bVar2 != false) {
      dVar14 = 1.0 - dVar14;
    }
    dVar19 = dVar6 * dVar10;
    if (-1 < (int)bVar2) {
      dVar19 = dVar16 * dVar8;
    }
    dVar14 = dVar17 + dVar10 * (dVar9 + dVar14 * dVar6) + dVar19 * p->symbol_size * 0.5;
    if (bVar3 != false) {
      dVar18 = 1.0 - dVar18;
    }
    pl_fline_r(SUB84((dVar17 + (dVar9 + dVar13 * dVar6) * dVar10) - dVar7 * p->symbol_size * 0.5,0),
               (int)((ulonglong)dVar6 >> 0x20),SUB84(dVar12 + dVar16 * (dVar15 + dVar11 * dVar8),0),
               (int)((ulonglong)dVar8 >> 0x20),SUB84(dVar14,0),(int)((ulonglong)dVar14 >> 0x20),
               SUB84(dVar12 + dVar16 * (dVar15 + dVar18 * dVar8),0),multigrapher->plotter);
    bVar2 = (multigrapher->x_trans).reverse;
    dVar9 = (multigrapher->x_trans).output_min;
    dVar17 = (multigrapher->x_trans).squeezed_min;
    if (bVar2 == false) {
      dVar13 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar14 = dVar13;
    }
    else {
      dVar13 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar14 = 1.0 - dVar13;
    }
    dVar10 = (multigrapher->x_trans).squeezed_range;
    dVar16 = (multigrapher->y_trans).input_min;
    bVar3 = (multigrapher->y_trans).reverse;
    dVar12 = (multigrapher->y_trans).input_range;
    dVar8 = p->ymin - dVar16;
    dVar6 = (multigrapher->x_trans).output_range;
    dVar7 = extraout_d1_01;
    if (bVar3 != false) {
      dVar7 = 1.0;
      dVar8 = dVar8 / dVar12;
    }
    dVar15 = (multigrapher->y_trans).output_min;
    dVar18 = (multigrapher->y_trans).squeezed_min;
    if (bVar3 != false) {
      dVar8 = dVar7 - dVar8;
    }
    else {
      dVar8 = dVar8 / dVar12;
    }
    dVar19 = (multigrapher->y_trans).squeezed_range;
    dVar8 = dVar18 + dVar8 * dVar19;
    dVar11 = (multigrapher->y_trans).output_range;
    dVar7 = dVar8 * dVar11;
    if (bVar2 != false) {
      dVar8 = 1.0;
      dVar13 = 1.0 - dVar13;
    }
    bVar4 = bVar3 == false;
    if (bVar4) {
      dVar8 = p->ymax;
    }
    dVar1 = dVar13 * dVar10;
    if (bVar4) {
      dVar12 = (dVar8 - dVar16) / dVar12;
    }
    else {
      dVar13 = p->ymax - dVar16;
    }
    dVar8 = dVar9 + dVar6 * (dVar17 + dVar1);
    if (!bVar4) {
      dVar12 = 1.0 - dVar13 / dVar12;
    }
    pl_fline_r(SUB84(dVar9 + (dVar17 + dVar14 * dVar10) * dVar6,0),(int)((ulonglong)dVar6 >> 0x20),
               SUB84(dVar15 + dVar7,0),(int)((ulonglong)dVar19 >> 0x20),SUB84(dVar8,0),
               (int)((ulonglong)dVar8 >> 0x20),SUB84(dVar15 + dVar11 * (dVar18 + dVar12 * dVar19),0)
               ,multigrapher->plotter);
    bVar2 = (multigrapher->x_trans).reverse;
    dVar17 = (multigrapher->x_trans).output_min;
    dVar9 = (multigrapher->x_trans).squeezed_min;
    if (bVar2 == false) {
      dVar14 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar13 = dVar14;
    }
    else {
      dVar13 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
      dVar14 = 1.0 - dVar13;
    }
    dVar6 = (multigrapher->x_trans).output_range;
    dVar8 = (multigrapher->y_trans).squeezed_range;
    dVar12 = (multigrapher->x_trans).squeezed_range;
    dVar16 = (multigrapher->y_trans).output_range;
    bVar3 = (multigrapher->y_trans).reverse;
    dVar15 = (multigrapher->y_trans).squeezed_min;
    dVar10 = (multigrapher->y_trans).output_min;
    dVar7 = dVar16 * dVar8;
    if ((int)bVar2 < 0) {
      dVar7 = dVar12 * dVar6;
    }
    dVar18 = p->ymax;
    dVar19 = (multigrapher->y_trans).input_min;
    dVar11 = (multigrapher->y_trans).input_range;
    if (bVar3 != false) {
      dVar18 = (dVar18 - dVar19) / dVar11;
      dVar11 = 1.0 - dVar18;
    }
    else {
      dVar11 = (dVar18 - dVar19) / dVar11;
    }
    if (bVar3 == false) {
      dVar18 = dVar11;
    }
    if (bVar2 != false) {
      dVar13 = 1.0 - dVar13;
    }
    dVar19 = dVar12 * dVar6;
    if (-1 < (int)bVar2) {
      dVar19 = dVar16 * dVar8;
    }
    dVar13 = dVar17 + dVar6 * (dVar9 + dVar13 * dVar12) + dVar19 * p->symbol_size * 0.5;
    if (bVar3 != false) {
      dVar18 = 1.0 - dVar18;
    }
    uVar5 = pl_fline_r(SUB84((dVar17 + (dVar9 + dVar14 * dVar12) * dVar6) -
                             dVar7 * p->symbol_size * 0.5,0),(int)((ulonglong)dVar6 >> 0x20),
                       SUB84(dVar10 + dVar16 * (dVar15 + dVar11 * dVar8),0),
                       (int)((ulonglong)dVar8 >> 0x20),SUB84(dVar13,0),
                       (int)((ulonglong)dVar13 >> 0x20),
                       SUB84(dVar10 + dVar16 * (dVar15 + dVar18 * dVar8),0),multigrapher->plotter);
  }
  pl_restorestate_r(uVar5,multigrapher->plotter);
  return;
}

