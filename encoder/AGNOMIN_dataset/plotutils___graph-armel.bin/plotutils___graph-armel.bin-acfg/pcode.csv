_init, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x58, 4) COPY (const, 0x11144, 4)
_init,  ---  CALL (ram, 0x1381c, 4)
_init, (register, 0x80, 4) COPY (register, 0x54, 4)
_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x54, 4) COPY (register, 0x80, 4)
_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_init,  ---  RETURN (register, 0x5c, 4)
calloc, (register, 0x50, 4) COPY (const, 0x11164, 4)
calloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
calloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
calloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
calloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
calloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
calloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
calloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
calloc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
calloc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
calloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
calloc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
calloc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
calloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xea8, 4)
calloc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
calloc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
calloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
calloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
calloc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
calloc,  ---  BRANCHIND (register, 0x5c, 4)
strcmp, (register, 0x50, 4) COPY (const, 0x11170, 4)
strcmp, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strcmp, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcmp, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strcmp, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcmp, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strcmp, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strcmp, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strcmp, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strcmp, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strcmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strcmp, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strcmp, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strcmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xea0, 4)
strcmp, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strcmp, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strcmp, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strcmp, (register, 0x69, 1) COPY (register, 0xb0, 1)
strcmp, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strcmp,  ---  BRANCHIND (register, 0x5c, 4)
pl_endpath_r, (register, 0x50, 4) COPY (const, 0x1117c, 4)
pl_endpath_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_endpath_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_endpath_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_endpath_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_endpath_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_endpath_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_endpath_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_endpath_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_endpath_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_endpath_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_endpath_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_endpath_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_endpath_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe98, 4)
pl_endpath_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_endpath_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_endpath_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_endpath_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_endpath_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_endpath_r,  ---  BRANCHIND (register, 0x5c, 4)
__isoc99_fscanf, (register, 0x50, 4) COPY (const, 0x11188, 4)
__isoc99_fscanf, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
__isoc99_fscanf, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__isoc99_fscanf, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__isoc99_fscanf, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__isoc99_fscanf, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__isoc99_fscanf, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__isoc99_fscanf, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__isoc99_fscanf, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_fscanf, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_fscanf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_fscanf, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__isoc99_fscanf, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__isoc99_fscanf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe90, 4)
__isoc99_fscanf, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__isoc99_fscanf, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__isoc99_fscanf, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__isoc99_fscanf, (register, 0x69, 1) COPY (register, 0xb0, 1)
__isoc99_fscanf, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__isoc99_fscanf,  ---  BRANCHIND (register, 0x5c, 4)
fopen, (register, 0x50, 4) COPY (const, 0x11194, 4)
fopen, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fopen, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fopen, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fopen, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fopen, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fopen, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fopen, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fopen, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fopen, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fopen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fopen, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fopen, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fopen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe88, 4)
fopen, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fopen, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fopen, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fopen, (register, 0x69, 1) COPY (register, 0xb0, 1)
fopen, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fopen,  ---  BRANCHIND (register, 0x5c, 4)
_pl_get_ps_font_info, (register, 0x50, 4) COPY (const, 0x111a0, 4)
_pl_get_ps_font_info, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
_pl_get_ps_font_info, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_ps_font_info, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_pl_get_ps_font_info, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_ps_font_info, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_pl_get_ps_font_info, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_pl_get_ps_font_info, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_pl_get_ps_font_info, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_ps_font_info, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_ps_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_ps_font_info, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_ps_font_info, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_ps_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe80, 4)
_pl_get_ps_font_info, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
_pl_get_ps_font_info, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
_pl_get_ps_font_info, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_pl_get_ps_font_info, (register, 0x69, 1) COPY (register, 0xb0, 1)
_pl_get_ps_font_info, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
_pl_get_ps_font_info,  ---  BRANCHIND (register, 0x5c, 4)
free, (register, 0x50, 4) COPY (const, 0x111ac, 4)
free, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
free, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
free, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
free, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
free, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
free, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
free, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
free, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
free, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
free, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
free, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
free, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
free, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe78, 4)
free, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
free, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
free, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
free, (register, 0x69, 1) COPY (register, 0xb0, 1)
free, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
free,  ---  BRANCHIND (register, 0x5c, 4)
pl_fspace_r, (register, 0x50, 4) COPY (const, 0x111b8, 4)
pl_fspace_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fspace_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fspace_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fspace_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fspace_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fspace_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fspace_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fspace_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fspace_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fspace_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fspace_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fspace_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fspace_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe70, 4)
pl_fspace_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fspace_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fspace_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fspace_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fspace_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fspace_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_linemod_r, (register, 0x50, 4) COPY (const, 0x111c4, 4)
pl_linemod_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_linemod_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_linemod_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_linemod_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_linemod_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_linemod_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_linemod_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_linemod_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_linemod_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_linemod_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_linemod_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_linemod_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_linemod_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe68, 4)
pl_linemod_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_linemod_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_linemod_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_linemod_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_linemod_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_linemod_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_flabelwidth_r, (register, 0x50, 4) COPY (const, 0x111d0, 4)
pl_flabelwidth_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_flabelwidth_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flabelwidth_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_flabelwidth_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flabelwidth_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_flabelwidth_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_flabelwidth_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_flabelwidth_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flabelwidth_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flabelwidth_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flabelwidth_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_flabelwidth_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_flabelwidth_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe60, 4)
pl_flabelwidth_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_flabelwidth_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_flabelwidth_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_flabelwidth_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_flabelwidth_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_flabelwidth_r,  ---  BRANCHIND (register, 0x5c, 4)
pow, (register, 0x50, 4) COPY (const, 0x111dc, 4)
pow, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pow, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pow, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pow, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pow, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pow, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pow, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pow, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pow, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pow, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pow, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pow, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pow, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe58, 4)
pow, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pow, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pow, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pow, (register, 0x69, 1) COPY (register, 0xb0, 1)
pow, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pow,  ---  BRANCHIND (register, 0x5c, 4)
_IO_getc, (register, 0x50, 4) COPY (const, 0x111e8, 4)
_IO_getc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
_IO_getc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
_IO_getc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_IO_getc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
_IO_getc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_IO_getc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_IO_getc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_IO_getc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_IO_getc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_IO_getc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
_IO_getc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_IO_getc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_IO_getc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe50, 4)
_IO_getc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
_IO_getc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
_IO_getc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_IO_getc, (register, 0x69, 1) COPY (register, 0xb0, 1)
_IO_getc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
_IO_getc,  ---  BRANCHIND (register, 0x5c, 4)
pl_fcont_r, (register, 0x50, 4) COPY (const, 0x111f4, 4)
pl_fcont_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fcont_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fcont_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fcont_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fcont_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fcont_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fcont_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fcont_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fcont_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fcont_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fcont_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fcont_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fcont_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe48, 4)
pl_fcont_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fcont_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fcont_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fcont_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fcont_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fcont_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_fontname_r, (register, 0x50, 4) COPY (const, 0x11200, 4)
pl_fontname_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fontname_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fontname_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fontname_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fontname_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fontname_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fontname_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fontname_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fontname_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fontname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fontname_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fontname_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fontname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe40, 4)
pl_fontname_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fontname_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fontname_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fontname_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fontname_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fontname_r,  ---  BRANCHIND (register, 0x5c, 4)
realloc, (register, 0x50, 4) COPY (const, 0x1120c, 4)
realloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
realloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
realloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
realloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
realloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
realloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
realloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
realloc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
realloc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
realloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
realloc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
realloc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
realloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe38, 4)
realloc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
realloc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
realloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
realloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
realloc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
realloc,  ---  BRANCHIND (register, 0x5c, 4)
pl_ffontsize_r, (register, 0x50, 4) COPY (const, 0x11224, 4)
pl_ffontsize_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_ffontsize_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_ffontsize_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_ffontsize_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_ffontsize_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_ffontsize_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_ffontsize_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_ffontsize_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_ffontsize_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_ffontsize_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_ffontsize_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_ffontsize_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_ffontsize_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe28, 4)
pl_ffontsize_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_ffontsize_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_ffontsize_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_ffontsize_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_ffontsize_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_ffontsize_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_newpl_r, (register, 0x50, 4) COPY (const, 0x11230, 4)
pl_newpl_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_newpl_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_newpl_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_newpl_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_newpl_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_newpl_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_newpl_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_newpl_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newpl_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newpl_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_newpl_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_newpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe20, 4)
pl_newpl_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_newpl_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_newpl_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_newpl_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_newpl_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_newpl_r,  ---  BRANCHIND (register, 0x5c, 4)
perror, (register, 0x50, 4) COPY (const, 0x1123c, 4)
perror, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
perror, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
perror, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
perror, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
perror, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
perror, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
perror, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
perror, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
perror, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
perror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
perror, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
perror, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
perror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe18, 4)
perror, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
perror, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
perror, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
perror, (register, 0x69, 1) COPY (register, 0xb0, 1)
perror, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
perror,  ---  BRANCHIND (register, 0x5c, 4)
pl_fmove_r, (register, 0x50, 4) COPY (const, 0x11248, 4)
pl_fmove_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fmove_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fmove_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fmove_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fmove_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fmove_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fmove_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fmove_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmove_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmove_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmove_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fmove_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fmove_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe10, 4)
pl_fmove_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fmove_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fmove_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fmove_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fmove_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fmove_r,  ---  BRANCHIND (register, 0x5c, 4)
fwrite, (register, 0x50, 4) COPY (const, 0x11254, 4)
fwrite, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fwrite, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fwrite, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fwrite, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fwrite, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fwrite, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fwrite, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fwrite, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fwrite, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fwrite, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fwrite, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fwrite, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fwrite, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe08, 4)
fwrite, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fwrite, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fwrite, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fwrite, (register, 0x69, 1) COPY (register, 0xb0, 1)
fwrite, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fwrite,  ---  BRANCHIND (register, 0x5c, 4)
strcpy, (register, 0x50, 4) COPY (const, 0x11260, 4)
strcpy, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strcpy, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcpy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strcpy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcpy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strcpy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strcpy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strcpy, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strcpy, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strcpy, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strcpy, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strcpy, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strcpy, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe00, 4)
strcpy, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strcpy, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strcpy, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strcpy, (register, 0x69, 1) COPY (register, 0xb0, 1)
strcpy, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strcpy,  ---  BRANCHIND (register, 0x5c, 4)
fread, (register, 0x50, 4) COPY (const, 0x1126c, 4)
fread, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fread, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fread, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fread, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fread, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fread, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fread, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fread, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fread, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fread, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fread, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fread, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fread, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdf8, 4)
fread, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fread, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fread, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fread, (register, 0x69, 1) COPY (register, 0xb0, 1)
fread, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fread,  ---  BRANCHIND (register, 0x5c, 4)
floor, (register, 0x50, 4) COPY (const, 0x11278, 4)
floor, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
floor, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
floor, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
floor, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
floor, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
floor, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
floor, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
floor, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
floor, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
floor, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
floor, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
floor, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
floor, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdf0, 4)
floor, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
floor, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
floor, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
floor, (register, 0x69, 1) COPY (register, 0xb0, 1)
floor, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
floor,  ---  BRANCHIND (register, 0x5c, 4)
pl_closepl_r, (register, 0x50, 4) COPY (const, 0x11284, 4)
pl_closepl_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_closepl_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_closepl_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_closepl_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_closepl_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_closepl_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_closepl_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_closepl_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_closepl_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_closepl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_closepl_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_closepl_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_closepl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xde8, 4)
pl_closepl_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_closepl_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_closepl_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_closepl_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_closepl_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_closepl_r,  ---  BRANCHIND (register, 0x5c, 4)
getenv, (register, 0x50, 4) COPY (const, 0x11290, 4)
getenv, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
getenv, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
getenv, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getenv, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
getenv, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getenv, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getenv, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getenv, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
getenv, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
getenv, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
getenv, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
getenv, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
getenv, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xde0, 4)
getenv, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
getenv, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
getenv, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
getenv, (register, 0x69, 1) COPY (register, 0xb0, 1)
getenv, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
getenv,  ---  BRANCHIND (register, 0x5c, 4)
pl_pencolorname_r, (register, 0x50, 4) COPY (const, 0x1129c, 4)
pl_pencolorname_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_pencolorname_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_pencolorname_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_pencolorname_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_pencolorname_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_pencolorname_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_pencolorname_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_pencolorname_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_pencolorname_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_pencolorname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_pencolorname_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_pencolorname_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_pencolorname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdd8, 4)
pl_pencolorname_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_pencolorname_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_pencolorname_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_pencolorname_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_pencolorname_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_pencolorname_r,  ---  BRANCHIND (register, 0x5c, 4)
malloc, (register, 0x50, 4) COPY (const, 0x112a8, 4)
malloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
malloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
malloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
malloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
malloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
malloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
malloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
malloc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
malloc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
malloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
malloc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
malloc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
malloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdd0, 4)
malloc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
malloc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
malloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
malloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
malloc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
malloc,  ---  BRANCHIND (register, 0x5c, 4)
log10, (register, 0x50, 4) COPY (const, 0x112b4, 4)
log10, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
log10, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
log10, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
log10, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
log10, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
log10, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
log10, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
log10, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
log10, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
log10, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
log10, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
log10, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
log10, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdc8, 4)
log10, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
log10, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
log10, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
log10, (register, 0x69, 1) COPY (register, 0xb0, 1)
log10, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
log10,  ---  BRANCHIND (register, 0x5c, 4)
pl_deleteplparams, (register, 0x50, 4) COPY (const, 0x112c0, 4)
pl_deleteplparams, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_deleteplparams, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_deleteplparams, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_deleteplparams, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_deleteplparams, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_deleteplparams, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_deleteplparams, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_deleteplparams, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deleteplparams, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deleteplparams, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deleteplparams, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_deleteplparams, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_deleteplparams, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdc0, 4)
pl_deleteplparams, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_deleteplparams, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_deleteplparams, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_deleteplparams, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_deleteplparams, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_deleteplparams,  ---  BRANCHIND (register, 0x5c, 4)
__libc_start_main, (register, 0x50, 4) COPY (const, 0x112cc, 4)
__libc_start_main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
__libc_start_main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__libc_start_main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_start_main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__libc_start_main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_start_main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_start_main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_start_main, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__libc_start_main, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__libc_start_main, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
__libc_start_main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdb8, 4)
__libc_start_main, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__libc_start_main, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__libc_start_main, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_start_main, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__libc_start_main,  ---  BRANCHIND (register, 0x5c, 4)
strerror, (register, 0x50, 4) COPY (const, 0x112d8, 4)
strerror, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strerror, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strerror, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strerror, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strerror, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strerror, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strerror, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strerror, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strerror, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strerror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strerror, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strerror, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strerror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xdb0, 4)
strerror, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strerror, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strerror, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strerror, (register, 0x69, 1) COPY (register, 0xb0, 1)
strerror, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strerror,  ---  BRANCHIND (register, 0x5c, 4)
pl_filltype_r, (register, 0x50, 4) COPY (const, 0x112e4, 4)
pl_filltype_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_filltype_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_filltype_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_filltype_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_filltype_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_filltype_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_filltype_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_filltype_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_filltype_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_filltype_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_filltype_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_filltype_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_filltype_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xda8, 4)
pl_filltype_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_filltype_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_filltype_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_filltype_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_filltype_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_filltype_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_erase_r, (register, 0x50, 4) COPY (const, 0x112f0, 4)
pl_erase_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_erase_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_erase_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_erase_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_erase_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_erase_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_erase_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_erase_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_erase_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_erase_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_erase_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_erase_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_erase_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xda0, 4)
pl_erase_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_erase_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_erase_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_erase_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_erase_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_erase_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_newplparams, (register, 0x50, 4) COPY (const, 0x112fc, 4)
pl_newplparams, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_newplparams, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_newplparams, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_newplparams, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_newplparams, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_newplparams, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_newplparams, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_newplparams, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newplparams, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newplparams, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_newplparams, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_newplparams, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_newplparams, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd98, 4)
pl_newplparams, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_newplparams, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_newplparams, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_newplparams, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_newplparams, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_newplparams,  ---  BRANCHIND (register, 0x5c, 4)
__ctype_b_loc, (register, 0x50, 4) COPY (const, 0x11314, 4)
__ctype_b_loc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
__ctype_b_loc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_b_loc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__ctype_b_loc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_b_loc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__ctype_b_loc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__ctype_b_loc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__ctype_b_loc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__ctype_b_loc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__ctype_b_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
__ctype_b_loc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd88, 4)
__ctype_b_loc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__ctype_b_loc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__ctype_b_loc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x69, 1) COPY (register, 0xb0, 1)
__ctype_b_loc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__ctype_b_loc,  ---  BRANCHIND (register, 0x5c, 4)
exit, (register, 0x50, 4) COPY (const, 0x11320, 4)
exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
exit, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
exit, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
exit, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
exit, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
exit, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
exit, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd80, 4)
exit, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
exit, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
exit, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
exit, (register, 0x69, 1) COPY (register, 0xb0, 1)
exit, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
exit,  ---  BRANCHIND (register, 0x5c, 4)
feof, (register, 0x50, 4) COPY (const, 0x1132c, 4)
feof, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
feof, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
feof, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
feof, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
feof, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
feof, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
feof, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
feof, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
feof, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
feof, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
feof, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
feof, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
feof, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd78, 4)
feof, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
feof, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
feof, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
feof, (register, 0x69, 1) COPY (register, 0xb0, 1)
feof, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
feof,  ---  BRANCHIND (register, 0x5c, 4)
strlen, (register, 0x50, 4) COPY (const, 0x11338, 4)
strlen, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strlen, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strlen, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strlen, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strlen, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strlen, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strlen, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strlen, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strlen, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strlen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strlen, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strlen, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strlen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd70, 4)
strlen, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strlen, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strlen, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strlen, (register, 0x69, 1) COPY (register, 0xb0, 1)
strlen, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strlen,  ---  BRANCHIND (register, 0x5c, 4)
strchr, (register, 0x50, 4) COPY (const, 0x11344, 4)
strchr, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strchr, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strchr, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strchr, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strchr, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strchr, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strchr, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strchr, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strchr, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strchr, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strchr, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd68, 4)
strchr, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strchr, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strchr, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strchr, (register, 0x69, 1) COPY (register, 0xb0, 1)
strchr, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strchr,  ---  BRANCHIND (register, 0x5c, 4)
_pl_get_stick_font_info, (register, 0x50, 4) COPY (const, 0x11350, 4)
_pl_get_stick_font_info, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
_pl_get_stick_font_info, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_stick_font_info, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_pl_get_stick_font_info, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_stick_font_info, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_pl_get_stick_font_info, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_pl_get_stick_font_info, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_pl_get_stick_font_info, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_stick_font_info, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_stick_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_stick_font_info, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_stick_font_info, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_stick_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd60, 4)
_pl_get_stick_font_info, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
_pl_get_stick_font_info, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
_pl_get_stick_font_info, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_pl_get_stick_font_info, (register, 0x69, 1) COPY (register, 0xb0, 1)
_pl_get_stick_font_info, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
_pl_get_stick_font_info,  ---  BRANCHIND (register, 0x5c, 4)
fprintf, (register, 0x50, 4) COPY (const, 0x1135c, 4)
fprintf, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fprintf, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fprintf, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fprintf, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fprintf, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fprintf, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fprintf, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fprintf, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fprintf, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fprintf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fprintf, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fprintf, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fprintf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd58, 4)
fprintf, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fprintf, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fprintf, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fprintf, (register, 0x69, 1) COPY (register, 0xb0, 1)
fprintf, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fprintf,  ---  BRANCHIND (register, 0x5c, 4)
ungetc, (register, 0x50, 4) COPY (const, 0x11368, 4)
ungetc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
ungetc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
ungetc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
ungetc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
ungetc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
ungetc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
ungetc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
ungetc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
ungetc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
ungetc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
ungetc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
ungetc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
ungetc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd50, 4)
ungetc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
ungetc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
ungetc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
ungetc, (register, 0x69, 1) COPY (register, 0xb0, 1)
ungetc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
ungetc,  ---  BRANCHIND (register, 0x5c, 4)
__errno_location, (register, 0x50, 4) COPY (const, 0x11374, 4)
__errno_location, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
__errno_location, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__errno_location, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__errno_location, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__errno_location, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__errno_location, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__errno_location, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__errno_location, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__errno_location, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__errno_location, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
__errno_location, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__errno_location, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__errno_location, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd48, 4)
__errno_location, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__errno_location, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__errno_location, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__errno_location, (register, 0x69, 1) COPY (register, 0xb0, 1)
__errno_location, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__errno_location,  ---  BRANCHIND (register, 0x5c, 4)
__isoc99_sscanf, (register, 0x50, 4) COPY (const, 0x11380, 4)
__isoc99_sscanf, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
__isoc99_sscanf, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__isoc99_sscanf, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__isoc99_sscanf, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__isoc99_sscanf, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__isoc99_sscanf, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__isoc99_sscanf, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__isoc99_sscanf, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_sscanf, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_sscanf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
__isoc99_sscanf, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__isoc99_sscanf, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__isoc99_sscanf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd40, 4)
__isoc99_sscanf, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__isoc99_sscanf, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__isoc99_sscanf, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__isoc99_sscanf, (register, 0x69, 1) COPY (register, 0xb0, 1)
__isoc99_sscanf, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__isoc99_sscanf,  ---  BRANCHIND (register, 0x5c, 4)
pl_savestate_r, (register, 0x50, 4) COPY (const, 0x1138c, 4)
pl_savestate_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_savestate_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_savestate_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_savestate_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_savestate_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_savestate_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_savestate_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_savestate_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_savestate_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_savestate_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_savestate_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_savestate_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_savestate_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd38, 4)
pl_savestate_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_savestate_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_savestate_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_savestate_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_savestate_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_savestate_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_fline_r, (register, 0x50, 4) COPY (const, 0x11398, 4)
pl_fline_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fline_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fline_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fline_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fline_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fline_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fline_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fline_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fline_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fline_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fline_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fline_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fline_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd30, 4)
pl_fline_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fline_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fline_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fline_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fline_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fline_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_colorname_r, (register, 0x50, 4) COPY (const, 0x113a4, 4)
pl_colorname_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_colorname_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_colorname_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_colorname_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_colorname_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_colorname_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_colorname_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_colorname_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_colorname_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_colorname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_colorname_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_colorname_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_colorname_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd28, 4)
pl_colorname_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_colorname_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_colorname_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_colorname_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_colorname_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_colorname_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_havecap_r, (register, 0x50, 4) COPY (const, 0x113b0, 4)
pl_havecap_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_havecap_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_havecap_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_havecap_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_havecap_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_havecap_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_havecap_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_havecap_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_havecap_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_havecap_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_havecap_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_havecap_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_havecap_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd20, 4)
pl_havecap_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_havecap_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_havecap_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_havecap_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_havecap_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_havecap_r,  ---  BRANCHIND (register, 0x5c, 4)
ceil, (register, 0x50, 4) COPY (const, 0x113bc, 4)
ceil, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
ceil, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
ceil, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
ceil, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
ceil, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
ceil, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
ceil, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
ceil, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
ceil, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
ceil, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
ceil, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
ceil, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
ceil, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd18, 4)
ceil, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
ceil, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
ceil, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
ceil, (register, 0x69, 1) COPY (register, 0xb0, 1)
ceil, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
ceil,  ---  BRANCHIND (register, 0x5c, 4)
fclose, (register, 0x50, 4) COPY (const, 0x113c8, 4)
fclose, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fclose, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fclose, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fclose, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fclose, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fclose, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fclose, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fclose, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fclose, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fclose, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fclose, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fclose, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fclose, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd10, 4)
fclose, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fclose, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fclose, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fclose, (register, 0x69, 1) COPY (register, 0xb0, 1)
fclose, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fclose,  ---  BRANCHIND (register, 0x5c, 4)
_pl_get_pcl_font_info, (register, 0x50, 4) COPY (const, 0x113d4, 4)
_pl_get_pcl_font_info, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
_pl_get_pcl_font_info, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_pcl_font_info, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_pl_get_pcl_font_info, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_pcl_font_info, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_pl_get_pcl_font_info, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_pl_get_pcl_font_info, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_pl_get_pcl_font_info, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_pcl_font_info, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_pcl_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_pcl_font_info, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_pcl_font_info, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_pcl_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd08, 4)
_pl_get_pcl_font_info, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
_pl_get_pcl_font_info, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
_pl_get_pcl_font_info, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_pl_get_pcl_font_info, (register, 0x69, 1) COPY (register, 0xb0, 1)
_pl_get_pcl_font_info, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
_pl_get_pcl_font_info,  ---  BRANCHIND (register, 0x5c, 4)
pl_fbox_r, (register, 0x50, 4) COPY (const, 0x113e0, 4)
pl_fbox_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fbox_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fbox_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fbox_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fbox_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fbox_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fbox_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fbox_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fbox_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fbox_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fbox_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fbox_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fbox_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd00, 4)
pl_fbox_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fbox_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fbox_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fbox_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fbox_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fbox_r,  ---  BRANCHIND (register, 0x5c, 4)
fputc, (register, 0x50, 4) COPY (const, 0x113ec, 4)
fputc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fputc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fputc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fputc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fputc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fputc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fputc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fputc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fputc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fputc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fputc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcf8, 4)
fputc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fputc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fputc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fputc, (register, 0x69, 1) COPY (register, 0xb0, 1)
fputc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fputc,  ---  BRANCHIND (register, 0x5c, 4)
_pl_get_hershey_font_info, (register, 0x50, 4) COPY (const, 0x113f8, 4)
_pl_get_hershey_font_info, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
_pl_get_hershey_font_info, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_hershey_font_info, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_pl_get_hershey_font_info, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
_pl_get_hershey_font_info, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_pl_get_hershey_font_info, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_pl_get_hershey_font_info, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_pl_get_hershey_font_info, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_hershey_font_info, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_hershey_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
_pl_get_hershey_font_info, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_hershey_font_info, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_pl_get_hershey_font_info, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcf0, 4)
_pl_get_hershey_font_info, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
_pl_get_hershey_font_info, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
_pl_get_hershey_font_info, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_pl_get_hershey_font_info, (register, 0x69, 1) COPY (register, 0xb0, 1)
_pl_get_hershey_font_info, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
_pl_get_hershey_font_info,  ---  BRANCHIND (register, 0x5c, 4)
sprintf, (register, 0x50, 4) COPY (const, 0x11404, 4)
sprintf, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
sprintf, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
sprintf, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
sprintf, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
sprintf, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
sprintf, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
sprintf, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
sprintf, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
sprintf, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
sprintf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
sprintf, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
sprintf, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
sprintf, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xce8, 4)
sprintf, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
sprintf, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
sprintf, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
sprintf, (register, 0x69, 1) COPY (register, 0xb0, 1)
sprintf, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
sprintf,  ---  BRANCHIND (register, 0x5c, 4)
pl_alabel_r, (register, 0x50, 4) COPY (const, 0x11410, 4)
pl_alabel_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_alabel_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_alabel_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_alabel_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_alabel_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_alabel_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_alabel_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_alabel_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_alabel_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_alabel_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_alabel_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_alabel_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_alabel_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xce0, 4)
pl_alabel_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_alabel_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_alabel_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_alabel_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_alabel_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_alabel_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_openpl_r, (register, 0x50, 4) COPY (const, 0x1141c, 4)
pl_openpl_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_openpl_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_openpl_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_openpl_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_openpl_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_openpl_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_openpl_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_openpl_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_openpl_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_openpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_openpl_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_openpl_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_openpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcd8, 4)
pl_openpl_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_openpl_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_openpl_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_openpl_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_openpl_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_openpl_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_textangle_r, (register, 0x50, 4) COPY (const, 0x11428, 4)
pl_textangle_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_textangle_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_textangle_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_textangle_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_textangle_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_textangle_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_textangle_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_textangle_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_textangle_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_textangle_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_textangle_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_textangle_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_textangle_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcd0, 4)
pl_textangle_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_textangle_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_textangle_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_textangle_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_textangle_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_textangle_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_flinewidth_r, (register, 0x50, 4) COPY (const, 0x11434, 4)
pl_flinewidth_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_flinewidth_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flinewidth_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_flinewidth_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flinewidth_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_flinewidth_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_flinewidth_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_flinewidth_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flinewidth_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flinewidth_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flinewidth_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_flinewidth_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_flinewidth_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcc8, 4)
pl_flinewidth_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_flinewidth_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_flinewidth_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_flinewidth_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_flinewidth_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_flinewidth_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_restorestate_r, (register, 0x50, 4) COPY (const, 0x11440, 4)
pl_restorestate_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_restorestate_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_restorestate_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_restorestate_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_restorestate_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_restorestate_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_restorestate_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_restorestate_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_restorestate_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_restorestate_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_restorestate_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_restorestate_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_restorestate_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcc0, 4)
pl_restorestate_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_restorestate_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_restorestate_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_restorestate_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_restorestate_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_restorestate_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_fmarker_r, (register, 0x50, 4) COPY (const, 0x1144c, 4)
pl_fmarker_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_fmarker_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fmarker_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_fmarker_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_fmarker_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_fmarker_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_fmarker_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_fmarker_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmarker_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmarker_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_fmarker_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_fmarker_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_fmarker_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcb8, 4)
pl_fmarker_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_fmarker_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_fmarker_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_fmarker_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_fmarker_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_fmarker_r,  ---  BRANCHIND (register, 0x5c, 4)
pl_setplparam, (register, 0x50, 4) COPY (const, 0x11458, 4)
pl_setplparam, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_setplparam, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_setplparam, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_setplparam, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_setplparam, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_setplparam, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_setplparam, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_setplparam, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_setplparam, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_setplparam, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_setplparam, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_setplparam, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_setplparam, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xcb0, 4)
pl_setplparam, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_setplparam, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_setplparam, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_setplparam, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_setplparam, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_setplparam,  ---  BRANCHIND (register, 0x5c, 4)
pl_flushpl_r, (register, 0x50, 4) COPY (const, 0x11464, 4)
pl_flushpl_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_flushpl_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flushpl_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_flushpl_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_flushpl_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_flushpl_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_flushpl_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_flushpl_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flushpl_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flushpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_flushpl_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_flushpl_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_flushpl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xca8, 4)
pl_flushpl_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_flushpl_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_flushpl_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_flushpl_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_flushpl_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_flushpl_r,  ---  BRANCHIND (register, 0x5c, 4)
fputs, (register, 0x50, 4) COPY (const, 0x11470, 4)
fputs, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
fputs, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputs, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fputs, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputs, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fputs, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fputs, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fputs, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fputs, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
fputs, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
fputs, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fputs, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fputs, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xca0, 4)
fputs, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fputs, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fputs, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fputs, (register, 0x69, 1) COPY (register, 0xb0, 1)
fputs, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fputs,  ---  BRANCHIND (register, 0x5c, 4)
strncmp, (register, 0x50, 4) COPY (const, 0x1147c, 4)
strncmp, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
strncmp, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strncmp, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strncmp, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strncmp, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strncmp, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strncmp, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strncmp, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strncmp, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
strncmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
strncmp, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strncmp, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strncmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xc98, 4)
strncmp, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strncmp, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strncmp, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strncmp, (register, 0x69, 1) COPY (register, 0xb0, 1)
strncmp, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strncmp,  ---  BRANCHIND (register, 0x5c, 4)
abort, (register, 0x50, 4) COPY (const, 0x11488, 4)
abort, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
abort, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
abort, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
abort, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
abort, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
abort, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
abort, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
abort, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
abort, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
abort, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
abort, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
abort, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
abort, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xc90, 4)
abort, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
abort, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
abort, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
abort, (register, 0x69, 1) COPY (register, 0xb0, 1)
abort, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
abort,  ---  BRANCHIND (register, 0x5c, 4)
pl_deletepl_r, (register, 0x50, 4) COPY (const, 0x11494, 4)
pl_deletepl_r, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
pl_deletepl_r, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_deletepl_r, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pl_deletepl_r, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pl_deletepl_r, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pl_deletepl_r, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pl_deletepl_r, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pl_deletepl_r, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deletepl_r, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deletepl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
pl_deletepl_r, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pl_deletepl_r, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pl_deletepl_r, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xc88, 4)
pl_deletepl_r, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pl_deletepl_r, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pl_deletepl_r, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pl_deletepl_r, (register, 0x69, 1) COPY (register, 0xb0, 1)
pl_deletepl_r, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pl_deletepl_r,  ---  BRANCHIND (register, 0x5c, 4)
open_file_for_reading, (register, 0x2c, 4) COPY (const, 0xf510, 4)
open_file_for_reading, (register, 0x28, 4) COPY (const, 0xf12c, 4)
open_file_for_reading, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
open_file_for_reading, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
open_file_for_reading, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
open_file_for_reading, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
open_file_for_reading, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
open_file_for_reading, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
open_file_for_reading, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
open_file_for_reading,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)
open_file_for_reading, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
open_file_for_reading, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
open_file_for_reading, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
open_file_for_reading, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
open_file_for_reading, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
open_file_for_reading, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
open_file_for_reading, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
open_file_for_reading, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
open_file_for_reading, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
open_file_for_reading, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
open_file_for_reading, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
open_file_for_reading, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
open_file_for_reading, (register, 0x30, 4) COPY (register, 0x20, 4)
open_file_for_reading, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
open_file_for_reading, (register, 0x58, 4) COPY (const, 0x114c0, 4)
open_file_for_reading,  ---  CALL (ram, 0x1136c, 4)
open_file_for_reading, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
open_file_for_reading, (register, 0x58, 4) COPY (const, 0x114c8, 4)
open_file_for_reading,  ---  CALL (ram, 0x112d0, 4)
open_file_for_reading, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
open_file_for_reading,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
open_file_for_reading, (register, 0x24, 4) COPY (const, 0xc85c, 4)
open_file_for_reading, (register, 0x20, 4) COPY (register, 0x38, 4)
open_file_for_reading, (register, 0x28, 4) COPY (register, 0x34, 4)
open_file_for_reading, (register, 0x2c, 4) COPY (register, 0x30, 4)
open_file_for_reading, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
open_file_for_reading, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
open_file_for_reading, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
open_file_for_reading, (register, 0x58, 4) COPY (const, 0x114e4, 4)
open_file_for_reading,  ---  CALL (ram, 0x11354, 4)
open_file_for_reading, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
open_file_for_reading, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
open_file_for_reading, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
open_file_for_reading, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
open_file_for_reading, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
open_file_for_reading, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
open_file_for_reading, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
open_file_for_reading, (register, 0x20, 4) COPY (const, 0x1, 4)
open_file_for_reading, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x66, 1) COPY (register, 0x68, 1)
open_file_for_reading, (register, 0x67, 1) COPY (register, 0x63, 1)
open_file_for_reading, (register, 0x58, 4) COPY (const, 0x114ec, 4)
open_file_for_reading,  ---  CALL (ram, 0x11318, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
main, (register, 0x80, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x114fc, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x23c, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2f4, 4) , (register, 0x54, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2f4, 4)
main, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2f4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (register, 0x2c, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x11508, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x238, 4)
main, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x1150c, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x23c, 4)
main, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) COPY (const, 0xc868, 4)
main, (register, 0x340, 8) COPY (register, 0x338, 8)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x50, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x58, 4) , (const, 0xffff, 4)
main, (register, 0x58, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x168, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (register, 0x28, 4) COPY (const, 0x3333, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x2c, 4) COPY (const, 0x3333, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x3333, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x3fe3, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x170, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x40, 4) COPY (const, 0xf534, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x174, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x48, 4) COPY (const, 0x999a, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x4c, 4) COPY (const, 0x9999, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x3c, 4) COPY (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x19c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x20, 4) COPY (const, 0xcccd, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x198, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x44, 4) COPY (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x40, 4) , (const, 0xffff, 4)
main, (register, 0x40, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (register, 0x38, 4) COPY (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x9999, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x48, 4) , (const, 0xffff, 4)
main, (register, 0x48, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x3fc9, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x4c, 4) , (const, 0xffff, 4)
main, (register, 0x4c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0xcccc, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
main, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x11c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x114, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1bc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x154, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x150, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x148, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x144, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x140, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x134, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) COPY (const, 0xcccc, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (register, 0x338, 8) COPY (register, 0x360, 8)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x3ff4, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x11690, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xc0, 4)
main, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x11694, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xc4, 4)
main, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x208, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x210, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x214, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x116a8, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb8, 4)
main, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (register, 0x370, 8) COPY (register, 0x330, 8)
main, (register, 0x2c, 4) COPY (const, 0xc878, 4)
main, (register, 0x378, 8) COPY (register, 0x348, 8)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x116bc, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xac, 4)
main, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (unique, 0x1f500, 4) INT_ADD (const, 0x116c0, 4) , (const, 0x8, 4)
main, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb0, 4)
main, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
main, (register, 0x360, 8) COPY (register, 0x330, 8)
main, (register, 0x28, 4) COPY (const, 0xc880, 4)
main, (register, 0x368, 8) COPY (register, 0x338, 8)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x400, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1fc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x200, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x204, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x220, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x224, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11b70, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11b28, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (unique, 0x6d600, 4) INT_AND (register, 0x2c, 4) , (register, 0x38, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d600, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d600, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f68, 4) , (register, 0x61, 1)
main,  ---  BRANCH (ram, 0x11780, 4)
main, (register, 0x2c, 4) COPY (const, 0xf518, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11920, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x117f0, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x117c8, 4) , (register, 0x61, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13744, 4) , (unique, 0x2600, 1)
main, (register, 0x300, 8) COPY (register, 0x338, 8)
main, (register, 0x58, 4) COPY (const, 0x117c4, 4)
main,  ---  CALL (ram, 0x112ac, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x117f0, 4) , (register, 0x61, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x137c0, 4) , (unique, 0x2600, 1)
main, (register, 0x300, 8) COPY (register, 0x338, 8)
main, (register, 0x58, 4) COPY (const, 0x117ec, 4)
main,  ---  CALL (ram, 0x112ac, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1184c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11824, 4) , (register, 0x61, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x137a0, 4) , (unique, 0x2600, 1)
main, (register, 0x300, 8) COPY (register, 0x338, 8)
main, (register, 0x58, 4) COPY (const, 0x11820, 4)
main,  ---  CALL (ram, 0x112ac, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1184c, 4) , (register, 0x61, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13780, 4) , (unique, 0x2600, 1)
main, (register, 0x300, 8) COPY (register, 0x338, 8)
main, (register, 0x58, 4) COPY (const, 0x11848, 4)
main,  ---  CALL (ram, 0x112ac, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11868, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11888, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11890, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11894, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x118a8, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x118ac, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x118b0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  CBRANCH (ram, 0x118d0, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x118c8, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x118cc, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x118d0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a8, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b0, 4)
main, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x170, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x168, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x174, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x19c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x198, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12278, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13070, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12a1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x58, 4) COPY (const, 0x11958, 4)
main,  ---  CALL (ram, 0x170bc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x174, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11970, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11980, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x170, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11998, 4) , (unique, 0x2680, 1)
main, (register, 0x24, 4) COPY (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x210, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x114, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x168, 4)
main, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x11c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x208, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (register, 0x300, 8) COPY (register, 0x348, 8)
main, (register, 0x308, 8) COPY (register, 0x350, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x70, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x78, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x11a64, 4)
main,  ---  CALL (ram, 0x17120, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) INT_XOR (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11a74, 4)
main,  ---  CALL (ram, 0x176e8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) COPY (register, 0x48, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x300, 8) COPY (register, 0x360, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x310, 8) COPY (register, 0x368, 8)
main, (register, 0x318, 8) COPY (register, 0x378, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x58, 4) COPY (const, 0x11acc, 4)
main,  ---  CALL (ram, 0x14ac4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11adc, 4)
main,  ---  CALL (ram, 0x14cac, 4)
main, (register, 0x2c, 4) COPY (const, 0xf518, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x4c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11b04, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (register, 0x58, 4) COPY (const, 0x11afc, 4)
main,  ---  CALL (ram, 0x113c0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x131ec, 4) , (unique, 0x2280, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x134, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11c30, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xd550, 4)
main, (register, 0x20, 4) COPY (register, 0x48, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x11b4c, 4)
main,  ---  CALL (ram, 0x1118c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x4c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13778, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x1178c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x48, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x48, 4) , (const, 0xffff, 4)
main, (register, 0x48, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1d8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1d8, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1d8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x20, 4) COPY (register, 0x3c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (const, 0x8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (const, 0x8, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x48, 4) , (const, 0x8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11b98, 4)
main,  ---  CALL (ram, 0x1c718, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3b680, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11c4c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11d48, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x72, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x72, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x72, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x72, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12008, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11c54, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x53, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x53, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x53, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x53, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x121dc, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11e8c, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x49, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x49, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x49, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x49, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x120a4, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12408, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4e, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4e, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4e, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4e, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11bfc, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x1274c, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x51, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x51, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x51, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x51, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12388, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x12e20, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4f, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4f, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4f, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4f, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) COPY (const, 0xc888, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11c20, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12aa8, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x78, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x78, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12ab0, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11b3c, 4) , (unique, 0x1a80, 1)
main, (register, 0x28, 4) COPY (const, 0xf518, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  BRANCH (ram, 0x11b60, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x44, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11718, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5200, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5200, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5200, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x120e4, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11d78, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11fd0, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12398, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4600, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4600, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4600, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4600, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11ca8, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x1271c, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4d00, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4d00, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4d00, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4d00, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12378, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5000, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5000, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5000, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12e64, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4700, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4700, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4700, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4700, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x58, 4) COPY (const, 0x11ca0, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x248, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11cbc, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12b08, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x370, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (register, 0x370, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x125b4, 4) , (unique, 0x2280, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xce04, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11cf8, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11d08, 4) , (unique, 0x2680, 1)
main, (register, 0x350, 8) COPY (register, 0x338, 8)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11d0c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x12f1c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f60, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd214, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11d40, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f50, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xd550, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x11d68, 4)
main,  ---  CALL (ram, 0x1118c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x4c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1178c, 4) , (unique, 0x1a80, 1)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x11d78, 4)
main,  ---  CALL (ram, 0x11498, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6500, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6500, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6500, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6500, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11ff8, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x124dc, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c00, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6c00, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6c00, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6c00, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11e64, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x127f0, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7100, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x7100, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x7100, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x7100, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12340, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x7200, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x7200, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x7200, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12e54, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x7000, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x7000, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x7000, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x48, 4) COPY (const, 0xf480, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x48, 4) , (const, 0xffff, 4)
main, (register, 0x48, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x4c, 4) COPY (const, 0xa, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3a, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3a, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12dc4, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x9, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x9, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x9, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x9, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
main,  ---  CBRANCH (ram, 0x12ea8, 4) , (unique, 0x1f00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x3e780, 4) INT_MULT (register, 0x4c, 4) , (register, 0x34, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x3e780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x30, 4)
main, (register, 0x34, 4) INT_SUB (register, 0x28, 4) , (const, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) INT_SUB (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x9, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x9, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x9, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x9, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11ddc, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x31, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x31, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x31, 4)
main, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x31, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
main,  ---  CBRANCH (ram, 0x12ea8, 4) , (unique, 0x1f00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12ea8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x58, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2cc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2cc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2cc, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x2cc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x21, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x21, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x21, 4)
main, (register, 0x50, 4) INT_ADD (register, 0x30, 4) , (const, 0x21, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) COPY (register, 0x58, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x3, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x3, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (register, 0x30, 4) COPY (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3a, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x3a, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12dcc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12de4, 4) , (register, 0x61, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x50, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x50, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x50, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (const, 0x1, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x20, 4) , (unique, 0x6a380, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e20, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) COPY (register, 0x58, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2d0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2d0, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x2d0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x34, 4) INT_SUB (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11e5c, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x34, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (unique, 0x7800, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8480, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11db8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11e78, 4)
main,  ---  CALL (ram, 0x1b87c, 4)
main, (register, 0x20, 4) CALLOTHER (const, 0x0, 4) , (register, 0x20, 4)
main, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
main, (unique, 0x3880, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x3800, 4)
main, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
main, (unique, 0x3b00, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x5, 4)
main, (register, 0x20, 4) COPY (unique, 0x3b00, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2f4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2f4, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2f4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x80, 4) COPY (register, 0x54, 4)
main, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
main, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
main, (register, 0x80, 4) COPY (register, 0x54, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) COPY (register, 0x80, 4)
main, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
main, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x69, 1) COPY (register, 0xb0, 1)
main, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
main,  ---  RETURN (register, 0x5c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x66, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x66, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x66, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x66, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12050, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12480, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6b, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6b, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6b, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6b, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f0c, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12848, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6d, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12350, 4) , (register, 0x61, 1)
main, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x12e74, 4) , (unique, 0x2280, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x71, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x71, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x71, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x71, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x290, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x290, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x290, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x290, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11ecc, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x131c4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x290, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x370, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (register, 0x370, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12ee4, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcb58, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11f08, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x218, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11f20, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcca4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x11f4c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11780, 4) , (register, 0x61, 1)
main,  ---  BRANCH (ram, 0x11d58, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11f90, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13324, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13628, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11f90, 4)
main,  ---  CALL (ram, 0x17118, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11f98, 4)
main,  ---  CALL (ram, 0x17088, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
main,  ---  CBRANCH (ram, 0x11fa0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x11e80, 4) , (unique, 0x2180, 1)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd23c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x11fc8, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x12200, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12000, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x148, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1201c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcbb4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1204c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x240, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x240, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x240, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x240, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12064, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12b3c, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x240, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x370, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x370, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (register, 0x370, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x125ec, 4) , (unique, 0x2280, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc900, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x120a0, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x49, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x49, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x49, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x49, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x120d8, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12318, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x65, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x65, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x65, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x65, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13064, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129e8, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x67, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x67, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x67, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x67, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12334, 4) , (register, 0x61, 1)
main, (unique, 0x1b80, 1) BOOL_NEGATE (register, 0x62, 1)
main,  ---  CBRANCH (ram, 0x130f4, 4) , (unique, 0x1b80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x69, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x69, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x69, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x69, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129f8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2b8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x4c, 4) COPY (const, 0xf534, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x4c, 4) , (const, 0xffff, 4)
main, (register, 0x4c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1d0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (register, 0x58, 4) COPY (const, 0x12118, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x1369c, 4) , (unique, 0x2600, 1)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13678, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1214c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x136ec, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13678, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12180, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x136c4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main,  ---  CBRANCH (ram, 0x13580, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x125ac, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b84, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b68, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x121d8, 4)
main,  ---  CALL (ram, 0x17118, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x128dc, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129a0, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12220, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129a0, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12db4, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13240, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x278, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x278, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x278, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x278, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x1225c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12db4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x278, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x13250, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1292c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x134, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (register, 0x300, 8) COPY (register, 0x360, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x310, 8) COPY (register, 0x368, 8)
main, (register, 0x318, 8) COPY (register, 0x378, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x12300, 4)
main,  ---  CALL (ram, 0x14b60, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1ec, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f0, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12314, 4)
main,  ---  CALL (ram, 0x14be8, 4)
main,  ---  BRANCH (ram, 0x11adc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x45, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x45, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x45, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x45, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13064, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129cc, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x46, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x46, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x46, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x46, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x130f4, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x47, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x47, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x47, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x47, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129f8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12348, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x140, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc980, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1dc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12364, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13218, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12380, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x75, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x75, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x75, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x75, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x123c4, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x12624, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x73, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x73, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x73, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x73, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12acc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x74, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x74, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x74, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x74, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x123d8, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcc0c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x12404, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x45, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x45, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x45, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x45, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1244c, 4) , (register, 0x61, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x127c0, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x42, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x42, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x42, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x42, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1243c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x43, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x43, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x43, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x43, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12470, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12a90, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x78, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x78, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a98, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x58, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x58, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x124cc, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12fdc, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x124bc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x61, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x61, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x61, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x61, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x12f44, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x124c4, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x124d4, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x114, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5700, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5700, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5700, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5700, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1254c, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12f9c, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5a00, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5a00, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5a00, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5a00, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1253c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6200, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6200, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6200, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1250c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcd70, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x12538, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12544, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x250, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x250, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x250, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x250, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12560, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13134, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x250, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x12578, 4) , (unique, 0x2680, 1)
main, (register, 0x348, 8) COPY (register, 0x338, 8)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x1257c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main,  ---  CBRANCH (ram, 0x11d10, 4) , (unique, 0x1c80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcf20, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x125a4, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11d10, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main,  ---  CBRANCH (ram, 0x11cfc, 4) , (unique, 0x1c80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xce58, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x125e4, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x11cfc, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x125f8, 4) , (unique, 0x2680, 1)
main, (register, 0x358, 8) COPY (register, 0x338, 8)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x1c80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc950, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12620, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x77, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x77, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x77, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x77, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x126d8, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x78, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x78, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) COPY (const, 0xf530, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
main, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12ed0, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13050, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x260, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x260, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x260, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x260, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x1266c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12ed0, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x260, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12da4, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x132c0, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x270, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x270, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x270, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x270, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x126bc, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12da4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x270, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x132d0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x210, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x126ec, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcc64, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x12718, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4200, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4200, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4200, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1273c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4300, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4300, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4300, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4300, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12734, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12744, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x144, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4b, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4b, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4b, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4b, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1276c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4c, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x4c, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12764, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x11c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc980, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1e8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1e8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1e8, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12780, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12798, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
main,  ---  CBRANCH (ram, 0x12794, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2080, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xca44, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x127bc, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x46, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x46, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x46, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x46, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x127e0, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x48, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x48, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x48, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x48, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x127e8, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6600, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6600, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6600, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6600, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12828, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6800, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6800, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6800, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6800, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (register, 0x28, 4) COPY (const, 0xf12c, 4)
main, (register, 0x24, 4) COPY (const, 0xc854, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x350, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12820, 4)
main,  ---  CALL (ram, 0x1bae0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1283c, 4)
main,  ---  CALL (ram, 0x1b080, 4)
main, (register, 0x20, 4) CALLOTHER (const, 0x0, 4) , (register, 0x20, 4)
main, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
main, (unique, 0x3880, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x3800, 4)
main, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
main, (unique, 0x3b00, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x5, 4)
main, (register, 0x20, 4) COPY (unique, 0x3b00, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x67, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x67, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x67, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x67, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1289c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x68, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x68, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x68, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x208, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1286c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x11710, 4) , (unique, 0x2480, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xca04, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x12898, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc980, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1e0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1e0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1e0, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x128b0, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13164, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
main,  ---  CBRANCH (ram, 0x128c4, 4) , (unique, 0x2680, 1)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x128c0, 4) , (const, 0x8, 4)
main, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
main, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
main, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x69, 1) COPY (register, 0xb0, 1)
main, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
main,  ---  BRANCHIND (register, 0x5c, 4)
main,  ---  BRANCH (ram, 0x13100, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc980, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1e4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1e4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1e4, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x128f4, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x121f0, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1e4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xff, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0xff, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xff, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xff, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
main,  ---  CBRANCH (ram, 0x13644, 4) , (unique, 0x1f00, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x135a4, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x68, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) INT_MULT (register, 0x20, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1293c, 4)
main,  ---  CALL (ram, 0x1c758, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x300, 8) COPY (register, 0x360, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x310, 8) COPY (register, 0x368, 8)
main, (register, 0x318, 8) COPY (register, 0x378, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x58, 4) COPY (const, 0x12998, 4)
main,  ---  CALL (ram, 0x14ac4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x12300, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x268, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x268, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x268, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x268, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x129b0, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x11fe4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x268, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x12224, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x41, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x41, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x41, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x41, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13128, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x44, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x44, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x44, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129f8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x61, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x61, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x61, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x61, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13128, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x64, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x64, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x64, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x64, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x129dc, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
main, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xc88c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12a18, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1bc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x150, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x140, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x154, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x144, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x148, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12a58, 4)
main,  ---  CALL (ram, 0x16f20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11940, 4) , (unique, 0x1a80, 1)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd170, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12a88, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x58, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x58, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x58, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x58, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1bc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x50, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcdb8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x12b34, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x248, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x11cfc, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8c0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12b64, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x12b74, 4)
main,  ---  CALL (ram, 0x1b05c, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x12b80, 4)
main,  ---  CALL (ram, 0x176e8, 4)
main,  ---  BRANCH (ram, 0x121c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x198, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x298, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2a0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x19c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a4, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2a8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2b0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12bd8, 4)
main,  ---  CALL (ram, 0x13c3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12c50, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1bc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x150, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x140, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x154, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x144, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x148, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12c20, 4)
main,  ---  CALL (ram, 0x16f20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12c50, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd170, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12c48, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1d0, 4)
main, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c0, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c8, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (register, 0x58, 4) COPY (const, 0x12c68, 4)
main,  ---  CALL (ram, 0x170bc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x174, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12c80, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12c90, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12ca0, 4) , (unique, 0x2680, 1)
main, (register, 0x24, 4) COPY (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x170, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x210, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x114, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x168, 4)
main, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x11c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x208, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x200, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (register, 0x300, 8) COPY (register, 0x348, 8)
main, (register, 0x308, 8) COPY (register, 0x350, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x70, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x78, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x30, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x12d70, 4)
main,  ---  CALL (ram, 0x17120, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12d80, 4)
main,  ---  CALL (ram, 0x176e8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12d90, 4)
main,  ---  CALL (ram, 0x1b020, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12d98, 4)
main,  ---  CALL (ram, 0x111a4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x121b8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x11db8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) COPY (register, 0x2c, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8380, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffe0, 4)
main, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (unique, 0x6a380, 1)
main,  ---  BRANCH (ram, 0x11e50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2f0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffe0, 4)
main, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (unique, 0x6a380, 1)
main,  ---  BRANCH (ram, 0x11e50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x58, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x58, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12f0c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
main, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xca8c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12e1c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12e44, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12df4, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x78, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x78, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12f0c, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12e5c, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x154, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12e6c, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x150, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12e98, 4) , (register, 0x61, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12ef4, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x78, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x78, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12efc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xd270, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x12ecc, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x58, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x58, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xcc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x130, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xce90, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12f3c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11d10, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x230, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x230, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x230, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x230, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12f5c, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x124b0, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x230, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12f84, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12f88, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x11710, 4) , (register, 0x61, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x1353c, 4) , (unique, 0x2480, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c0, 4)
main, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x124b0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5400, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5400, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5400, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5400, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12fcc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5600, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5600, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x5600, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x5600, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x348, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12fc4, 4)
main,  ---  CALL (ram, 0x1bd24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12fd4, 4)
main,  ---  CALL (ram, 0x1c7c4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x54, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x54, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x54, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x54, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12fcc, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x57, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x57, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x57, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x57, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d1c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x258, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x258, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x258, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x258, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x13000, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13194, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x258, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x13018, 4) , (unique, 0x2680, 1)
main, (register, 0x378, 8) COPY (register, 0x338, 8)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x1301c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
main,  ---  CBRANCH (ram, 0x13020, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
main,  ---  CBRANCH (ram, 0x11d10, 4) , (unique, 0x1c80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcd34, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13048, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11d10, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1305c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xac, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x12684, 4) , (register, 0x61, 1)
main,  ---  BRANCH (ram, 0x1265c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x5, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x134, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1dc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (register, 0x300, 8) COPY (register, 0x360, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x310, 8) COPY (register, 0x368, 8)
main, (register, 0x318, 8) COPY (register, 0x378, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x138, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x130f0, 4)
main,  ---  CALL (ram, 0x14b60, 4)
main,  ---  BRANCH (ram, 0x11ad0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc9cc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13124, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x50, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcecc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x13160, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x12568, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf534, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xc984, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13190, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x50, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcce4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x131c0, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x13008, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcb14, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x131e8, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xd1e4, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x13214, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11b08, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcacc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x1323c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x11d1c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1324c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1224c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x132b4, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13288, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13284, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x13308, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x288, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x288, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x288, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x288, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13298, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x132b4, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x288, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x13308, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x132cc, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x126ac, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13318, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13514, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13514, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x198, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x298, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2a0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x19c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a4, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2a8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2b0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13378, 4)
main,  ---  CALL (ram, 0x13c3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x133cc, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1bc, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1b8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x150, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x140, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x154, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x144, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x148, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x133c0, 4)
main,  ---  CALL (ram, 0x16f20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x12a64, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c8, 4)
main, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b8, 4)
main, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c0, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (register, 0x58, 4) COPY (const, 0x133e4, 4)
main,  ---  CALL (ram, 0x170bc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x133fc, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x58, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1340c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x300, 8) COPY (register, 0x348, 8)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1341c, 4) , (unique, 0x2680, 1)
main, (register, 0x58, 4) COPY (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x158, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x174, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x170, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
main, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x114, 4)
main, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x298, 4)
main, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a0, 4)
main, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2a8, 4)
main, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2b0, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x168, 4)
main, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x210, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x3c, 4) INT_ADD (register, 0x54, 4) , (const, 0x210, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x11c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x208, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x44, 4) INT_ADD (register, 0x54, 4) , (const, 0x208, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f8, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
main, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x200, 4)
main, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x220, 4)
main, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x308, 8) COPY (register, 0x350, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x12c, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x40, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x44, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x128, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x48, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x124, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x15c, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x78, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x348, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x70, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x38, 4)
main, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x3c, 4)
main, (register, 0x58, 4) COPY (const, 0x134e0, 4)
main,  ---  CALL (ram, 0x17120, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x134f0, 4)
main,  ---  CALL (ram, 0x176e8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13500, 4)
main,  ---  CALL (ram, 0x1b020, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1ec, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13508, 4)
main,  ---  CALL (ram, 0x111a4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11f80, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x280, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x280, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x280, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x280, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13524, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x13318, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x280, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1a8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x13304, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x228, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x228, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x228, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x228, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x13554, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12f94, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x228, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c0, 4)
main, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x160, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd134, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1359c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x238, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x238, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x238, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x238, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x135bc, 4)
main,  ---  CALL (ram, 0x11378, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12920, 4) , (unique, 0x2600, 1)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x238, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main,  ---  CBRANCH (ram, 0x13718, 4) , (register, 0x60, 1)
main, (unique, 0x11180, 8) COPY (const, 0x0, 8)
main, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
main, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
main, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
main, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
main, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
main, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
main, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
main, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
main, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
main, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
main, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
main, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
main, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
main, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
main, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
main, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
main, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
main, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
main, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
main, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
main, (register, 0x5c, 4) COPY (register, 0xb4, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x135e0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x135e4, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x134, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1360c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcfdc, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13608, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (register, 0x338, 8) COPY (register, 0x368, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xbc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x368, 8) COPY (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x11710, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x13634, 4)
main,  ---  CALL (ram, 0x1b05c, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x13640, 4)
main,  ---  CALL (ram, 0x176e8, 4)
main,  ---  BRANCH (ram, 0x11f88, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (register, 0x24, 4) COPY (const, 0xcf5c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x50, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (register, 0x58, 4) COPY (const, 0x13674, 4)
main,  ---  CALL (ram, 0x11354, 4)
main,  ---  BRANCH (ram, 0x1290c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd058, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x13694, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xd014, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x136bc, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xf510, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xd0e8, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x136e4, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (const, 0xf510, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
main, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x24, 4) , (unique, 0x7800, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (register, 0x24, 4) COPY (const, 0xd0a4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13710, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xcfa8, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (const, 0xf510, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1373c, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (register, 0x338, 8) COPY (register, 0x368, 8)
main,  ---  BRANCH (ram, 0x1360c, 4)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x178, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (const, 0xd1a4, 4)
main, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
main, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x58, 4) COPY (const, 0x13770, 4)
main,  ---  CALL (ram, 0x11354, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x11e80, 4)
main, (register, 0x20, 4) COPY (register, 0x48, 4)
main, (register, 0x58, 4) COPY (const, 0x13780, 4)
main,  ---  CALL (ram, 0x11498, 4)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd1a4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x190, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x13760, 4)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd1a4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x180, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x13760, 4)
main, (register, 0x28, 4) COPY (const, 0xf510, 4)
main, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
main, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
main, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
main, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
main, (register, 0x24, 4) COPY (const, 0xd1a4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x188, 4)
main, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
main,  ---  BRANCH (ram, 0x13760, 4)
_start, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_start, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_start, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_start, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_start, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_start, (register, 0x4c, 4) COPY (const, 0x0, 4)
_start, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
_start, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
_start, (register, 0x66, 1) COPY (register, 0x68, 1)
_start, (register, 0x67, 1) COPY (register, 0x63, 1)
_start, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_start, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_start, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_start, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_start, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_start, (register, 0x58, 4) COPY (const, 0x0, 4)
_start, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
_start, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
_start, (register, 0x66, 1) COPY (register, 0x68, 1)
_start, (register, 0x67, 1) COPY (register, 0x63, 1)
_start, (unique, 0x8800, 4) COPY (register, 0x54, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
_start, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
_start, (register, 0x28, 4) COPY (register, 0x54, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x28, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x20, 4)
_start, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13810, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x50, 4)
_start, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13814, 4)
_start, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13818, 4)
_start, (register, 0x58, 4) COPY (const, 0x1380c, 4)
_start,  ---  CALL (ram, 0x112c4, 4)
_start, (register, 0x58, 4) COPY (const, 0x13810, 4)
_start,  ---  CALL (ram, 0x11480, 4)
call_weak_fn, (register, 0x50, 4) COPY (const, 0x11308, 4)
call_weak_fn, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
call_weak_fn, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
call_weak_fn, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
call_weak_fn, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
call_weak_fn, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
call_weak_fn, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
call_weak_fn, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xd90, 4)
call_weak_fn, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
call_weak_fn, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
call_weak_fn, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x69, 1) COPY (register, 0xb0, 1)
call_weak_fn, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
call_weak_fn,  ---  BRANCHIND (register, 0x5c, 4)
call_weak_fn, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13838, 4)
call_weak_fn, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x1383c, 4)
call_weak_fn, (unique, 0x1780, 4) INT_ADD (const, 0x13824, 4) , (const, 0x8, 4)
call_weak_fn, (register, 0x68, 1) COPY (register, 0x62, 1)
call_weak_fn, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
call_weak_fn, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
call_weak_fn, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
call_weak_fn, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
call_weak_fn, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
call_weak_fn, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
call_weak_fn, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
call_weak_fn, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x62, 1) COPY (register, 0x66, 1)
call_weak_fn, (register, 0x61, 1) COPY (register, 0x65, 1)
call_weak_fn, (register, 0x60, 1) COPY (register, 0x64, 1)
call_weak_fn, (register, 0x63, 1) COPY (register, 0x67, 1)
call_weak_fn, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
call_weak_fn,  ---  CBRANCH (ram, 0x13834, 4) , (unique, 0x2680, 1)
call_weak_fn, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
call_weak_fn, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x69, 1) COPY (register, 0xb0, 1)
call_weak_fn, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
call_weak_fn,  ---  RETURN (register, 0x5c, 4)
call_weak_fn,  ---  BRANCH (ram, 0x11300, 4)
deregister_tm_clones, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13864, 4)
deregister_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13868, 4)
deregister_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6, 4)
deregister_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
deregister_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
deregister_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
deregister_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
deregister_tm_clones, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
deregister_tm_clones, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
deregister_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x13854, 4) , (unique, 0x2680, 1)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  RETURN (register, 0x5c, 4)
deregister_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1386c, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
deregister_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
deregister_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
deregister_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
deregister_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x13860, 4) , (unique, 0x2680, 1)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  RETURN (register, 0x5c, 4)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  BRANCHIND (register, 0x5c, 4)
register_tm_clones, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x138a0, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x2c, 4) COPY (const, 0x2, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x66, 1) COPY (register, 0x68, 1)
register_tm_clones, (register, 0x67, 1) COPY (register, 0x63, 1)
register_tm_clones, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x138a4, 4)
register_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3e00, 4) INT_SUB (const, 0x2, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x3e80, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3e00, 4)
register_tm_clones, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x4100, 4) INT_SRIGHT (register, 0x24, 4) , (const, 0x2, 4)
register_tm_clones, (register, 0x24, 4) COPY (unique, 0x4100, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x66, 1) COPY (register, 0x68, 1)
register_tm_clones, (register, 0x67, 1) COPY (register, 0x63, 1)
register_tm_clones, (register, 0x24, 4) INT_DIV (register, 0x24, 4) , (register, 0x2c, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
register_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
register_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
register_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
register_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x13890, 4) , (unique, 0x2680, 1)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  RETURN (register, 0x5c, 4)
register_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x138a8, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
register_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
register_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
register_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
register_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x1389c, 4) , (unique, 0x2680, 1)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  RETURN (register, 0x5c, 4)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  BRANCHIND (register, 0x5c, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x138d0, 4)
__do_global_dtors_aux, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
__do_global_dtors_aux, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
__do_global_dtors_aux, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
__do_global_dtors_aux, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__do_global_dtors_aux, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__do_global_dtors_aux, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x62, 1) COPY (register, 0x66, 1)
__do_global_dtors_aux, (register, 0x61, 1) COPY (register, 0x65, 1)
__do_global_dtors_aux, (register, 0x60, 1) COPY (register, 0x64, 1)
__do_global_dtors_aux, (register, 0x63, 1) COPY (register, 0x67, 1)
__do_global_dtors_aux, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
__do_global_dtors_aux, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x138c0, 4) , (unique, 0x2680, 1)
__do_global_dtors_aux, (register, 0x80, 4) COPY (register, 0x54, 4)
__do_global_dtors_aux, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) COPY (register, 0x80, 4)
__do_global_dtors_aux, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__do_global_dtors_aux, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x69, 1) COPY (register, 0xb0, 1)
__do_global_dtors_aux, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x5c, 4)
__do_global_dtors_aux, (register, 0x58, 4) COPY (const, 0x138c4, 4)
__do_global_dtors_aux,  ---  CALL (ram, 0x13840, 4)
__do_global_dtors_aux, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
__do_global_dtors_aux, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__do_global_dtors_aux, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__do_global_dtors_aux, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__do_global_dtors_aux, (register, 0x2c, 4) COPY (const, 0x1, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x66, 1) COPY (register, 0x68, 1)
__do_global_dtors_aux, (register, 0x67, 1) COPY (register, 0x63, 1)
__do_global_dtors_aux, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
__do_global_dtors_aux, (register, 0x80, 4) COPY (register, 0x54, 4)
__do_global_dtors_aux, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) COPY (register, 0x80, 4)
__do_global_dtors_aux, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__do_global_dtors_aux, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x69, 1) COPY (register, 0xb0, 1)
__do_global_dtors_aux, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x5c, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13900, 4)
frame_dummy, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
frame_dummy, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
frame_dummy, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
frame_dummy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
frame_dummy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
frame_dummy, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x62, 1) COPY (register, 0x66, 1)
frame_dummy, (register, 0x61, 1) COPY (register, 0x65, 1)
frame_dummy, (register, 0x60, 1) COPY (register, 0x64, 1)
frame_dummy, (register, 0x63, 1) COPY (register, 0x67, 1)
frame_dummy,  ---  CBRANCH (ram, 0x138f8, 4) , (register, 0x61, 1)
frame_dummy, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13904, 4)
frame_dummy, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
frame_dummy, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
frame_dummy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
frame_dummy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
frame_dummy, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x62, 1) COPY (register, 0x66, 1)
frame_dummy, (register, 0x61, 1) COPY (register, 0x65, 1)
frame_dummy, (register, 0x60, 1) COPY (register, 0x64, 1)
frame_dummy, (register, 0x63, 1) COPY (register, 0x67, 1)
frame_dummy,  ---  CBRANCH (ram, 0x138f8, 4) , (register, 0x61, 1)
frame_dummy, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
frame_dummy, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x69, 1) COPY (register, 0xb0, 1)
frame_dummy, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
frame_dummy, (register, 0x58, 4) COPY (const, 0x138f8, 4)
frame_dummy,  ---  CALLIND (register, 0x5c, 4)
frame_dummy, (register, 0x80, 4) COPY (register, 0x54, 4)
frame_dummy, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
frame_dummy, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
frame_dummy, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x54, 4) COPY (register, 0x80, 4)
frame_dummy,  ---  BRANCH (ram, 0x13870, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
clip_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x44, 4) COPY (register, 0x20, 4)
clip_line, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
clip_line, (register, 0x80, 4) COPY (register, 0x54, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
clip_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
clip_line, (register, 0x358, 8) COPY (register, 0x310, 8)
clip_line, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
clip_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x20, 4)
clip_line, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x24, 4)
clip_line, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
clip_line, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
clip_line, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
clip_line, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
clip_line, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
clip_line, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
clip_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
clip_line,  ---  CBRANCH (ram, 0x13b04, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x360, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x360, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x360, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x360, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
clip_line,  ---  CBRANCH (ram, 0x1394c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x4, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13b04, 4) , (unique, 0x2600, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13ac8, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x368, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x368, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x368, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x368, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
clip_line,  ---  CBRANCH (ram, 0x13964, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13ac8, 4) , (unique, 0x2600, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13ae4, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x370, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
clip_line,  ---  CBRANCH (ram, 0x1397c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x4, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13ae4, 4) , (unique, 0x2600, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13ab0, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x378, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x378, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x378, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x378, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13ab0, 4) , (unique, 0x2600, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x350, 8) COPY (register, 0x378, 8)
clip_line, (register, 0x348, 8) COPY (register, 0x370, 8)
clip_line, (register, 0x320, 8) COPY (register, 0x368, 8)
clip_line, (register, 0x328, 8) COPY (register, 0x360, 8)
clip_line, (register, 0x68, 1) COPY (register, 0x62, 1)
clip_line, (register, 0x20, 4) INT_OR (register, 0x58, 4) , (register, 0x50, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13a4c, 4) , (register, 0x61, 1)
clip_line, (register, 0x68, 1) COPY (register, 0x62, 1)
clip_line, (unique, 0x6d600, 4) INT_AND (register, 0x58, 4) , (register, 0x50, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x6d600, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x6d600, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13c30, 4) , (unique, 0x1a80, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x139c0, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x30, 4) COPY (register, 0x50, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x139c4, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x30, 4) COPY (register, 0x58, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13b48, 4) , (register, 0x61, 1)
clip_line, (register, 0x340, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x320, 8)
clip_line, (register, 0x338, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x328, 8)
clip_line, (register, 0x310, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x328, 8)
clip_line, (register, 0x330, 8) COPY (register, 0x308, 8)
clip_line, (register, 0x338, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x338, 8)
clip_line, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
clip_line, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x320, 8)
clip_line, (register, 0x68, 1) COPY (register, 0x62, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x50, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x30, 4)
clip_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x50, 4) , (register, 0x30, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13b74, 4) , (register, 0x61, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13a08, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x330, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
clip_line,  ---  CBRANCH (ram, 0x13a04, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x4, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line,  ---  CBRANCH (ram, 0x13a24, 4) , (unique, 0x2480, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13a10, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x58, 4) COPY (register, 0x34, 4)
clip_line,  ---  CBRANCH (ram, 0x13a24, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x330, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13a20, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x8, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a24, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13b24, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x338, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13b24, 4) , (unique, 0x2600, 1)
clip_line, (register, 0x350, 8) COPY (register, 0x338, 8)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x68, 1) COPY (register, 0x62, 1)
clip_line, (register, 0x20, 4) INT_OR (register, 0x58, 4) , (register, 0x50, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (register, 0x348, 8) COPY (register, 0x330, 8)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x139b0, 4) , (unique, 0x1a80, 1)
clip_line, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x360, 8) , (register, 0x328, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x360, 8) , (register, 0x328, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x360, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x360, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x368, 8) , (register, 0x320, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x368, 8) , (register, 0x320, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x368, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x368, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a5c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) COPY (const, 0x1, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13a60, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x348, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x348, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x370, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a6c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a74, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) COPY (const, 0x3, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13a78, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) COPY (const, 0x1, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x378, 8) , (register, 0x350, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x378, 8) , (register, 0x350, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x378, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x378, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a84, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x1, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13a88, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13a90, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13c28, 4) , (unique, 0x1a80, 1)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x44, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x328, 8)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x24, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x320, 8)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x348, 8)
clip_line, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
clip_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x350, 8)
clip_line, (register, 0x80, 4) COPY (register, 0x54, 4)
clip_line, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
clip_line, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x80, 4) COPY (register, 0x54, 4)
clip_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) COPY (register, 0x80, 4)
clip_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
clip_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
clip_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
clip_line,  ---  RETURN (register, 0x5c, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13998, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x378, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x378, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x378, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x378, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13ac4, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0x2, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line,  ---  BRANCH (ram, 0x13998, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13968, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x368, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x368, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x368, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x368, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13adc, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (const, 0x2, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13970, 4) , (unique, 0x1a80, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13aec, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x58, 4) COPY (register, 0x34, 4)
clip_line,  ---  CBRANCH (ram, 0x13980, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x370, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13afc, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x8, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
clip_line,  ---  CBRANCH (ram, 0x13b00, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line,  ---  BRANCH (ram, 0x13980, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13b0c, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x50, 4) COPY (register, 0x34, 4)
clip_line,  ---  CBRANCH (ram, 0x13950, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x360, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x360, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x360, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x360, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13b1c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x8, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
clip_line,  ---  CBRANCH (ram, 0x13b20, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line,  ---  BRANCH (ram, 0x13950, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13bcc, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x338, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13bcc, 4) , (unique, 0x1c80, 1)
clip_line, (register, 0x350, 8) COPY (register, 0x338, 8)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0x2, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
clip_line, (register, 0x348, 8) COPY (register, 0x330, 8)
clip_line,  ---  BRANCH (ram, 0x139a8, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x8, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13bd8, 4) , (register, 0x61, 1)
clip_line, (register, 0x310, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x320, 8)
clip_line, (register, 0x338, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x328, 8)
clip_line, (register, 0x340, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x328, 8)
clip_line, (register, 0x68, 1) COPY (register, 0x62, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x50, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x30, 4)
clip_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x50, 4) , (register, 0x30, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (register, 0x330, 8) COPY (register, 0x300, 8)
clip_line, (register, 0x338, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x338, 8)
clip_line, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x340, 8)
clip_line, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x320, 8)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x139f0, 4) , (unique, 0x1a80, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13b8c, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x308, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x330, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
clip_line,  ---  CBRANCH (ram, 0x13b88, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x4, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
clip_line,  ---  CBRANCH (ram, 0x13ba8, 4) , (unique, 0x2480, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13b94, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x50, 4) COPY (register, 0x34, 4)
clip_line,  ---  CBRANCH (ram, 0x13ba8, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x300, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x330, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13ba4, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x8, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
clip_line,  ---  CBRANCH (ram, 0x13ba8, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13c08, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x318, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x338, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
clip_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
clip_line,  ---  CBRANCH (ram, 0x13c08, 4) , (unique, 0x2600, 1)
clip_line, (register, 0x320, 8) COPY (register, 0x338, 8)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x328, 8) COPY (register, 0x330, 8)
clip_line,  ---  BRANCH (ram, 0x139a8, 4)
clip_line, (register, 0x350, 8) COPY (register, 0x338, 8)
clip_line, (register, 0x348, 8) COPY (register, 0x330, 8)
clip_line,  ---  BRANCH (ram, 0x139a8, 4)
clip_line, (register, 0x330, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x328, 8)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13be4, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x310, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x320, 8)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13be8, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x310, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x320, 8)
clip_line, (register, 0x340, 8) COPY (register, 0x330, 8)
clip_line, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x320, 8)
clip_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
clip_line,  ---  CBRANCH (ram, 0x13bf4, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x338, 8) COPY (register, 0x318, 8)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
clip_line,  ---  CBRANCH (ram, 0x13bf8, 4) , (unique, 0x2680, 1)
clip_line, (register, 0x338, 8) COPY (register, 0x358, 8)
clip_line, (register, 0x340, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x310, 8)
clip_line, (register, 0x330, 8) FLOAT_DIV (register, 0x340, 8) , (register, 0x330, 8)
clip_line, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x328, 8)
clip_line,  ---  BRANCH (ram, 0x139e8, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
clip_line, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
clip_line, (register, 0x62, 1) COPY (register, 0x66, 1)
clip_line, (register, 0x61, 1) COPY (register, 0x65, 1)
clip_line, (register, 0x60, 1) COPY (register, 0x64, 1)
clip_line, (register, 0x63, 1) COPY (register, 0x67, 1)
clip_line,  ---  CBRANCH (ram, 0x13c1c, 4) , (register, 0x61, 1)
clip_line, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
clip_line, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x358, 8)
clip_line, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x338, 8)
clip_line, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
clip_line, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
clip_line, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
clip_line, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
clip_line, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
clip_line, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
clip_line, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
clip_line, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
clip_line, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
clip_line, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
clip_line, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
clip_line, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
clip_line, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
clip_line, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
clip_line, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
clip_line, (register, 0x5c, 4) COPY (register, 0xb4, 4)
clip_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
clip_line,  ---  CBRANCH (ram, 0x13c1c, 4) , (unique, 0x2680, 1)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (const, 0x2, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
clip_line, (register, 0x320, 8) COPY (register, 0x338, 8)
clip_line, (register, 0x328, 8) COPY (register, 0x330, 8)
clip_line,  ---  BRANCH (ram, 0x139a8, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0x4, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line,  ---  BRANCH (ram, 0x13a98, 4)
clip_line, (register, 0x80, 4) COPY (register, 0x54, 4)
clip_line, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
clip_line, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
clip_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
clip_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
clip_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
clip_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
clip_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
clip_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
clip_line, (register, 0x20, 4) COPY (const, 0x0, 4)
clip_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
clip_line, (register, 0x66, 1) COPY (register, 0x68, 1)
clip_line, (register, 0x67, 1) COPY (register, 0x63, 1)
clip_line, (register, 0x80, 4) COPY (register, 0x54, 4)
clip_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
clip_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
clip_line, (register, 0x54, 4) COPY (register, 0x80, 4)
clip_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
clip_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
clip_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
clip_line,  ---  RETURN (register, 0x5c, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
array_bounds, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x54, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6c, 4) , (register, 0x54, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
array_bounds, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe4, 4)
array_bounds, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
array_bounds, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
array_bounds, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cbc, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c68, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x2c, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c6c, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x28, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c70, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
array_bounds, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c74, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c7c, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x2c, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c80, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x28, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c84, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
array_bounds, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c88, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c90, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c94, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
array_bounds, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c98, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
array_bounds, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13c9c, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ca4, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ca8, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
array_bounds, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cac, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
array_bounds, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cb0, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x54, 4)
array_bounds, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x54, 4)
array_bounds, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) COPY (register, 0x80, 4)
array_bounds, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
array_bounds, (register, 0x69, 1) COPY (register, 0xb0, 1)
array_bounds, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
array_bounds,  ---  RETURN (register, 0x5c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cc4, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
array_bounds, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cc4, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x394, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cc8, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x50, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ccc, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13ccc, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x394, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cd0, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cd0, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x388, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cd4, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13d48, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cdc, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x38c, 4)
array_bounds, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13ce0, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x378, 4)
array_bounds, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cec, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
array_bounds, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cec, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x36c, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cf0, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x50, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cf4, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cf4, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x364, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cf8, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13cf8, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x368, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cfc, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13d00, 4) , (unique, 0x2680, 1)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13d04, 4) , (unique, 0x2680, 1)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13d78, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
array_bounds, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x50, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds,  ---  CBRANCH (ram, 0x14058, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x330, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds,  ---  CBRANCH (ram, 0x14058, 4) , (unique, 0x2600, 1)
array_bounds, (register, 0x338, 8) COPY (register, 0x330, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13d38, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x320, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
array_bounds,  ---  BRANCH (ram, 0x13d84, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
array_bounds, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x50, 4)
array_bounds, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds,  ---  CBRANCH (ram, 0x14050, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x378, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x378, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x378, 8) , (register, 0x370, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x378, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds,  ---  CBRANCH (ram, 0x14050, 4) , (unique, 0x2600, 1)
array_bounds, (register, 0x338, 8) COPY (register, 0x370, 8)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13d68, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2f0, 4)
array_bounds, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (register, 0x370, 8) COPY (register, 0x378, 8)
array_bounds, (register, 0x378, 8) COPY (register, 0x338, 8)
array_bounds,  ---  BRANCH (ram, 0x13ce4, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13d78, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2e0, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13d7c, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2ec, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds,  ---  CBRANCH (ram, 0x14000, 4) , (unique, 0x2600, 1)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x13d8c, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2cc, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x48, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (register, 0x330, 8) COPY (register, 0x338, 8)
array_bounds, (register, 0x4c, 4) COPY (register, 0x28, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x58, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x58, 4)
array_bounds, (register, 0x44, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
array_bounds, (register, 0x30, 4) COPY (register, 0x48, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1f180, 4) INT_SUB (register, 0x44, 4) , (const, 0x50, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13db4, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f180, 4)
array_bounds, (unique, 0x1f180, 4) INT_SUB (register, 0x44, 4) , (const, 0x58, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13db8, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f180, 4)
array_bounds, (unique, 0x1f180, 4) INT_SUB (register, 0x44, 4) , (const, 0x58, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13dbc, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f180, 4)
array_bounds, (unique, 0x1f180, 4) INT_SUB (register, 0x44, 4) , (const, 0x50, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13dc0, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f180, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x48, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f10, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x8380, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffe0, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f10, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x8380, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffff4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x44, 4)
array_bounds, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f04, 4) , (unique, 0x2600, 1)
array_bounds, (unique, 0x11180, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f88, 4) , (unique, 0x2280, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x38, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x300, 8) COPY (register, 0x370, 8)
array_bounds, (register, 0x308, 8) COPY (register, 0x378, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (register, 0x58, 4) COPY (const, 0x13e34, 4)
array_bounds,  ---  CALL (ram, 0x13908, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (unique, 0x6d500, 4) INT_AND (register, 0x20, 4) , (const, 0x1, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
array_bounds, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
array_bounds, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
array_bounds, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x20, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x24, 4)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
array_bounds, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x20, 4) COPY (const, 0x2, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
array_bounds, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
array_bounds, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x58, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x58, 4)
array_bounds, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x48, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x48, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x48, 4)
array_bounds, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x30, 4) COPY (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
array_bounds, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x30, 4) COPY (const, 0x1, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13e8c, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x358, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x358, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
array_bounds,  ---  CBRANCH (ram, 0x13e8c, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x358, 8) COPY (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ea4, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x350, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x350, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ea4, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x350, 8) COPY (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ebc, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x348, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x348, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ebc, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x348, 8) COPY (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x8, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x8, 4)
array_bounds, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ed8, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ed8, 4) , (unique, 0x2680, 1)
array_bounds, (register, 0x340, 8) COPY (register, 0x338, 8)
array_bounds, (register, 0x68, 1) COPY (register, 0x62, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
array_bounds, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x8, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x8, 4)
array_bounds, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds,  ---  CBRANCH (ram, 0x13e6c, 4) , (unique, 0x2280, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (const, 0x1, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (const, 0x1, 4)
array_bounds, (register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (const, 0x68, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (const, 0x68, 4)
array_bounds, (register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x68, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
array_bounds, (register, 0x68, 1) COPY (register, 0x62, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x48, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (register, 0x2c, 4)
array_bounds, (unique, 0x3ba80, 4) INT_SUB (register, 0x48, 4) , (register, 0x2c, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ff8, 4) , (register, 0x61, 1)
array_bounds, (register, 0x338, 8) COPY (register, 0x368, 8)
array_bounds, (register, 0x330, 8) COPY (register, 0x360, 8)
array_bounds,  ---  BRANCH (ram, 0x13dac, 4)
array_bounds, (unique, 0x11180, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
array_bounds,  ---  CBRANCH (ram, 0x13de4, 4) , (unique, 0x1c80, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f34, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x360, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x360, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x360, 8) , (register, 0x370, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x360, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (unique, 0x1f00, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f48, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x378, 8) , (register, 0x360, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x378, 8) , (register, 0x360, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x360, 8) , (register, 0x378, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x378, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x360, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (unique, 0x2280, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f60, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x368, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x368, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x368, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x368, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (unique, 0x1f00, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13f78, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
array_bounds, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x368, 8)
array_bounds, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x368, 8)
array_bounds, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x368, 8) , (register, 0x338, 8)
array_bounds, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
array_bounds, (unique, 0x17580, 1) FLOAT_NAN (register, 0x368, 8)
array_bounds, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
array_bounds, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
array_bounds, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
array_bounds, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
array_bounds, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
array_bounds, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
array_bounds, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
array_bounds, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
array_bounds, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
array_bounds, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
array_bounds, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
array_bounds, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
array_bounds, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
array_bounds, (register, 0x5c, 4) COPY (register, 0xb4, 4)
array_bounds, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (unique, 0x2280, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x20, 4) COPY (const, 0x1, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds,  ---  BRANCH (ram, 0x13e60, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
array_bounds,  ---  CBRANCH (ram, 0x13f20, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13e00, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x38, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x300, 8) COPY (register, 0x370, 8)
array_bounds, (register, 0x308, 8) COPY (register, 0x378, 8)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
array_bounds, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
array_bounds, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
array_bounds, (register, 0x58, 4) COPY (const, 0x13fe0, 4)
array_bounds,  ---  CALL (ram, 0x13908, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (unique, 0x6d500, 4) INT_AND (register, 0x20, 4) , (const, 0x1, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds,  ---  CBRANCH (ram, 0x13ee4, 4) , (register, 0x61, 1)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0x6, 4)
array_bounds, (register, 0x66, 1) COPY (register, 0x68, 1)
array_bounds, (register, 0x67, 1) COPY (register, 0x63, 1)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x20, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x6, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x6, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13e3c, 4) , (unique, 0x1a80, 1)
array_bounds,  ---  BRANCH (ram, 0x13ee4, 4)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14010, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x14000, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x58, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds, (register, 0x348, 8) COPY (register, 0x340, 8)
array_bounds, (register, 0x350, 8) COPY (register, 0x340, 8)
array_bounds, (register, 0x358, 8) COPY (register, 0x340, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14018, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x1401c, 4) , (unique, 0x2680, 1)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x358, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14024, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd4, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14028, 4) , (unique, 0x2680, 1)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x350, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14030, 4) , (unique, 0x2680, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x14034, 4) , (unique, 0x2680, 1)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x348, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
array_bounds, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
array_bounds, (register, 0x62, 1) COPY (register, 0x66, 1)
array_bounds, (register, 0x61, 1) COPY (register, 0x65, 1)
array_bounds, (register, 0x60, 1) COPY (register, 0x64, 1)
array_bounds, (register, 0x63, 1) COPY (register, 0x67, 1)
array_bounds, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
array_bounds,  ---  CBRANCH (ram, 0x13cb0, 4) , (unique, 0x1a80, 1)
array_bounds, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xdc, 4)
array_bounds, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
array_bounds,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x340, 8)
array_bounds, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
array_bounds, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
array_bounds, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
array_bounds, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
array_bounds, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
array_bounds, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x54, 4)
array_bounds, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x54, 4)
array_bounds, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
array_bounds, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
array_bounds, (register, 0x54, 4) COPY (register, 0x80, 4)
array_bounds, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
array_bounds, (register, 0x69, 1) COPY (register, 0xb0, 1)
array_bounds, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
array_bounds,  ---  RETURN (register, 0x5c, 4)
array_bounds, (unique, 0x1f500, 4) INT_ADD (const, 0x14050, 4) , (const, 0x8, 4)
array_bounds, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
array_bounds, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x8, 4)
array_bounds, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
array_bounds,  ---  BRANCH (ram, 0x13ce4, 4)
array_bounds, (unique, 0x1f080, 4) COPY (register, 0x5c, 4)
array_bounds, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
array_bounds,  ---  BRANCH (ram, 0x13d84, 4)
skip_some_whitespace, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
skip_some_whitespace,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
skip_some_whitespace, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
skip_some_whitespace, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
skip_some_whitespace, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
skip_some_whitespace, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x38, 4) COPY (register, 0x20, 4)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x34, 4) COPY (const, 0x0, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace,  ---  BRANCH (ram, 0x140b0, 4)
skip_some_whitespace, (register, 0x58, 4) COPY (const, 0x1408c, 4)
skip_some_whitespace,  ---  CALL (ram, 0x1130c, 4)
skip_some_whitespace, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
skip_some_whitespace, (unique, 0x7100, 4) COPY (register, 0x30, 4)
skip_some_whitespace, (register, 0x2c, 4) INT_AND (unique, 0x7100, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x34, 4)
skip_some_whitespace, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x62, 1) COPY (register, 0x66, 1)
skip_some_whitespace, (register, 0x61, 1) COPY (register, 0x65, 1)
skip_some_whitespace, (register, 0x60, 1) COPY (register, 0x64, 1)
skip_some_whitespace, (register, 0x63, 1) COPY (register, 0x67, 1)
skip_some_whitespace, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
skip_some_whitespace, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
skip_some_whitespace, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
skip_some_whitespace, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
skip_some_whitespace, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x140a0, 4) , (unique, 0x2680, 1)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x28, 4) COPY (const, 0x0, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
skip_some_whitespace, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
skip_some_whitespace, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x140a4, 4) , (unique, 0x2680, 1)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x28, 4) COPY (const, 0x1, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (unique, 0x9380, 4) INT_ADD (register, 0x24, 4) , (register, 0x2c, 4)
skip_some_whitespace, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
skip_some_whitespace, (register, 0x2c, 4) INT_ZEXT (unique, 0x3d180, 2)
skip_some_whitespace, (unique, 0x3800, 4) INT_SUB (const, 0xd, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x3880, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3800, 4)
skip_some_whitespace, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0xd, 4)
skip_some_whitespace, (register, 0x2c, 4) INT_AND (register, 0x28, 4) , (unique, 0x3b00, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x62, 1) COPY (register, 0x66, 1)
skip_some_whitespace, (register, 0x61, 1) COPY (register, 0x65, 1)
skip_some_whitespace, (register, 0x60, 1) COPY (register, 0x64, 1)
skip_some_whitespace, (register, 0x63, 1) COPY (register, 0x67, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x140d8, 4) , (register, 0x61, 1)
skip_some_whitespace, (register, 0x20, 4) COPY (register, 0x38, 4)
skip_some_whitespace, (register, 0x58, 4) COPY (const, 0x140b8, 4)
skip_some_whitespace,  ---  CALL (ram, 0x111e0, 4)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
skip_some_whitespace, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
skip_some_whitespace, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x62, 1) COPY (register, 0x66, 1)
skip_some_whitespace, (register, 0x61, 1) COPY (register, 0x65, 1)
skip_some_whitespace, (register, 0x60, 1) COPY (register, 0x64, 1)
skip_some_whitespace, (register, 0x63, 1) COPY (register, 0x67, 1)
skip_some_whitespace, (register, 0x30, 4) COPY (register, 0x20, 4)
skip_some_whitespace, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x140c4, 4) , (unique, 0x2680, 1)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
skip_some_whitespace,  ---  CBRANCH (ram, 0x14088, 4) , (register, 0x61, 1)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x3b680, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x62, 1) COPY (register, 0x66, 1)
skip_some_whitespace, (register, 0x61, 1) COPY (register, 0x65, 1)
skip_some_whitespace, (register, 0x60, 1) COPY (register, 0x64, 1)
skip_some_whitespace, (register, 0x63, 1) COPY (register, 0x67, 1)
skip_some_whitespace, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x14088, 4) , (unique, 0x1a80, 1)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x20, 4) COPY (const, 0x0, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (register, 0x80, 4) COPY (register, 0x54, 4)
skip_some_whitespace, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x54, 4) COPY (register, 0x80, 4)
skip_some_whitespace, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x69, 1) COPY (register, 0xb0, 1)
skip_some_whitespace, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
skip_some_whitespace,  ---  RETURN (register, 0x5c, 4)
skip_some_whitespace, (register, 0x20, 4) COPY (register, 0x30, 4)
skip_some_whitespace, (register, 0x24, 4) COPY (register, 0x38, 4)
skip_some_whitespace, (register, 0x58, 4) COPY (const, 0x140e4, 4)
skip_some_whitespace,  ---  CALL (ram, 0x11360, 4)
skip_some_whitespace, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
skip_some_whitespace, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
skip_some_whitespace, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
skip_some_whitespace, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
skip_some_whitespace, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x34, 4)
skip_some_whitespace, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x2, 4)
skip_some_whitespace, (register, 0x20, 4) INT_SUB (register, 0x34, 4) , (const, 0x2, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x20, 4) CALLOTHER (const, 0x0, 4) , (register, 0x20, 4)
skip_some_whitespace, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x3880, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x3800, 4)
skip_some_whitespace, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x3b00, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x5, 4)
skip_some_whitespace, (register, 0x20, 4) COPY (unique, 0x3b00, 4)
skip_some_whitespace, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x66, 1) COPY (register, 0x68, 1)
skip_some_whitespace, (register, 0x67, 1) COPY (register, 0x63, 1)
skip_some_whitespace, (register, 0x80, 4) COPY (register, 0x54, 4)
skip_some_whitespace, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
skip_some_whitespace, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
skip_some_whitespace, (register, 0x54, 4) COPY (register, 0x80, 4)
skip_some_whitespace, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x69, 1) COPY (register, 0xb0, 1)
skip_some_whitespace, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
skip_some_whitespace,  ---  RETURN (register, 0x5c, 4)
reset_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
reset_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
reset_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
reset_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
reset_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
reset_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
reset_reader, (register, 0x28, 4) COPY (const, 0x1, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
reset_reader, (register, 0x66, 1) COPY (register, 0x68, 1)
reset_reader, (register, 0x67, 1) COPY (register, 0x63, 1)
reset_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x54, 4)
reset_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
reset_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
reset_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
reset_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
reset_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
reset_reader, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
reset_reader, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x62, 1) COPY (register, 0x66, 1)
reset_reader, (register, 0x61, 1) COPY (register, 0x65, 1)
reset_reader, (register, 0x60, 1) COPY (register, 0x64, 1)
reset_reader, (register, 0x63, 1) COPY (register, 0x67, 1)
reset_reader,  ---  CBRANCH (ram, 0x1411c, 4) , (register, 0x61, 1)
reset_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x3c, 4)
reset_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
reset_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
reset_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
reset_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
reset_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
reset_reader, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
reset_reader, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x62, 1) COPY (register, 0x66, 1)
reset_reader, (register, 0x61, 1) COPY (register, 0x65, 1)
reset_reader, (register, 0x60, 1) COPY (register, 0x64, 1)
reset_reader, (register, 0x63, 1) COPY (register, 0x67, 1)
reset_reader, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
reset_reader, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
reset_reader, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
reset_reader,  ---  CBRANCH (ram, 0x14114, 4) , (unique, 0x2680, 1)
reset_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
reset_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
reset_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
reset_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
reset_reader, (register, 0x28, 4) INT_NEGATE (const, 0x0, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
reset_reader, (register, 0x66, 1) COPY (register, 0x68, 1)
reset_reader, (register, 0x67, 1) COPY (register, 0x63, 1)
reset_reader, (register, 0x68, 1) COPY (register, 0x62, 1)
reset_reader, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
reset_reader, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
reset_reader, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x3c, 4)
reset_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
reset_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x10, 4)
reset_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
reset_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
reset_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
reset_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
reset_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
reset_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
reset_reader, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
reset_reader, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
reset_reader, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
reset_reader, (register, 0x62, 1) COPY (register, 0x66, 1)
reset_reader, (register, 0x61, 1) COPY (register, 0x65, 1)
reset_reader, (register, 0x60, 1) COPY (register, 0x64, 1)
reset_reader, (register, 0x63, 1) COPY (register, 0x67, 1)
reset_reader, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
reset_reader, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
reset_reader,  ---  CBRANCH (ram, 0x14128, 4) , (unique, 0x2680, 1)
reset_reader, (unique, 0x9180, 4) INT_ADD (register, 0x20, 4) , (const, 0x20, 4)
reset_reader, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
reset_reader, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
reset_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
reset_reader, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
reset_reader, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
reset_reader,  ---  CBRANCH (ram, 0x1412c, 4) , (unique, 0x2680, 1)
reset_reader, (unique, 0x9180, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
reset_reader, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
reset_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
reset_reader, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
reset_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
reset_reader, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
reset_reader, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
reset_reader, (register, 0x69, 1) COPY (register, 0xb0, 1)
reset_reader, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
reset_reader,  ---  RETURN (register, 0x5c, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
read_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x34, 4) COPY (register, 0x24, 4)
read_point, (unique, 0x25480, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
read_point, (register, 0x80, 4) COPY (register, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x20, 4) , (const, 0x48, 4)
read_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x30, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
read_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x3c, 4) COPY (register, 0x20, 4)
read_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1414c, 4) , (const, 0x8, 4)
read_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
read_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3c4, 4)
read_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
read_point, (unique, 0x1f500, 4) INT_ADD (const, 0x14150, 4) , (const, 0x8, 4)
read_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
read_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3c8, 4)
read_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
read_point, (unique, 0x1f500, 4) INT_ADD (const, 0x14154, 4) , (const, 0x8, 4)
read_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
read_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3cc, 4)
read_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2c, 4) , (register, 0x54, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x20, 4) , (const, 0x40, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x38, 4)
read_point, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x3c, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x50, 4)
read_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x40, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x44, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x3c, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x40, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x44, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4c, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x5, 4)
read_point, (register, 0x2c, 4) INT_SUB (register, 0x30, 4) , (const, 0x5, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x2c, 4) CALLOTHER (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
read_point, (unique, 0x3880, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3800, 4)
read_point, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
read_point, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x5, 4)
read_point, (register, 0x2c, 4) COPY (unique, 0x3b00, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x50, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x48, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x4c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
read_point, (register, 0x2c, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
read_point, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
read_point,  ---  CBRANCH (ram, 0x141b8, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
read_point, (unique, 0x1780, 4) INT_ADD (const, 0x141b4, 4) , (const, 0x8, 4)
read_point, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
read_point, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
read_point, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
read_point, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_point, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
read_point,  ---  BRANCHIND (register, 0x5c, 4)
read_point,  ---  BRANCH (ram, 0x143c4, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x141dc, 4)
read_point,  ---  CALL (ram, 0x14078, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x143b4, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x141ec, 4)
read_point,  ---  CALL (ram, 0x11324, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x141fc, 4)
read_point,  ---  CALL (ram, 0x111e0, 4)
read_point, (register, 0x30, 4) COPY (register, 0x20, 4)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14208, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x23, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x23, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x23, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x23, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x149c0, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x24, 4) COPY (const, 0xd6b8, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14228, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x2, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14934, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x17, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point,  ---  BRANCH (ram, 0x14244, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x1445c, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x20, 4) COPY (register, 0x30, 4)
read_point, (register, 0x28, 4) COPY (register, 0x24, 4)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14258, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x14238, 4) , (unique, 0x2480, 1)
read_point,  ---  BRANCH (ram, 0x14364, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14270, 4)
read_point,  ---  CALL (ram, 0x14078, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14390, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14280, 4)
read_point,  ---  CALL (ram, 0x111e0, 4)
read_point, (register, 0x30, 4) COPY (register, 0x20, 4)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x1428c, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x69, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x69, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x69, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x69, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x1457c, 4) , (register, 0x61, 1)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14468, 4) , (unique, 0x2600, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6f, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6f, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x6f, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x6f, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x1457c, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x75, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x75, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x75, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x75, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x142a8, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x17, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point,  ---  CBRANCH (ram, 0x142bc, 4) , (register, 0x61, 1)
read_point,  ---  BRANCH (ram, 0x144b0, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14508, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x20, 4) COPY (register, 0x30, 4)
read_point, (register, 0x28, 4) COPY (register, 0x24, 4)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x142d0, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x142b0, 4) , (unique, 0x2480, 1)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd7cc, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x58, 4) COPY (const, 0x142fc, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point,  ---  BRANCH (ram, 0x14364, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14530, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x18, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x2, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (register, 0x338, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x338, 8)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x330, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point,  ---  CBRANCH (ram, 0x14564, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x147f8, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x3, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x3, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x1487c, 4) , (register, 0x61, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x8, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x58, 4) COPY (const, 0x14350, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14830, 4) , (register, 0x61, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14908, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_point, (register, 0x80, 4) COPY (register, 0x54, 4)
read_point, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
read_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x80, 4) COPY (register, 0x54, 4)
read_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) COPY (register, 0x80, 4)
read_point, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_point, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_point, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_point,  ---  RETURN (register, 0x5c, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14378, 4)
read_point,  ---  CALL (ram, 0x1130c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x7100, 4) COPY (register, 0x30, 4)
read_point, (register, 0x2c, 4) INT_AND (unique, 0x7100, 4) , (const, 0xff, 4)
read_point, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
read_point, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
read_point, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
read_point, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x1, 4)
read_point, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x9380, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
read_point, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
read_point, (register, 0x2c, 4) INT_ZEXT (unique, 0x3d180, 2)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x2000, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14a34, 4) , (register, 0x61, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14398, 4)
read_point,  ---  CALL (ram, 0x111e0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b680, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (register, 0x30, 4) COPY (register, 0x20, 4)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14374, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x143ac, 4)
read_point,  ---  CALL (ram, 0x11324, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_point, (register, 0x80, 4) COPY (register, 0x54, 4)
read_point, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
read_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
read_point, (register, 0x80, 4) COPY (register, 0x54, 4)
read_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_point, (register, 0x54, 4) COPY (register, 0x80, 4)
read_point, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_point, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_point, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_point,  ---  RETURN (register, 0x5c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
read_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x143d0, 4)
read_point,  ---  CALL (ram, 0x14078, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x143b4, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x143e0, 4)
read_point,  ---  CALL (ram, 0x11324, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x143f0, 4)
read_point,  ---  CALL (ram, 0x111e0, 4)
read_point, (register, 0x30, 4) COPY (register, 0x20, 4)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x143fc, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x23, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x23, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x23, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x23, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x1494c, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x24, 4) COPY (const, 0xd6b8, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x1441c, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x2, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14934, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x17, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x20, 4) COPY (register, 0x30, 4)
read_point, (register, 0x28, 4) COPY (register, 0x24, 4)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x1443c, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x2600, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14428, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14458, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point,  ---  BRANCH (ram, 0x143c8, 4)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14464, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point,  ---  BRANCH (ram, 0x141d4, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x23, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x23, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x23, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x23, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14478, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x43, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x43, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x43, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x43, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x144b0, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x17, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x20, 4) COPY (register, 0x30, 4)
read_point, (register, 0x28, 4) COPY (register, 0x24, 4)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14490, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x2600, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x17, 4)
read_point, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x20, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x1447c, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x144ac, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point,  ---  BRANCH (ram, 0x14268, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd808, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x144d0, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x3, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x3, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x142d8, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x16, 4)
read_point, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x69, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x69, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x69, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x69, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
read_point,  ---  CBRANCH (ram, 0x144e4, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6f, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6f, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6f, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6f, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x75, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x75, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x75, 4)
read_point, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x75, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x144ec, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x28, 4) CALLOTHER (const, 0x0, 4) , (register, 0x28, 4)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
read_point,  ---  CBRANCH (ram, 0x144f4, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
read_point, (unique, 0x3880, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x3800, 4)
read_point, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
read_point, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b00, 4) INT_RIGHT (register, 0x28, 4) , (const, 0x5, 4)
read_point, (register, 0x28, 4) COPY (unique, 0x3b00, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x68, 1) COPY (register, 0x62, 1)
read_point, (register, 0x2c, 4) INT_OR (register, 0x28, 4) , (register, 0x2c, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x142d8, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x145a4, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point,  ---  BRANCH (ram, 0x14268, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x148dc, 4) , (register, 0x61, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x3, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x3, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x148b0, 4) , (register, 0x61, 1)
read_point, (register, 0x20, 4) COPY (register, 0x34, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x8, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14554, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x2600, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x2, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x1432c, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x1433c, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x2, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point,  ---  BRANCH (ram, 0x143b8, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd7bc, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x16, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x1459c, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x3, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x3, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x142d8, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x20, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x24, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14628, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14780, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x145d4, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14624, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x30, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x147a0, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x145fc, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x147b8, 4) , (unique, 0x2600, 1)
read_point, (register, 0x300, 8) COPY (register, 0x338, 8)
read_point, (register, 0x58, 4) COPY (const, 0x14618, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x147b8, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x2, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14714, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x146d8, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x14644, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14714, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x30, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x146f8, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x1466c, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14694, 4) , (unique, 0x2600, 1)
read_point, (register, 0x300, 8) COPY (register, 0x338, 8)
read_point, (register, 0x58, 4) COPY (const, 0x14688, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point,  ---  CBRANCH (ram, 0x14714, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd814, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x48, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x4c, 4)
read_point, (register, 0x58, 4) COPY (const, 0x146c8, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0xc, 4)
read_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point,  ---  BRANCH (ram, 0x141ac, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14698, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x30, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x14668, 4) , (unique, 0x2480, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x14694, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x1470c, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point,  ---  BRANCH (ram, 0x14694, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14760, 4) , (register, 0x61, 1)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x330, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x48, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x4c, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x40, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x44, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x20, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x24, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x54, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
read_point,  ---  CBRANCH (ram, 0x14770, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14774, 4) , (unique, 0x2680, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x38, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x147bc, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x30, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x145f8, 4) , (unique, 0x2480, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
read_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
read_point,  ---  CBRANCH (ram, 0x147b8, 4) , (unique, 0x2600, 1)
read_point, (register, 0x58, 4) COPY (const, 0x147b4, 4)
read_point,  ---  CALL (ram, 0x112ac, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
read_point, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
read_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd814, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x48, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x4c, 4)
read_point, (register, 0x58, 4) COPY (const, 0x147ec, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x54, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point,  ---  BRANCH (ram, 0x146d0, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x348, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x348, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point,  ---  CBRANCH (ram, 0x143b4, 4) , (register, 0x61, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x4, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x58, 4) COPY (const, 0x1481c, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x338, 4) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (register, 0x338, 8) FLOAT2FLOAT (register, 0x338, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14358, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14850, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point,  ---  CBRANCH (ram, 0x145b4, 4) , (register, 0x61, 1)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd738, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14874, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
read_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x350, 8)
read_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x350, 8)
read_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x338, 8)
read_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
read_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
read_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
read_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
read_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
read_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
read_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
read_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
read_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
read_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
read_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
read_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
read_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
read_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
read_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
read_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
read_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
read_point,  ---  CBRANCH (ram, 0x143b4, 4) , (register, 0x61, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x4, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x58, 4) COPY (const, 0x148a0, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x33c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
read_point, (register, 0x338, 8) INT2FLOAT (unique, 0x30f00, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point,  ---  BRANCH (ram, 0x14350, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x4, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x28, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x148c4, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x33c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
read_point, (register, 0x338, 8) INT2FLOAT (unique, 0x30f00, 8)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x14880, 4) , (unique, 0x2480, 1)
read_point,  ---  BRANCH (ram, 0x14364, 4)
read_point, (register, 0x28, 4) COPY (register, 0x30, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x24, 4) COPY (const, 0x4, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x148f0, 4)
read_point,  ---  CALL (ram, 0x11264, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x338, 4) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (register, 0x338, 8) FLOAT2FLOAT (register, 0x338, 4)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
read_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_point,  ---  CBRANCH (ram, 0x147fc, 4) , (unique, 0x2480, 1)
read_point,  ---  BRANCH (ram, 0x14364, 4)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd6f8, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x58, 4) COPY (const, 0x1492c, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x3, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x3c, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x2c, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14a44, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x18, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (register, 0x338, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x338, 8)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x330, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14980, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x145b4, 4) , (register, 0x61, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd6cc, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x58, 4) COPY (const, 0x149b8, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14a64, 4) , (register, 0x61, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x18, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (register, 0x338, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x338, 8)
read_point, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x330, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x149f4, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point,  ---  CBRANCH (ram, 0x14a84, 4) , (register, 0x61, 1)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
read_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point, (register, 0x28, 4) COPY (const, 0xf510, 4)
read_point, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
read_point, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
read_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x24, 4) COPY (const, 0xd77c, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14a2c, 4)
read_point,  ---  CALL (ram, 0x11354, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x20, 4) COPY (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_point, (register, 0x66, 1) COPY (register, 0x68, 1)
read_point, (register, 0x67, 1) COPY (register, 0x63, 1)
read_point,  ---  BRANCH (ram, 0x14368, 4)
read_point, (register, 0x20, 4) COPY (register, 0x30, 4)
read_point, (register, 0x24, 4) COPY (register, 0x38, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14a40, 4)
read_point,  ---  CALL (ram, 0x11360, 4)
read_point,  ---  BRANCH (ram, 0x143a4, 4)
read_point, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x28, 4) COPY (register, 0x34, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14a58, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point,  ---  BRANCH (ram, 0x1496c, 4)
read_point, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (register, 0x28, 4) COPY (register, 0x34, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14a78, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14364, 4) , (unique, 0x1a80, 1)
read_point,  ---  BRANCH (ram, 0x149e0, 4)
read_point, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
read_point, (register, 0x20, 4) COPY (register, 0x38, 4)
read_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
read_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x58, 4) COPY (const, 0x14a98, 4)
read_point,  ---  CALL (ram, 0x11180, 4)
read_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_point, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_point, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_point, (register, 0x62, 1) COPY (register, 0x66, 1)
read_point, (register, 0x61, 1) COPY (register, 0x65, 1)
read_point, (register, 0x60, 1) COPY (register, 0x64, 1)
read_point, (register, 0x63, 1) COPY (register, 0x67, 1)
read_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_point,  ---  CBRANCH (ram, 0x14a08, 4) , (unique, 0x1a80, 1)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
read_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
read_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x40, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x44, 4)
read_point, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
read_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
read_point, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
read_point, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x40, 4)
read_point, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x44, 4)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
read_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
read_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
read_point,  ---  BRANCH (ram, 0x145b4, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
new_reader, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x4c, 4) COPY (register, 0x20, 4)
new_reader, (unique, 0x25480, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
new_reader, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
new_reader, (register, 0x80, 4) COPY (register, 0x54, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (register, 0x340, 8) COPY (register, 0x308, 8)
new_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x60, 4) , (const, 0x1f, 4)
new_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_reader, (register, 0x20, 4) COPY (const, 0x60, 4)
new_reader, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
new_reader, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
new_reader, (register, 0x66, 1) COPY (register, 0x68, 1)
new_reader, (register, 0x67, 1) COPY (register, 0x63, 1)
new_reader, (register, 0x360, 8) COPY (register, 0x300, 8)
new_reader, (register, 0x30, 4) COPY (register, 0x2c, 4)
new_reader, (register, 0x358, 8) COPY (register, 0x310, 8)
new_reader, (register, 0x48, 4) COPY (register, 0x24, 4)
new_reader, (register, 0x350, 8) COPY (register, 0x318, 8)
new_reader, (register, 0x34, 4) COPY (register, 0x28, 4)
new_reader, (register, 0x348, 8) COPY (register, 0x320, 8)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
new_reader, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x54, 4)
new_reader, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
new_reader, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
new_reader, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (register, 0x58, 4) COPY (const, 0x14b08, 4)
new_reader,  ---  CALL (ram, 0x1c758, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
new_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
new_reader, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_reader, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_reader, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_reader, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_reader, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_reader, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_reader, (register, 0x58, 4) COPY (const, 0x1, 4)
new_reader, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
new_reader, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
new_reader, (register, 0x66, 1) COPY (register, 0x68, 1)
new_reader, (register, 0x67, 1) COPY (register, 0x63, 1)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x18, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x20, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x340, 8)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x30, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x3c, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x40, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x350, 8)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
new_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_reader, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x48, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x348, 8)
new_reader, (register, 0x80, 4) COPY (register, 0x54, 4)
new_reader, (unique, 0x25e80, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
new_reader, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
new_reader, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x10, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
new_reader, (register, 0x80, 4) COPY (register, 0x20, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x38, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x50, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
new_reader, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x54, 4)
new_reader,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
new_reader, (register, 0x80, 4) COPY (register, 0x54, 4)
new_reader, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_reader, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_reader, (register, 0x54, 4) COPY (register, 0x80, 4)
new_reader, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
new_reader, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
new_reader, (register, 0x69, 1) COPY (register, 0xb0, 1)
new_reader, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
new_reader,  ---  RETURN (register, 0x5c, 4)
delete_reader,  ---  BRANCH (ram, 0x111a4, 4)
alter_reader_parameters, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
alter_reader_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
alter_reader_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
alter_reader_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x50, 4) COPY (const, 0x1, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
alter_reader_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
alter_reader_parameters, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
alter_reader_parameters, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x54, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x58, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
alter_reader_parameters, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14b80, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
alter_reader_parameters, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
alter_reader_parameters, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14b88, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
alter_reader_parameters, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x30, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14b98, 4) , (unique, 0x2680, 1)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x310, 8)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x58, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x10, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14ba8, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
alter_reader_parameters, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (register, 0x80, 4) COPY (register, 0x24, 4)
alter_reader_parameters, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14bb0, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x38, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x18, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x300, 8)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14bbc, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
alter_reader_parameters, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x20, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x308, 8)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14bc4, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x3c, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x308, 8)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x40, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14bd0, 4) , (unique, 0x2680, 1)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x318, 8)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x48, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14bd8, 4) , (unique, 0x2680, 1)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x320, 8)
alter_reader_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
alter_reader_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
alter_reader_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
alter_reader_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
alter_reader_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
alter_reader_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
alter_reader_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
alter_reader_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
alter_reader_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
alter_reader_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14be0, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
alter_reader_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
alter_reader_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
alter_reader_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x14be4, 4) , (unique, 0x2680, 1)
alter_reader_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x50, 4)
alter_reader_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
alter_reader_parameters, (register, 0x80, 4) COPY (register, 0x54, 4)
alter_reader_parameters, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
alter_reader_parameters, (register, 0x54, 4) COPY (register, 0x80, 4)
alter_reader_parameters, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
alter_reader_parameters, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x69, 1) COPY (register, 0xb0, 1)
alter_reader_parameters, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
alter_reader_parameters,  ---  RETURN (register, 0x5c, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
read_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x3c, 4) COPY (const, 0x967f, 4)
read_file, (register, 0x38, 4) COPY (register, 0x20, 4)
read_file, (register, 0x40, 4) COPY (register, 0x24, 4)
read_file, (register, 0x34, 4) COPY (register, 0x28, 4)
read_file, (register, 0x48, 4) COPY (register, 0x2c, 4)
read_file, (unique, 0x3f280, 4) INT_LEFT (const, 0x98, 4) , (const, 0x10, 4)
read_file, (unique, 0x3f300, 4) INT_AND (register, 0x3c, 4) , (const, 0xffff, 4)
read_file, (register, 0x3c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x30, 4) COPY (const, 0x68, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
read_file, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
read_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file,  ---  BRANCH (ram, 0x14c20, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
read_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (const, 0x1, 4)
read_file, (register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (const, 0x1, 4)
read_file, (register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_file, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_file, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x50, 4)
read_file, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x24, 4)
read_file, (unique, 0x3ba80, 4) INT_SUB (register, 0x50, 4) , (register, 0x24, 4)
read_file, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_file, (register, 0x2c, 4) INT_MULT (register, 0x30, 4) , (register, 0x50, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_file, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
read_file, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_file, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
read_file,  ---  CBRANCH (ram, 0x14c5c, 4) , (unique, 0x2480, 1)
read_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_file, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x2c, 4)
read_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x3c, 4)
read_file, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x3c, 4)
read_file, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_file, (register, 0x44, 4) COPY (const, 0x7799, 4)
read_file, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
read_file, (unique, 0x3f300, 4) INT_AND (register, 0x44, 4) , (const, 0xffff, 4)
read_file, (register, 0x44, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
read_file, (register, 0x20, 4) COPY (register, 0x4c, 4)
read_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_file, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (register, 0x44, 4)
read_file, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (register, 0x44, 4)
read_file, (register, 0x44, 4) INT_ADD (register, 0x50, 4) , (register, 0x44, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
read_file, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
read_file, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
read_file, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
read_file,  ---  CBRANCH (ram, 0x14c48, 4) , (unique, 0x2680, 1)
read_file, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
read_file, (unique, 0x3300, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x3280, 4)
read_file, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
read_file, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
read_file, (unique, 0x3580, 4) INT_LEFT (register, 0x50, 4) , (const, 0x1, 4)
read_file, (register, 0x44, 4) COPY (unique, 0x3580, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
read_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_file, (register, 0x24, 4) INT_MULT (register, 0x30, 4) , (register, 0x44, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_file, (register, 0x58, 4) COPY (const, 0x14c50, 4)
read_file,  ---  CALL (ram, 0x1c77c, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
read_file, (register, 0x4c, 4) COPY (register, 0x20, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
read_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_file, (unique, 0x3e780, 4) INT_MULT (register, 0x30, 4) , (register, 0x24, 4)
read_file, (register, 0x24, 4) INT_ADD (unique, 0x3e780, 4) , (register, 0x4c, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_file, (register, 0x58, 4) COPY (const, 0x14c68, 4)
read_file,  ---  CALL (ram, 0x14130, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_file, (register, 0x44, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
read_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_file,  ---  CBRANCH (ram, 0x14c14, 4) , (register, 0x61, 1)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x44, 4)
read_file, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x3, 4)
read_file, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x3, 4)
read_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_file,  ---  CBRANCH (ram, 0x14c90, 4) , (register, 0x61, 1)
read_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_file, (register, 0x58, 4) COPY (const, 0x14c84, 4)
read_file,  ---  CALL (ram, 0x140f4, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x44, 4)
read_file, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x1, 4)
read_file, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x1, 4)
read_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_file,  ---  CBRANCH (ram, 0x14c08, 4) , (unique, 0x1a80, 1)
read_file, (register, 0x80, 4) COPY (register, 0x54, 4)
read_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_file, (register, 0x54, 4) COPY (register, 0x80, 4)
read_file, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_file, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_file, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_file, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_file,  ---  RETURN (register, 0x5c, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x28, 4)
read_file, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_file, (register, 0x2c, 4) COPY (const, 0x0, 4)
read_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x28, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_file, (register, 0x58, 4) COPY (const, 0x14ca4, 4)
read_file,  ---  CALL (ram, 0x140f4, 4)
read_file, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x28, 4)
read_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
read_file,  ---  BRANCH (ram, 0x14c08, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
read_and_plot_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x30, 4) COPY (register, 0x20, 4)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6c, 4) , (register, 0x54, 4)
read_and_plot_file, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x6c, 4)
read_and_plot_file, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x6c, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x38, 4) COPY (register, 0x24, 4)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x3c, 4) COPY (const, 0x0, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_and_plot_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_and_plot_file,  ---  BRANCH (ram, 0x14cc8, 4)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14cc8, 4)
read_and_plot_file,  ---  CALL (ram, 0x1a31c, 4)
read_and_plot_file, (register, 0x24, 4) COPY (register, 0x54, 4)
read_and_plot_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14cd4, 4)
read_and_plot_file,  ---  CALL (ram, 0x14130, 4)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_and_plot_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x34, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_and_plot_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_and_plot_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_and_plot_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_and_plot_file, (register, 0x24, 4) COPY (register, 0x54, 4)
read_and_plot_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_and_plot_file,  ---  CBRANCH (ram, 0x14cc4, 4) , (register, 0x61, 1)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x34, 4)
read_and_plot_file, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x3, 4)
read_and_plot_file, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x3, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_and_plot_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_and_plot_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_and_plot_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_and_plot_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_and_plot_file,  ---  CBRANCH (ram, 0x14d0c, 4) , (register, 0x61, 1)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14cf4, 4)
read_and_plot_file,  ---  CALL (ram, 0x140f4, 4)
read_and_plot_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14cfc, 4)
read_and_plot_file,  ---  CALL (ram, 0x1b05c, 4)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x34, 4)
read_and_plot_file, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x1, 4)
read_and_plot_file, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x1, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_and_plot_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_and_plot_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_and_plot_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_and_plot_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x14cc8, 4) , (unique, 0x1a80, 1)
read_and_plot_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
read_and_plot_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_and_plot_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_and_plot_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_and_plot_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x6c, 4)
read_and_plot_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x6c, 4)
read_and_plot_file, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
read_and_plot_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x80, 4) COPY (register, 0x54, 4)
read_and_plot_file, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_and_plot_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_and_plot_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_and_plot_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_and_plot_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_and_plot_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_and_plot_file, (register, 0x54, 4) COPY (register, 0x80, 4)
read_and_plot_file, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_and_plot_file, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_and_plot_file, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_and_plot_file,  ---  RETURN (register, 0x5c, 4)
read_and_plot_file, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
read_and_plot_file, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_and_plot_file, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14d18, 4)
read_and_plot_file,  ---  CALL (ram, 0x140f4, 4)
read_and_plot_file, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
read_and_plot_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
read_and_plot_file, (register, 0x20, 4) COPY (register, 0x38, 4)
read_and_plot_file, (register, 0x58, 4) COPY (const, 0x14d24, 4)
read_and_plot_file,  ---  CALL (ram, 0x1b05c, 4)
read_and_plot_file,  ---  BRANCH (ram, 0x14cc8, 4)
scale1, (register, 0x330, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x300, 8)
scale1, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
scale1, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
scale1, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
scale1, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
scale1, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
scale1, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
scale1, (unique, 0x25480, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
scale1, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
scale1, (register, 0x80, 4) COPY (register, 0x54, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14d34, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x18c, 4)
scale1, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x308, 8) , (register, 0x300, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x308, 8) , (register, 0x300, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x308, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x308, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x66, 1) INT_LESSEQUAL (const, 0x8, 4) , (register, 0x54, 4)
scale1, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x8, 4)
scale1, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x8, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
scale1, (register, 0x348, 8) COPY (register, 0x300, 8)
scale1, (register, 0x300, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x340, 8)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14d48, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x180, 4)
scale1, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14d50, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x180, 4)
scale1, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (register, 0x350, 8) COPY (register, 0x308, 8)
scale1, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
scale1, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
scale1, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
scale1,  ---  CBRANCH (ram, 0x14d5c, 4) , (unique, 0x2680, 1)
scale1, (register, 0x338, 8) COPY (register, 0x328, 8)
scale1, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
scale1, (unique, 0x11180, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
scale1, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
scale1,  ---  CBRANCH (ram, 0x14e68, 4) , (unique, 0x2080, 1)
scale1, (register, 0x300, 8) COPY (register, 0x340, 8)
scale1, (register, 0x38, 4) COPY (register, 0x20, 4)
scale1, (register, 0x30, 4) COPY (register, 0x24, 4)
scale1, (register, 0x58, 4) COPY (const, 0x14d7c, 4)
scale1,  ---  CALL (ram, 0x112ac, 4)
scale1, (register, 0x58, 4) COPY (const, 0x14d80, 4)
scale1,  ---  CALL (ram, 0x11270, 4)
scale1, (register, 0x360, 8) COPY (register, 0x300, 8)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14d84, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x154, 4)
scale1, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (register, 0x300, 8) COPY (register, 0x358, 8)
scale1, (register, 0x308, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x360, 8)
scale1, (register, 0x58, 4) COPY (const, 0x14d94, 4)
scale1,  ---  CALL (ram, 0x111d4, 4)
scale1, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x340, 8)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14d98, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x148, 4)
scale1, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x300, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1,  ---  CBRANCH (ram, 0x14e1c, 4) , (register, 0x60, 1)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14da8, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x140, 4)
scale1, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x300, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1,  ---  CBRANCH (ram, 0x14e58, 4) , (register, 0x60, 1)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14db8, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x138, 4)
scale1, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x300, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1,  ---  CBRANCH (ram, 0x14e60, 4) , (register, 0x60, 1)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x348, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x348, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x350, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
scale1, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
scale1, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
scale1,  ---  CBRANCH (ram, 0x14e00, 4) , (unique, 0x2480, 1)
scale1, (register, 0x300, 8) COPY (register, 0x358, 8)
scale1, (register, 0x308, 8) COPY (register, 0x360, 8)
scale1, (register, 0x58, 4) COPY (const, 0x14de0, 4)
scale1,  ---  CALL (ram, 0x111d4, 4)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14de0, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x118, 4)
scale1, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x2c, 4) COPY (const, 0x0, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x338, 8)
scale1, (unique, 0x1f080, 4) COPY (register, 0x38, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
scale1, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x8, 4)
scale1, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x8, 4)
scale1, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
scale1, (register, 0x80, 4) COPY (register, 0x54, 4)
scale1, (unique, 0x25e80, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
scale1, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
scale1, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
scale1, (register, 0x80, 4) COPY (register, 0x54, 4)
scale1, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
scale1, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
scale1, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
scale1, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
scale1, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
scale1, (register, 0x54, 4) COPY (register, 0x80, 4)
scale1, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
scale1, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
scale1, (register, 0x69, 1) COPY (register, 0xb0, 1)
scale1, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
scale1,  ---  RETURN (register, 0x5c, 4)
scale1, (register, 0x308, 8) COPY (register, 0x360, 8)
scale1, (register, 0x300, 8) COPY (register, 0x358, 8)
scale1, (register, 0x58, 4) COPY (const, 0x14e0c, 4)
scale1,  ---  CALL (ram, 0x111d4, 4)
scale1, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x358, 8)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x2c, 4) COPY (const, 0x0, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1, (unique, 0x1f080, 4) COPY (register, 0x38, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
scale1,  ---  BRANCH (ram, 0x14df0, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x34, 4) COPY (const, 0x0, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
scale1, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x348, 8)
scale1, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x348, 8)
scale1, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x350, 8)
scale1, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
scale1, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
scale1, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
scale1, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
scale1, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
scale1, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
scale1, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
scale1, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
scale1, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
scale1, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
scale1, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
scale1, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
scale1, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
scale1, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
scale1, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
scale1, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
scale1, (register, 0x5c, 4) COPY (register, 0xb4, 4)
scale1, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
scale1, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
scale1,  ---  CBRANCH (ram, 0x14e98, 4) , (unique, 0x2600, 1)
scale1, (register, 0x308, 8) COPY (register, 0x360, 8)
scale1, (register, 0x2c, 4) COPY (const, 0xd860, 4)
scale1, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
scale1, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
scale1, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
scale1, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
scale1, (unique, 0x3300, 4) INT_RIGHT (register, 0x34, 4) , (unique, 0x3280, 4)
scale1, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
scale1, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
scale1, (unique, 0x3580, 4) INT_LEFT (register, 0x34, 4) , (const, 0x3, 4)
scale1, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14e3c, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x9c, 4)
scale1, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
scale1, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
scale1, (register, 0x58, 4) COPY (const, 0x14e48, 4)
scale1,  ---  CALL (ram, 0x111d4, 4)
scale1, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x340, 8)
scale1, (register, 0x2c, 4) COPY (register, 0x34, 4)
scale1, (unique, 0x1f080, 4) COPY (register, 0x38, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
scale1,  ---  BRANCH (ram, 0x14df0, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x34, 4) COPY (const, 0x1, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1,  ---  BRANCH (ram, 0x14e20, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x34, 4) COPY (const, 0x2, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1,  ---  BRANCH (ram, 0x14e20, 4)
scale1, (register, 0x28, 4) COPY (const, 0xf510, 4)
scale1, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
scale1, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
scale1, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
scale1, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
scale1, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
scale1, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
scale1, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
scale1, (register, 0x24, 4) COPY (const, 0xd880, 4)
scale1, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
scale1, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
scale1, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
scale1, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
scale1, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
scale1, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x340, 8)
scale1, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
scale1, (register, 0x58, 4) COPY (const, 0x14e90, 4)
scale1,  ---  CALL (ram, 0x11354, 4)
scale1, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
scale1, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
scale1, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
scale1, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
scale1, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
scale1, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
scale1, (register, 0x20, 4) COPY (const, 0x1, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
scale1, (register, 0x66, 1) COPY (register, 0x68, 1)
scale1, (register, 0x67, 1) COPY (register, 0x63, 1)
scale1, (register, 0x58, 4) COPY (const, 0x14e98, 4)
scale1,  ---  CALL (ram, 0x11318, 4)
scale1, (register, 0x308, 8) COPY (register, 0x360, 8)
scale1, (register, 0x2c, 4) COPY (const, 0xd860, 4)
scale1, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
scale1, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
scale1, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
scale1, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
scale1, (unique, 0x3300, 4) INT_RIGHT (register, 0x34, 4) , (unique, 0x3280, 4)
scale1, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
scale1, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
scale1, (unique, 0x3580, 4) INT_LEFT (register, 0x34, 4) , (const, 0x3, 4)
scale1, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3580, 4)
scale1, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
scale1, (unique, 0x1f500, 4) INT_ADD (const, 0x14ea8, 4) , (const, 0x8, 4)
scale1, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
scale1, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x30, 4)
scale1, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
scale1, (unique, 0x1f080, 4) COPY (register, 0x2c, 4)
scale1, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
scale1, (register, 0x58, 4) COPY (const, 0x14eb4, 4)
scale1,  ---  CALL (ram, 0x111d4, 4)
scale1, (register, 0x340, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x340, 8)
scale1, (register, 0x2c, 4) COPY (register, 0x34, 4)
scale1, (register, 0x300, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x300, 8)
scale1, (unique, 0x1f080, 4) COPY (register, 0x38, 4)
scale1,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x300, 8)
scale1,  ---  BRANCH (ram, 0x14df0, 4)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x308, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x308, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x300, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x50, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
prepare_axis, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
prepare_axis, (register, 0x80, 4) COPY (register, 0x54, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x24, 4) , (register, 0x54, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x24, 4)
prepare_axis, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x24, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x340, 8) COPY (register, 0x300, 8)
prepare_axis, (register, 0x348, 8) COPY (register, 0x308, 8)
prepare_axis, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x318, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
prepare_axis, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x90, 4)
prepare_axis, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15438, 4) , (unique, 0x2480, 1)
prepare_axis, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x308, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x308, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x300, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x30, 4) COPY (register, 0x20, 4)
prepare_axis, (register, 0x350, 8) COPY (register, 0x310, 8)
prepare_axis, (register, 0x38, 4) COPY (register, 0x24, 4)
prepare_axis, (register, 0x378, 8) COPY (register, 0x320, 8)
prepare_axis, (register, 0x48, 4) COPY (register, 0x28, 4)
prepare_axis, (register, 0x4c, 4) COPY (register, 0x2c, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x14f7c, 4) , (unique, 0x1a80, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x14f60, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3c0, 4)
prepare_axis, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (register, 0x300, 8) FLOAT_ADD (register, 0x308, 8) , (register, 0x358, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x14f6c, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (register, 0x348, 8) COPY (register, 0x300, 8)
prepare_axis, (register, 0x300, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x358, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x14f78, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (register, 0x340, 8) COPY (register, 0x300, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x152f0, 4) , (unique, 0x1a80, 1)
prepare_axis, (unique, 0x11180, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1503c, 4) , (unique, 0x1a80, 1)
prepare_axis, (register, 0x300, 8) COPY (register, 0x340, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x308, 8) COPY (register, 0x348, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x14fa4, 4)
prepare_axis,  ---  CALL (ram, 0x14d28, 4)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x340, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1510c, 4) , (register, 0x61, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
prepare_axis, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15370, 4) , (unique, 0x1a80, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x14fbc, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x39c, 4)
prepare_axis, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
prepare_axis, (register, 0x358, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x360, 8) COPY (register, 0x350, 8)
prepare_axis, (register, 0x300, 8) FLOAT_ADD (register, 0x358, 8) , (register, 0x340, 8)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x358, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x14fdc, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x340, 4) COPY (register, 0x33c, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x33c, 4)
prepare_axis, (unique, 0x30f00, 8) INT_SEXT (register, 0x340, 4)
prepare_axis, (register, 0x340, 8) INT2FLOAT (unique, 0x30f00, 8)
prepare_axis, (register, 0x340, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x340, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x358, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x14ff8, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x44, 4) COPY (register, 0x33c, 4)
prepare_axis, (register, 0x33c, 4) COPY (register, 0x44, 4)
prepare_axis, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
prepare_axis, (register, 0x348, 8) INT2FLOAT (unique, 0x30f00, 8)
prepare_axis, (register, 0x348, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x348, 8)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x340, 8)
prepare_axis, (register, 0x368, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x370, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x368, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x368, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x40, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x3, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x3, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15028, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x7800, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)
prepare_axis, (unique, 0x1780, 4) INT_ADD (const, 0x15024, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
prepare_axis, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
prepare_axis, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
prepare_axis, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x69, 1) COPY (register, 0xb0, 1)
prepare_axis, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
prepare_axis,  ---  BRANCHIND (register, 0x5c, 4)
prepare_axis,  ---  BRANCH (ram, 0x15464, 4)
prepare_axis, (register, 0x300, 8) COPY (register, 0x350, 8)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x15048, 4)
prepare_axis,  ---  CALL (ram, 0x112ac, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1504c, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x28, 4) COPY (register, 0x33c, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1505c, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x28, 4) INT_SUB (const, 0x0, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15060, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x24, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1506c, 4) , (unique, 0x2280, 1)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15068, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x24, 4) COPY (register, 0x34, 4)
prepare_axis,  ---  CBRANCH (ram, 0x1542c, 4) , (register, 0x61, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x1506c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2b4, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x15070, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2d8, 4)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x68, 1) COPY (register, 0x62, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
prepare_axis, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15078, 4) , (unique, 0x2280, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x1508c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x294, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15090, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15094, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x328, 8) FLOAT_ABS (register, 0x338, 8)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15098, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x338, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x15098, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2c0, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1509c, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x1509c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2bc, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150a0, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150a4, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x328, 8) FLOAT_ABS (register, 0x338, 8)
prepare_axis, (register, 0x330, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
prepare_axis, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x328, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150bc, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150fc, 4) , (register, 0x60, 1)
prepare_axis, (register, 0x328, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x338, 8)
prepare_axis, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
prepare_axis, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x328, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150d8, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150fc, 4) , (register, 0x60, 1)
prepare_axis, (register, 0x320, 8) COPY (register, 0x350, 8)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x150e0, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x248, 4)
prepare_axis, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
prepare_axis, (register, 0x320, 8) FLOAT_SUB (register, 0x320, 8) , (unique, 0x20b00, 8)
prepare_axis, (register, 0x328, 8) FLOAT_ABS (register, 0x320, 8)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x328, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis,  ---  CBRANCH (ram, 0x150f8, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x3, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1540c, 4) , (unique, 0x1c80, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x340, 8)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x14fb0, 4) , (unique, 0x1a80, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x1510c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x24c, 4)
prepare_axis, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
prepare_axis, (register, 0x368, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x360, 8) COPY (register, 0x350, 8)
prepare_axis, (register, 0x370, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x368, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1512c, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x33c, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1513c, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x44, 4) COPY (register, 0x33c, 4)
prepare_axis,  ---  BRANCH (ram, 0x1501c, 4)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x15148, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x200, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (register, 0x350, 8) FLOAT_DIV (register, 0x360, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x15158, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x3c, 4) COPY (register, 0x33c, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x15168, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x300, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x2c, 4) COPY (register, 0x300, 4)
prepare_axis, (register, 0x68, 1) COPY (register, 0x62, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x3c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1d, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
prepare_axis,  ---  CBRANCH (ram, 0x151b8, 4) , (unique, 0x2600, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x1517c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1d4, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (register, 0x350, 8) FLOAT_DIV (register, 0x360, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1518c, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x3c, 4) COPY (register, 0x33c, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1519c, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x300, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x2c, 4) COPY (register, 0x300, 4)
prepare_axis, (register, 0x68, 1) COPY (register, 0x62, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x3c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1d, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
prepare_axis,  ---  CBRANCH (ram, 0x151b8, 4) , (unique, 0x2600, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x151b0, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x180, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (register, 0x350, 8) FLOAT_MULT (register, 0x360, 8) , (register, 0x350, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x151f4, 4) , (unique, 0x1a80, 1)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x151c8, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x3c, 4) COPY (register, 0x33c, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x151d8, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x2c, 4) COPY (register, 0x33c, 4)
prepare_axis,  ---  BRANCH (ram, 0x1522c, 4)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x151e4, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x16c, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (register, 0x350, 8) FLOAT_DIV (register, 0x360, 8) , (register, 0x350, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15204, 4) , (register, 0x61, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x151f4, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x12c, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x350, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15204, 4) , (unique, 0x2680, 1)
prepare_axis, (register, 0x350, 8) COPY (register, 0x338, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1520c, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x3c, 4) COPY (register, 0x33c, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1521c, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x40, 4) , (const, 0x2, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x40, 4) , (const, 0x2, 4)
prepare_axis, (unique, 0x3b680, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (register, 0x2c, 4) COPY (register, 0x33c, 4)
prepare_axis,  ---  CBRANCH (ram, 0x1523c, 4) , (register, 0x61, 1)
prepare_axis, (register, 0x68, 1) COPY (register, 0x62, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (register, 0x3c, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1d, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15238, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x28, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15240, 4) , (unique, 0x2600, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x28, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x94, 4)
prepare_axis, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x24, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x1f080, 4) COPY (register, 0x38, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x340, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x18, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x98, 4)
prepare_axis, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x348, 8)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x38, 4) , (const, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x358, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x15260, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xd8, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
prepare_axis, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1526c, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x34, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x9c, 4)
prepare_axis, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x64, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x3c, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
prepare_axis, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
prepare_axis, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (register, 0x68, 1) COPY (register, 0x62, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x34, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x24, 4)
prepare_axis, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x24, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x360, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x24, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x350, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x38, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x44, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x378, 8)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
prepare_axis,  ---  CBRANCH (ram, 0x152dc, 4) , (register, 0x61, 1)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x152c4, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x7c, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x358, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x358, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x358, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x358, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x152d4, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x152d8, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis,  ---  CBRANCH (ram, 0x152e4, 4) , (unique, 0x2080, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x24, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x24, 4)
prepare_axis, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x80, 4) COPY (register, 0x54, 4)
prepare_axis, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
prepare_axis, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
prepare_axis, (register, 0x80, 4) COPY (register, 0x54, 4)
prepare_axis, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
prepare_axis, (register, 0x54, 4) COPY (register, 0x80, 4)
prepare_axis, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
prepare_axis, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x69, 1) COPY (register, 0xb0, 1)
prepare_axis, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
prepare_axis,  ---  RETURN (register, 0x5c, 4)
prepare_axis, (register, 0x300, 8) COPY (register, 0x340, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x308, 8) COPY (register, 0x348, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x15304, 4)
prepare_axis,  ---  CALL (ram, 0x14d28, 4)
prepare_axis, (unique, 0x1f500, 4) INT_ADD (const, 0x15304, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15318, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x1531c, 4) , (unique, 0x2680, 1)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
prepare_axis, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
prepare_axis, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15320, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
prepare_axis,  ---  BRANCH (ram, 0x14fa4, 4)
prepare_axis, (register, 0x308, 8) COPY (register, 0x340, 8)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x15374, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2c, 4)
prepare_axis, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1537c, 4)
prepare_axis,  ---  CALL (ram, 0x111d4, 4)
prepare_axis, (register, 0x350, 8) COPY (register, 0x300, 8)
prepare_axis, (register, 0x308, 8) COPY (register, 0x348, 8)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x15384, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x3c, 4)
prepare_axis, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1538c, 4)
prepare_axis,  ---  CALL (ram, 0x111d4, 4)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x350, 8)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x15390, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x38, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (register, 0x348, 8) COPY (register, 0x300, 8)
prepare_axis, (register, 0x358, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x338, 8)
prepare_axis, (register, 0x300, 8) FLOAT_ADD (register, 0x358, 8) , (register, 0x350, 8)
prepare_axis, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x358, 8)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x378, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x153ac, 4)
prepare_axis,  ---  CALL (ram, 0x11270, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x350, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x300, 8) FLOAT_DIV (register, 0x348, 8) , (register, 0x378, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x153b8, 4)
prepare_axis,  ---  CALL (ram, 0x113b4, 4)
prepare_axis, (register, 0x2c, 4) COPY (register, 0x350, 4)
prepare_axis, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
prepare_axis, (register, 0x348, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
prepare_axis, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x62, 1) COPY (register, 0x66, 1)
prepare_axis, (register, 0x61, 1) COPY (register, 0x65, 1)
prepare_axis, (register, 0x60, 1) COPY (register, 0x64, 1)
prepare_axis, (register, 0x63, 1) COPY (register, 0x67, 1)
prepare_axis, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
prepare_axis, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
prepare_axis,  ---  CBRANCH (ram, 0x153d8, 4) , (unique, 0x2600, 1)
prepare_axis, (unique, 0x30f00, 8) INT_SEXT (register, 0x350, 4)
prepare_axis, (register, 0x300, 8) INT2FLOAT (unique, 0x30f00, 8)
prepare_axis, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x378, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x153d4, 4)
prepare_axis,  ---  CALL (ram, 0x112ac, 4)
prepare_axis, (register, 0x340, 8) COPY (register, 0x300, 8)
prepare_axis, (unique, 0x30f00, 8) INT_SEXT (register, 0x348, 4)
prepare_axis, (register, 0x300, 8) INT2FLOAT (unique, 0x30f00, 8)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x44, 4) COPY (const, 0x0, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
prepare_axis,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x153e4, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x8c, 4)
prepare_axis, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x378, 8)
prepare_axis, (register, 0x58, 4) COPY (const, 0x153f0, 4)
prepare_axis,  ---  CALL (ram, 0x112ac, 4)
prepare_axis, (register, 0x358, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x340, 8)
prepare_axis, (register, 0x348, 8) COPY (register, 0x300, 8)
prepare_axis, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
prepare_axis, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
prepare_axis, (register, 0x368, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x370, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x368, 8)
prepare_axis, (register, 0x368, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x368, 8)
prepare_axis,  ---  BRANCH (ram, 0x1501c, 4)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x1540c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xbc, 4)
prepare_axis, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
prepare_axis, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (unique, 0x20b00, 8)
prepare_axis, (register, 0x338, 8) FLOAT_ABS (register, 0x350, 8)
prepare_axis, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
prepare_axis, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
prepare_axis, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
prepare_axis, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
prepare_axis, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
prepare_axis, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
prepare_axis, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
prepare_axis, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
prepare_axis, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
prepare_axis, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
prepare_axis, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
prepare_axis, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
prepare_axis, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
prepare_axis, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
prepare_axis, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
prepare_axis, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
prepare_axis, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
prepare_axis, (register, 0x5c, 4) COPY (register, 0xb4, 4)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15424, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) COPY (const, 0x2, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
prepare_axis, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x15428, 4) , (unique, 0x2680, 1)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x2c, 4) INT_NEGATE (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis,  ---  BRANCH (ram, 0x150fc, 4)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x1542c, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xd4, 4)
prepare_axis, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis, (unique, 0x1f300, 4) INT_ADD (const, 0x15430, 4) , (const, 0x8, 4)
prepare_axis, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
prepare_axis, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xd0, 4)
prepare_axis, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
prepare_axis,  ---  BRANCH (ram, 0x150a8, 4)
prepare_axis, (register, 0x28, 4) COPY (const, 0xf510, 4)
prepare_axis, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
prepare_axis, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
prepare_axis, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
prepare_axis, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
prepare_axis, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
prepare_axis, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
prepare_axis, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
prepare_axis, (register, 0x24, 4) COPY (const, 0xd8b8, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
prepare_axis, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
prepare_axis, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
prepare_axis, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
prepare_axis, (register, 0x58, 4) COPY (const, 0x1545c, 4)
prepare_axis,  ---  CALL (ram, 0x11354, 4)
prepare_axis, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
prepare_axis, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
prepare_axis, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
prepare_axis, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
prepare_axis, (register, 0x20, 4) COPY (const, 0x1, 4)
prepare_axis, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x66, 1) COPY (register, 0x68, 1)
prepare_axis, (register, 0x67, 1) COPY (register, 0x63, 1)
prepare_axis, (register, 0x58, 4) COPY (const, 0x15464, 4)
prepare_axis,  ---  CALL (ram, 0x11318, 4)
prepare_axis, (register, 0x350, 8) COPY (register, 0x360, 8)
prepare_axis,  ---  BRANCH (ram, 0x151ec, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
plot_errorbar, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
plot_errorbar, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
plot_errorbar, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
plot_errorbar, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15490, 4) , (unique, 0x1a80, 1)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x14, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b40, 4) , (register, 0x61, 1)
plot_errorbar, (register, 0x30, 4) COPY (register, 0x20, 4)
plot_errorbar, (register, 0x34, 4) COPY (register, 0x24, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x154a0, 4)
plot_errorbar,  ---  CALL (ram, 0x11384, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (register, 0x24, 4) COPY (const, 0xd684, 4)
plot_errorbar, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
plot_errorbar, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_errorbar, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x154b0, 4)
plot_errorbar,  ---  CALL (ram, 0x111bc, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157e8, 4) , (register, 0x61, 1)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b4c, 4) , (unique, 0x1a80, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x338, 8)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x358, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15510, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3f0, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15514, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15538, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1553c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15540, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1554c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (register, 0x320, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x340, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15554, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x310, 8)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15564, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x308, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x350, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15574, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15578, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x370, 8)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x378, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15588, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x380, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (unique, 0x20b00, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15590, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x370, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15594, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15598, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x155a0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x360, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x155a4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x155ac, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x155b8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x155b8, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x350, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x318, 8)
plot_errorbar, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x368, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x370, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x360, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x155d8, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x155fc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x360, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x155fc, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x304, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15600, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x368, 8) COPY (register, 0x310, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15624, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x360, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15628, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x330, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15634, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15638, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15638, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2c8, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1563c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_errorbar, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15650, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15654, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x300, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1565c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x348, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x348, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15660, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x340, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15664, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x348, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x350, 8)
plot_errorbar, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15670, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x348, 8) COPY (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15674, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x28c, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15678, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x328, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1568c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15690, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15694, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x360, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15698, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x360, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1569c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x156a4, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x25c, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x156a8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x328, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x156b0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x348, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x300, 8)
plot_errorbar, (register, 0x300, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x350, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x338, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x156c8, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar,  ---  CBRANCH (ram, 0x15b88, 4) , (register, 0x61, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x156f0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x210, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x358, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15720, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1e0, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15724, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15748, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1574c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15750, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_errorbar,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1575c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x310, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15764, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x320, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x340, 8)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15774, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x308, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x350, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15784, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15788, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x370, 8)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x378, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15798, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x170, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (unique, 0x20b00, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x157a0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x160, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157a4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157a8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x157b0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x150, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157b4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157bc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x157c8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x157c8, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x140, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x318, 8)
plot_errorbar, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x368, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x370, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x360, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x157e8, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b2c, 4) , (register, 0x61, 1)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b6c, 4) , (unique, 0x1a80, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x330, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x350, 8)
plot_errorbar, (register, 0x370, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x320, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x308, 8)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x1584c, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xbc, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15870, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15874, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_ADD (register, 0x370, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (unique, 0x20b00, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15894, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x318, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15898, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x318, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x15898, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x68, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x1589c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158a0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x378, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158a4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158ac, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158b4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x348, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x318, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x158c4, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3c, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158c8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158cc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x328, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (register, 0x318, 8) COPY (register, 0x348, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158dc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x158e0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (register, 0x300, 8) COPY (register, 0x370, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x350, 8)
plot_errorbar, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f500, 4) INT_ADD (const, 0x158f8, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x158fc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15900, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_errorbar,  ---  BRANCH (ram, 0x15920, 4)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x378, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x368, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x1592c, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar,  ---  CBRANCH (ram, 0x15bbc, 4) , (register, 0x61, 1)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15954, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x44, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x320, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (register, 0x360, 8) COPY (register, 0x310, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x1598c, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x7c, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15990, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15994, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x368, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x340, 8) COPY (register, 0x328, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159ac, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159b0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x340, 8) FLOAT_ADD (register, 0x340, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x340, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x159c8, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xb8, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159cc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159d0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159d8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159e0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159e4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159e8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x350, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159ec, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x358, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x320, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x159f0, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xe0, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159f4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x300, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x159fc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x358, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15a00, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x358, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x15a10, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_errorbar, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar,  ---  CBRANCH (ram, 0x15ba4, 4) , (register, 0x61, 1)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15a38, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x128, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x330, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_errorbar, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_errorbar, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x348, 8)
plot_errorbar, (register, 0x370, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x308, 8)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_errorbar, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15a6c, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x164, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_errorbar, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_errorbar, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x338, 8)
plot_errorbar, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_errorbar, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
plot_errorbar, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_errorbar, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_errorbar, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_errorbar, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_errorbar, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_errorbar, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_errorbar, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_errorbar, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_errorbar, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_errorbar, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_errorbar, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_errorbar, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_errorbar, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x350, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15a90, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x328, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15a94, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x338, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x300, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_ADD (register, 0x370, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x20b00, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (unique, 0x20b00, 8)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ab4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x310, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ab8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x310, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x310, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15ab8, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x1a8, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15abc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ac0, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x378, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ac4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x310, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x368, 8)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15acc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x350, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ad4, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) COPY (register, 0x310, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x378, 8)
plot_errorbar, (register, 0x378, 8) COPY (register, 0x318, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15ae4, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x1d4, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15ae8, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15aec, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_errorbar, (register, 0x310, 8) COPY (register, 0x360, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
plot_errorbar, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15afc, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) COPY (register, 0x328, 8)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_errorbar, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_errorbar, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_errorbar, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_errorbar, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15b00, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x1f8, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x358, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x348, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x300, 8) COPY (register, 0x370, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15b14, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x204, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b18, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_errorbar, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x15b1c, 4) , (unique, 0x2680, 1)
plot_errorbar, (register, 0x350, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x308, 8)
plot_errorbar, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x308, 8) COPY (register, 0x378, 8)
plot_errorbar, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x368, 8)
plot_errorbar, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_errorbar, (register, 0x58, 4) COPY (const, 0x15b2c, 4)
plot_errorbar,  ---  CALL (ram, 0x11390, 4)
plot_errorbar, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_errorbar, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_errorbar, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_errorbar,  ---  BRANCH (ram, 0x11438, 4)
plot_errorbar, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
plot_errorbar, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_errorbar, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_errorbar, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_errorbar, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
plot_errorbar, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_errorbar, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_errorbar, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_errorbar, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_errorbar, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_errorbar, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_errorbar, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_errorbar, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_errorbar, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_errorbar, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_errorbar,  ---  RETURN (register, 0x5c, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15b5c, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x24c, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar,  ---  BRANCH (ram, 0x154ec, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_errorbar, (unique, 0x1f300, 4) INT_ADD (const, 0x15b78, 4) , (const, 0x8, 4)
plot_errorbar, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_errorbar, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x268, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_errorbar, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_errorbar,  ---  BRANCH (ram, 0x15824, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x328, 8) COPY (register, 0x338, 8)
plot_errorbar,  ---  BRANCH (ram, 0x156fc, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
plot_errorbar, (register, 0x310, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x310, 8)
plot_errorbar,  ---  BRANCH (ram, 0x15a44, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_errorbar, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (unique, 0x1f080, 4) COPY (register, 0x34, 4)
plot_errorbar, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_errorbar, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_errorbar, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_errorbar, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_errorbar, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_errorbar, (register, 0x330, 8) COPY (register, 0x338, 8)
plot_errorbar,  ---  BRANCH (ram, 0x15960, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x25480, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x348, 8) COPY (register, 0x300, 8)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xec, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0xec, 4) , (register, 0x54, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x34, 4) COPY (register, 0x24, 4)
print_tick_label, (register, 0x30, 4) COPY (register, 0x20, 4)
print_tick_label, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15bfc, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
print_tick_label,  ---  CBRANCH (ram, 0x15e88, 4) , (register, 0x61, 1)
print_tick_label, (unique, 0x1f280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
print_tick_label, (unique, 0x11180, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
print_tick_label, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
print_tick_label, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
print_tick_label, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
print_tick_label, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
print_tick_label, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
print_tick_label, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
print_tick_label, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
print_tick_label, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
print_tick_label, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
print_tick_label, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
print_tick_label, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
print_tick_label, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
print_tick_label, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
print_tick_label, (register, 0x5c, 4) COPY (register, 0xb4, 4)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15cb0, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x11180, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
print_tick_label, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
print_tick_label, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
print_tick_label, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
print_tick_label, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
print_tick_label, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
print_tick_label, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
print_tick_label, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
print_tick_label, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
print_tick_label, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
print_tick_label, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
print_tick_label, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
print_tick_label, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
print_tick_label, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
print_tick_label, (register, 0x5c, 4) COPY (register, 0xb4, 4)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15e14, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c9c, 4) , (register, 0x61, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15ca8, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
print_tick_label, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
print_tick_label, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd920, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15c44, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2e, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0x2e, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15c50, 4)
print_tick_label,  ---  CALL (ram, 0x1133c, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c58, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x28, 4) COPY (register, 0x20, 4)
print_tick_label,  ---  CBRANCH (ram, 0x15c7c, 4) , (register, 0x61, 1)
print_tick_label, (register, 0x2c, 4) COPY (register, 0x20, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x28, 4) COPY (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label,  ---  BRANCH (ram, 0x15c70, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x24, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x30, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x30, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c70, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
print_tick_label, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c68, 4) , (unique, 0x1a80, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd928, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x30, 4)
print_tick_label, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x348, 8)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15c90, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xec, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) COPY (register, 0x80, 4)
print_tick_label, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x69, 1) COPY (register, 0xb0, 1)
print_tick_label, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
print_tick_label,  ---  RETURN (register, 0x5c, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x44, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15ec0, 4) , (register, 0x61, 1)
print_tick_label, (unique, 0x9180, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
print_tick_label, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
print_tick_label, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
print_tick_label,  ---  BRANCH (ram, 0x15c34, 4)
print_tick_label, (register, 0x300, 8) FLOAT_ABS (register, 0x340, 8)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15cb8, 4)
print_tick_label,  ---  CALL (ram, 0x112ac, 4)
print_tick_label, (register, 0x300, 8) FLOAT_ABS (register, 0x300, 8)
print_tick_label, (unique, 0x1f500, 4) INT_ADD (const, 0x15cbc, 4) , (const, 0x8, 4)
print_tick_label, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
print_tick_label, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x214, 4)
print_tick_label, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
print_tick_label, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
print_tick_label, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x338, 8)
print_tick_label, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x338, 8)
print_tick_label, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x300, 8)
print_tick_label, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
print_tick_label, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
print_tick_label, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
print_tick_label, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
print_tick_label, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
print_tick_label, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
print_tick_label, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
print_tick_label, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
print_tick_label, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
print_tick_label, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
print_tick_label, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
print_tick_label, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
print_tick_label, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
print_tick_label, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
print_tick_label, (register, 0x5c, 4) COPY (register, 0xb4, 4)
print_tick_label, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c10, 4) , (unique, 0x2280, 1)
print_tick_label, (register, 0x2c, 4) SUBPIECE (register, 0x348, 8) , (const, 0x4, 4)
print_tick_label, (register, 0x28, 4) COPY (register, 0x348, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x28, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x28, 4)
print_tick_label, (register, 0x38, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd930, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x38, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15ce4, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x38, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x65, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0x65, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15cf0, 4)
print_tick_label,  ---  CALL (ram, 0x1133c, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x50, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c90, 4) , (register, 0x61, 1)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15e50, 4) , (register, 0x61, 1)
print_tick_label, (unique, 0x11180, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
print_tick_label, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
print_tick_label, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
print_tick_label, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
print_tick_label, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
print_tick_label, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
print_tick_label, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
print_tick_label, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
print_tick_label, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
print_tick_label, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
print_tick_label, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
print_tick_label, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
print_tick_label, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
print_tick_label, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
print_tick_label, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
print_tick_label, (register, 0x5c, 4) COPY (register, 0xb4, 4)
print_tick_label,  ---  CBRANCH (ram, 0x15e34, 4) , (register, 0x61, 1)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x50, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x38, 4)
print_tick_label, (unique, 0x3ba80, 4) INT_SUB (register, 0x50, 4) , (register, 0x38, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa8, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xa8, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xa8, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
print_tick_label, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d1c, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x2c, 4) COPY (register, 0x20, 4)
print_tick_label, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
print_tick_label, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d4c, 4) , (unique, 0x2080, 1)
print_tick_label, (register, 0x2c, 4) COPY (register, 0x38, 4)
print_tick_label, (register, 0x28, 4) COPY (register, 0x20, 4)
print_tick_label, (unique, 0x8800, 4) COPY (register, 0x2c, 4)
print_tick_label, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
print_tick_label, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (register, 0x50, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x50, 4)
print_tick_label, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x50, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x8800, 4) COPY (register, 0x28, 4)
print_tick_label, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x6a380, 1) SUBPIECE (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (unique, 0x6a380, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d28, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xe8, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xe8, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xe8, 4)
print_tick_label, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (const, 0xc0, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (const, 0xc0, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x28, 4) INT_SUB (const, 0xc0, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x28, 4) COPY (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0xc8bc, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x20, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x20, 4)
print_tick_label, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15d64, 4)
print_tick_label,  ---  CALL (ram, 0x11378, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xc980, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15d78, 4)
print_tick_label,  ---  CALL (ram, 0x11378, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x33c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
print_tick_label, (register, 0x308, 8) INT2FLOAT (unique, 0x30f00, 8)
print_tick_label, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d8c, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
print_tick_label, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d90, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
print_tick_label, (unique, 0x1f500, 4) INT_ADD (const, 0x15d90, 4) , (const, 0x8, 4)
print_tick_label, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
print_tick_label, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x148, 4)
print_tick_label, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15d98, 4)
print_tick_label,  ---  CALL (ram, 0x111d4, 4)
print_tick_label, (register, 0x338, 8) FLOAT_DIV (register, 0x340, 8) , (register, 0x300, 8)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd8fc, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x2c, 4) SUBPIECE (register, 0x338, 8) , (const, 0x4, 4)
print_tick_label, (register, 0x28, 4) COPY (register, 0x338, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15db0, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2e, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0x2e, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15dbc, 4)
print_tick_label,  ---  CALL (ram, 0x1133c, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15dc4, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x28, 4) COPY (register, 0x20, 4)
print_tick_label,  ---  CBRANCH (ram, 0x15de8, 4) , (register, 0x61, 1)
print_tick_label, (register, 0x2c, 4) COPY (register, 0x20, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x28, 4) COPY (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label,  ---  BRANCH (ram, 0x15ddc, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x24, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x30, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x30, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15ddc, 4) , (unique, 0x2680, 1)
print_tick_label, (register, 0x68, 1) COPY (register, 0x62, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
print_tick_label, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15dd4, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
print_tick_label, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
print_tick_label, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd900, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x30, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
print_tick_label, (unique, 0x9180, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x38, 4)
print_tick_label, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x3c, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15e08, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xec, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) COPY (register, 0x80, 4)
print_tick_label, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x69, 1) COPY (register, 0xb0, 1)
print_tick_label, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
print_tick_label,  ---  RETURN (register, 0x5c, 4)
print_tick_label, (register, 0x300, 8) FLOAT_ABS (register, 0x350, 8)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15e1c, 4)
print_tick_label,  ---  CALL (ram, 0x112ac, 4)
print_tick_label, (register, 0x300, 8) FLOAT_ABS (register, 0x300, 8)
print_tick_label, (unique, 0x1f500, 4) INT_ADD (const, 0x15e20, 4) , (const, 0x8, 4)
print_tick_label, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
print_tick_label, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb0, 4)
print_tick_label, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
print_tick_label, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
print_tick_label, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x338, 8)
print_tick_label, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x338, 8)
print_tick_label, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x300, 8)
print_tick_label, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
print_tick_label, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
print_tick_label, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
print_tick_label, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
print_tick_label, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
print_tick_label, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
print_tick_label, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
print_tick_label, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
print_tick_label, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
print_tick_label, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
print_tick_label, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
print_tick_label, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
print_tick_label, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
print_tick_label, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
print_tick_label, (register, 0x5c, 4) COPY (register, 0xb4, 4)
print_tick_label, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15ccc, 4) , (unique, 0x2180, 1)
print_tick_label,  ---  BRANCH (ram, 0x15c1c, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x28, 4) COPY (const, 0x30, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x2c, 4) COPY (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x66, 1) COPY (register, 0x68, 1)
print_tick_label, (register, 0x67, 1) COPY (register, 0x63, 1)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0xec, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
print_tick_label, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x80, 4) COPY (register, 0x54, 4)
print_tick_label, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
print_tick_label, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
print_tick_label, (register, 0x54, 4) COPY (register, 0x80, 4)
print_tick_label, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x69, 1) COPY (register, 0xb0, 1)
print_tick_label, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
print_tick_label,  ---  RETURN (register, 0x5c, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x44, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15d04, 4) , (unique, 0x1a80, 1)
print_tick_label, (register, 0x24, 4) COPY (const, 0xc980, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x20, 4) INT_ADD (register, 0x50, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15e70, 4)
print_tick_label,  ---  CALL (ram, 0x11378, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
print_tick_label, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd8f0, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x30, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15e84, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label,  ---  BRANCH (ram, 0x15c90, 4)
print_tick_label, (unique, 0x1f080, 4) COPY (register, 0x28, 4)
print_tick_label, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
print_tick_label, (unique, 0x1f500, 4) INT_ADD (const, 0x15e8c, 4) , (const, 0x8, 4)
print_tick_label, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
print_tick_label, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x4c, 4)
print_tick_label, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
print_tick_label,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15e98, 4)
print_tick_label,  ---  CALL (ram, 0x111d4, 4)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (register, 0x340, 8) COPY (register, 0x300, 8)
print_tick_label, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
print_tick_label, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
print_tick_label, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
print_tick_label, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
print_tick_label, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
print_tick_label, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
print_tick_label, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
print_tick_label, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x62, 1) COPY (register, 0x66, 1)
print_tick_label, (register, 0x61, 1) COPY (register, 0x65, 1)
print_tick_label, (register, 0x60, 1) COPY (register, 0x64, 1)
print_tick_label, (register, 0x63, 1) COPY (register, 0x67, 1)
print_tick_label, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
print_tick_label,  ---  CBRANCH (ram, 0x15c00, 4) , (unique, 0x1a80, 1)
print_tick_label, (unique, 0x1f500, 4) INT_ADD (const, 0x15eac, 4) , (const, 0x8, 4)
print_tick_label, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
print_tick_label, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2c, 4)
print_tick_label, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
print_tick_label, (unique, 0x1f280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
print_tick_label, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15eb8, 4)
print_tick_label,  ---  CALL (ram, 0x111d4, 4)
print_tick_label, (register, 0x350, 8) COPY (register, 0x300, 8)
print_tick_label,  ---  BRANCH (ram, 0x15c04, 4)
print_tick_label, (register, 0x2c, 4) SUBPIECE (register, 0x348, 8) , (const, 0x4, 4)
print_tick_label, (register, 0x28, 4) COPY (register, 0x348, 4)
print_tick_label, (register, 0x24, 4) COPY (const, 0xd918, 4)
print_tick_label, (register, 0x20, 4) COPY (register, 0x30, 4)
print_tick_label, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
print_tick_label, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
print_tick_label, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
print_tick_label, (register, 0x58, 4) COPY (const, 0x15ed4, 4)
print_tick_label,  ---  CALL (ram, 0x113fc, 4)
print_tick_label,  ---  BRANCH (ram, 0x15c90, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x30, 4) COPY (register, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x800, 4) , (register, 0x54, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x800, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x800, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x18, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x350, 8) COPY (register, 0x300, 8)
plot_abscissa_log_subsubtick, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1b8, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15fb8, 4) , (register, 0x60, 1)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15f38, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x340, 8) COPY (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c0, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x15f48, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111f8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb8, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x300, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x300, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15f74, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x300, 8) COPY (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x15f7c, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x1121c, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x15f7c, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x38c, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15fac, 4) , (unique, 0x2480, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15fc4, 4) , (unique, 0x2600, 1)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x800, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_abscissa_log_subsubtick, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_abscissa_log_subsubtick, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_abscissa_log_subsubtick,  ---  RETURN (register, 0x5c, 4)
plot_abscissa_log_subsubtick, (register, 0x340, 8) COPY (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15f38, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf4, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16340, 4) , (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x340, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x15fe4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
plot_abscissa_log_subsubtick, (unique, 0x1780, 4) INT_ADD (const, 0x15fe0, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
plot_abscissa_log_subsubtick, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
plot_abscissa_log_subsubtick, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
plot_abscissa_log_subsubtick,  ---  BRANCHIND (register, 0x5c, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15fac, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) COPY (const, 0xd68c, 4)
plot_abscissa_log_subsubtick, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16008, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111bc, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16020, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16024, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16028, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1602c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16030, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16030, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2f0, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16034, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16034, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2dc, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16044, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x310, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1604c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x310, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) COPY (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16074, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x1608c, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x294, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16090, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16094, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x160a8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x160b0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x160d0, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) COPY (const, 0xd684, 4)
plot_abscissa_log_subsubtick, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x160e0, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111bc, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16524, 4) , (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16100, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16104, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16108, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16108, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x218, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1610c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16110, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16114, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16138, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16140, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16164, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1617c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16180, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16184, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16184, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x19c, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16188, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1618c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16190, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x161b0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x161b8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x161e4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x161f4, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16420, 4) , (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16214, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16218, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1621c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x1621c, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x104, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16220, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16224, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16228, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1624c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16254, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16278, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16290, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16294, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16298, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162a0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x162a4, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x7c, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162a8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162ac, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162d0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162d4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x162e0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x360, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16308, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15fac, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) COPY (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16344, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x1634c, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111d4, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0xb0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xb0, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xb0, 4)
plot_abscissa_log_subsubtick, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x1635c, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x15bd8, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16628, 4) , (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16384, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x64, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16388, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16390, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16398, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ABS (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x163b8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x163c0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x163cc, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x9c, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x163d4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) COPY (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
plot_abscissa_log_subsubtick, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x163fc, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x24, 4) COPY (const, 0x63, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_abscissa_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x74, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x28, 4) COPY (const, 0x74, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_abscissa_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16410, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11408, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15fd0, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1642c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16430, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16434, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16434, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x114, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16438, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1643c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16440, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16464, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1646c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16490, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164a8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164ac, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164b0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164b8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x164bc, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x19c, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164c0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164c4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164e8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164ec, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x350, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x164f8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x360, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16520, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15fac, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16530, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16534, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16538, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16538, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x218, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1653c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16540, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16544, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16568, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16570, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16594, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165ac, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165b0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165b4, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x165b4, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x294, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165b8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165bc, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165c0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165e0, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x165e8, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16614, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x340, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x318, 8)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x358, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16624, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x161f4, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_abscissa_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_abscissa_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_abscissa_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_abscissa_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_abscissa_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_abscissa_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_abscissa_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_abscissa_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_abscissa_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_abscissa_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_abscissa_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_abscissa_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_abscissa_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_abscissa_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_abscissa_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_abscissa_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x1663c, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x31c, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16640, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_abscissa_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16648, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16650, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x328, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (register, 0x358, 8) FLOAT_ABS (register, 0x358, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_abscissa_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_abscissa_log_subsubtick, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_abscissa_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16670, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x16678, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x328, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16684, 4) , (const, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_abscissa_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x354, 4)
plot_abscissa_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_abscissa_log_subsubtick, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x1668c, 4) , (unique, 0x2680, 1)
plot_abscissa_log_subsubtick, (register, 0x328, 8) COPY (register, 0x320, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x358, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_abscissa_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_abscissa_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
plot_abscissa_log_subsubtick, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
plot_abscissa_log_subsubtick, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
plot_abscissa_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x378, 8) , (register, 0x308, 8)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x166b4, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) COPY (register, 0x54, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x24, 4) COPY (const, 0x63, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_abscissa_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x62, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x28, 4) COPY (const, 0x62, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_abscissa_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_abscissa_log_subsubtick, (register, 0x58, 4) COPY (const, 0x166c8, 4)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x11408, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_abscissa_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_abscissa_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_abscissa_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_abscissa_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_abscissa_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x15fd0, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x30, 4) COPY (register, 0x20, 4)
plot_ordinate_log_subsubtick, (unique, 0x25480, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x800, 4) , (register, 0x54, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x68, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) COPY (register, 0x300, 8)
plot_ordinate_log_subsubtick, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1b8, 4)
plot_ordinate_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x167a8, 4) , (register, 0x60, 1)
plot_ordinate_log_subsubtick, (register, 0x358, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16728, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x340, 8) COPY (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c0, 4)
plot_ordinate_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16738, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111f8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x130, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16764, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x300, 8) COPY (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x1676c, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x1121c, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x1676c, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x374, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x1679c, 4) , (unique, 0x2480, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x167b4, 4) , (unique, 0x2600, 1)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (unique, 0x25e80, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_ordinate_log_subsubtick, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_ordinate_log_subsubtick,  ---  RETURN (register, 0x5c, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) COPY (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x358, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x16728, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x16c, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16b18, 4) , (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x360, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x167d4, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
plot_ordinate_log_subsubtick, (unique, 0x1780, 4) INT_ADD (const, 0x167d0, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
plot_ordinate_log_subsubtick, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
plot_ordinate_log_subsubtick, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
plot_ordinate_log_subsubtick,  ---  BRANCHIND (register, 0x5c, 4)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x1679c, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (const, 0xd68c, 4)
plot_ordinate_log_subsubtick, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x167f8, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111bc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x167fc, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2ec, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16820, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16820, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2e8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16824, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) COPY (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16840, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16844, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16848, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x1684c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16850, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16854, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16864, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16890, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16894, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16898, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x1689c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x1689c, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x26c, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x168a0, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x168a4, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x168b4, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x168b8, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x168c8, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (const, 0xd684, 4)
plot_ordinate_log_subsubtick, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x168d8, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111bc, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16d00, 4) , (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16920, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1e8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16924, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x1693c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16940, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16944, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16954, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x169a0, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16dd0, 4) , (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x169d4, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c1c, 4) , (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16a20, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xe8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16a24, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16a38, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16a3c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16a40, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16a50, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16a8c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x360, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x360, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16cec, 4) , (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f500, 4) INT_ADD (const, 0x16ab8, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x50, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16ad8, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111ec, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x800, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (unique, 0x25e80, 4) INT_MULT (const, 0xa, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_ordinate_log_subsubtick, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_ordinate_log_subsubtick, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_ordinate_log_subsubtick,  ---  RETURN (register, 0x5c, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) COPY (register, 0x350, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16b1c, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16b24, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111d4, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x128, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x128, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x128, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x60, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16b34, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x15bd8, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16de8, 4) , (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16b70, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16b74, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x74, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x358, 8) FLOAT_ABS (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16b80, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x318, 8) COPY (register, 0x310, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16bac, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xa4, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16bb0, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16bb8, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16bc0, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16bc4, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16bd4, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16be0, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111c8, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) COPY (register, 0x300, 8)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (const, 0x6c, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_ordinate_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x28, 4) COPY (const, 0x63, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_ordinate_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16bf8, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11408, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x198, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x198, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c14, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) COPY (register, 0x348, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x167c0, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16c58, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x150, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c5c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c74, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c78, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16c7c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16c8c, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x310, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16cd0, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x360, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x360, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (register, 0x340, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16aac, 4) , (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (register, 0x350, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x16ac4, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16d3c, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x234, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16d40, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16d58, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16d5c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16d60, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16d70, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16dbc, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x340, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x169b4, 4) , (register, 0x61, 1)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16dd8, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2d0, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x169c0, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_ordinate_log_subsubtick, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x17280, 1) FLOAT_LESS (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x358, 8) , (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x17500, 1) FLOAT_NAN (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_ordinate_log_subsubtick, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_ordinate_log_subsubtick, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_ordinate_log_subsubtick, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_ordinate_log_subsubtick, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_ordinate_log_subsubtick, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_ordinate_log_subsubtick, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_ordinate_log_subsubtick, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_ordinate_log_subsubtick, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_ordinate_log_subsubtick, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_ordinate_log_subsubtick, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_ordinate_log_subsubtick, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_ordinate_log_subsubtick, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16e18, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x320, 4)
plot_ordinate_log_subsubtick, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16e1c, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x31c, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x358, 8) FLOAT_ABS (register, 0x358, 8)
plot_ordinate_log_subsubtick, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16e28, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x318, 8) COPY (register, 0x310, 8)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_ordinate_log_subsubtick, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_ordinate_log_subsubtick, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_ordinate_log_subsubtick, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_ordinate_log_subsubtick, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
plot_ordinate_log_subsubtick, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x358, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
plot_ordinate_log_subsubtick, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
plot_ordinate_log_subsubtick, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f300, 4) INT_ADD (const, 0x16e54, 4) , (const, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_ordinate_log_subsubtick, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x34c, 4)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16e58, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_ordinate_log_subsubtick, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16e60, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (register, 0x300, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x300, 8)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16e68, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_ordinate_log_subsubtick, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x16e6c, 4) , (unique, 0x2680, 1)
plot_ordinate_log_subsubtick, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_ordinate_log_subsubtick, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_ordinate_log_subsubtick, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
plot_ordinate_log_subsubtick, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16e7c, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x11240, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (register, 0x58, 4) COPY (const, 0x16e88, 4)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x111c8, 4)
plot_ordinate_log_subsubtick, (register, 0x348, 8) COPY (register, 0x300, 8)
plot_ordinate_log_subsubtick, (register, 0x2c, 4) COPY (register, 0x54, 4)
plot_ordinate_log_subsubtick, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_ordinate_log_subsubtick, (unique, 0x2e80, 4) INT_RIGHT (const, 0x72, 4) , (const, 0x1f, 4)
plot_ordinate_log_subsubtick, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_ordinate_log_subsubtick, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_ordinate_log_subsubtick, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_ordinate_log_subsubtick, (register, 0x24, 4) COPY (const, 0x72, 4)
plot_ordinate_log_subsubtick, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_ordinate_log_subsubtick, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x16bf0, 4)
compute_outcode, (unique, 0x1f500, 4) INT_ADD (const, 0x16e9c, 4) , (const, 0x8, 4)
compute_outcode, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
compute_outcode, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x74, 4)
compute_outcode, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x20, 4)
compute_outcode, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x18, 4)
compute_outcode, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
compute_outcode, (register, 0x2c, 4) COPY (register, 0x20, 4)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x20, 4) , (const, 0x70, 4)
compute_outcode, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
compute_outcode, (register, 0x328, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x328, 8)
compute_outcode, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
compute_outcode, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x300, 8)
compute_outcode, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x300, 8)
compute_outcode, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x300, 8) , (register, 0x328, 8)
compute_outcode, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
compute_outcode, (unique, 0x17580, 1) FLOAT_NAN (register, 0x300, 8)
compute_outcode, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
compute_outcode, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
compute_outcode, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
compute_outcode, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
compute_outcode, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
compute_outcode, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
compute_outcode, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
compute_outcode, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
compute_outcode, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
compute_outcode, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
compute_outcode, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
compute_outcode, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
compute_outcode, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
compute_outcode, (register, 0x5c, 4) COPY (register, 0xb4, 4)
compute_outcode, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
compute_outcode,  ---  CBRANCH (ram, 0x16ec8, 4) , (unique, 0x2680, 1)
compute_outcode, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compute_outcode, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compute_outcode, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compute_outcode, (register, 0x20, 4) COPY (const, 0x4, 4)
compute_outcode, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x66, 1) COPY (register, 0x68, 1)
compute_outcode, (register, 0x67, 1) COPY (register, 0x63, 1)
compute_outcode,  ---  CBRANCH (ram, 0x16ee4, 4) , (register, 0x60, 1)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x10, 4)
compute_outcode, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
compute_outcode, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
compute_outcode, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (register, 0x330, 8)
compute_outcode, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (register, 0x330, 8)
compute_outcode, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x300, 8)
compute_outcode, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
compute_outcode, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
compute_outcode, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
compute_outcode, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
compute_outcode, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
compute_outcode, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
compute_outcode, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
compute_outcode, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
compute_outcode, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
compute_outcode, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
compute_outcode, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
compute_outcode, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
compute_outcode, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
compute_outcode, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
compute_outcode, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
compute_outcode, (register, 0x5c, 4) COPY (register, 0xb4, 4)
compute_outcode, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
compute_outcode,  ---  CBRANCH (ram, 0x16ee0, 4) , (unique, 0x2680, 1)
compute_outcode, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compute_outcode, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compute_outcode, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compute_outcode, (register, 0x20, 4) COPY (const, 0x8, 4)
compute_outcode, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x66, 1) COPY (register, 0x68, 1)
compute_outcode, (register, 0x67, 1) COPY (register, 0x63, 1)
compute_outcode, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
compute_outcode, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
compute_outcode,  ---  CBRANCH (ram, 0x16ee4, 4) , (unique, 0x2680, 1)
compute_outcode, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compute_outcode, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compute_outcode, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compute_outcode, (register, 0x20, 4) COPY (const, 0x0, 4)
compute_outcode, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x66, 1) COPY (register, 0x68, 1)
compute_outcode, (register, 0x67, 1) COPY (register, 0x63, 1)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x68, 4)
compute_outcode, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (register, 0x330, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
compute_outcode, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
compute_outcode, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x308, 8)
compute_outcode, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x308, 8)
compute_outcode, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x330, 8)
compute_outcode, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
compute_outcode, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
compute_outcode, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
compute_outcode, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
compute_outcode, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
compute_outcode, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
compute_outcode, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
compute_outcode, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
compute_outcode, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
compute_outcode, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
compute_outcode, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
compute_outcode, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
compute_outcode, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
compute_outcode, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
compute_outcode, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
compute_outcode, (register, 0x5c, 4) COPY (register, 0xb4, 4)
compute_outcode,  ---  CBRANCH (ram, 0x16f10, 4) , (register, 0x60, 1)
compute_outcode, (unique, 0x1f280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x60, 4)
compute_outcode, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
compute_outcode, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
compute_outcode, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
compute_outcode, (unique, 0x17280, 1) FLOAT_LESS (register, 0x308, 8) , (register, 0x338, 8)
compute_outcode, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x308, 8) , (register, 0x338, 8)
compute_outcode, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x308, 8)
compute_outcode, (unique, 0x17500, 1) FLOAT_NAN (register, 0x308, 8)
compute_outcode, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
compute_outcode, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
compute_outcode, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
compute_outcode, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
compute_outcode, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
compute_outcode, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
compute_outcode, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
compute_outcode, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
compute_outcode, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
compute_outcode, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
compute_outcode, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
compute_outcode, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
compute_outcode, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
compute_outcode, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
compute_outcode, (register, 0x5c, 4) COPY (register, 0xb4, 4)
compute_outcode, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
compute_outcode,  ---  CBRANCH (ram, 0x16f0c, 4) , (unique, 0x2680, 1)
compute_outcode, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compute_outcode, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compute_outcode, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compute_outcode, (register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0x2, 4)
compute_outcode, (register, 0x66, 1) COPY (register, 0x68, 1)
compute_outcode, (register, 0x67, 1) COPY (register, 0x63, 1)
compute_outcode, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
compute_outcode, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x69, 1) COPY (register, 0xb0, 1)
compute_outcode, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
compute_outcode,  ---  RETURN (register, 0x5c, 4)
compute_outcode, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compute_outcode, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compute_outcode, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compute_outcode, (register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0x1, 4)
compute_outcode, (register, 0x66, 1) COPY (register, 0x68, 1)
compute_outcode, (register, 0x67, 1) COPY (register, 0x63, 1)
compute_outcode, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
compute_outcode, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x69, 1) COPY (register, 0xb0, 1)
compute_outcode, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
compute_outcode,  ---  RETURN (register, 0x5c, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
new_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x38, 4) COPY (register, 0x20, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
new_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
new_multigrapher, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x210, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x20, 4) COPY (const, 0x210, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x66, 1) COPY (register, 0x68, 1)
new_multigrapher, (register, 0x67, 1) COPY (register, 0x63, 1)
new_multigrapher, (register, 0x40, 4) COPY (register, 0x2c, 4)
new_multigrapher, (register, 0x3c, 4) COPY (register, 0x24, 4)
new_multigrapher, (register, 0x44, 4) COPY (register, 0x28, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f40, 4)
new_multigrapher,  ---  CALL (ram, 0x1c758, 4)
new_multigrapher, (register, 0x34, 4) COPY (register, 0x20, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f48, 4)
new_multigrapher,  ---  CALL (ram, 0x112f4, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd934, 4)
new_multigrapher, (register, 0x28, 4) COPY (register, 0x3c, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x30, 4) COPY (register, 0x20, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f5c, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd940, 4)
new_multigrapher, (register, 0x28, 4) COPY (register, 0x44, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f70, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd94c, 4)
new_multigrapher, (register, 0x28, 4) COPY (register, 0x40, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f84, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
new_multigrapher, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd95c, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16f98, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
new_multigrapher, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd96c, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16fac, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
new_multigrapher, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd97c, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16fc0, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
new_multigrapher, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (register, 0x24, 4) COPY (const, 0xd988, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16fd4, 4)
new_multigrapher,  ---  CALL (ram, 0x11450, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0xf51c, 4)
new_multigrapher, (register, 0x50, 4) COPY (const, 0xf510, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x58, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x58, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
new_multigrapher, (unique, 0x3f300, 4) INT_AND (register, 0x50, 4) , (const, 0xffff, 4)
new_multigrapher, (register, 0x50, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x38, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x24, 4) COPY (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x66, 1) COPY (register, 0x68, 1)
new_multigrapher, (register, 0x67, 1) COPY (register, 0x63, 1)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x16ffc, 4)
new_multigrapher,  ---  CALL (ram, 0x11228, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
new_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x38, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x62, 1) COPY (register, 0x66, 1)
new_multigrapher, (register, 0x61, 1) COPY (register, 0x65, 1)
new_multigrapher, (register, 0x60, 1) COPY (register, 0x64, 1)
new_multigrapher, (register, 0x63, 1) COPY (register, 0x67, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x17070, 4) , (register, 0x61, 1)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x1700c, 4)
new_multigrapher,  ---  CALL (ram, 0x112b8, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x38, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x17018, 4)
new_multigrapher,  ---  CALL (ram, 0x11414, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
new_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x62, 1) COPY (register, 0x66, 1)
new_multigrapher, (register, 0x61, 1) COPY (register, 0x65, 1)
new_multigrapher, (register, 0x60, 1) COPY (register, 0x64, 1)
new_multigrapher, (register, 0x63, 1) COPY (register, 0x67, 1)
new_multigrapher, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x17070, 4) , (unique, 0x2280, 1)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
new_multigrapher, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
new_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
new_multigrapher,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
new_multigrapher, (register, 0x2c, 4) CALLOTHER (const, 0x0, 4) , (register, 0x2c, 4)
new_multigrapher, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
new_multigrapher, (unique, 0x3880, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3800, 4)
new_multigrapher, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
new_multigrapher, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x5, 4)
new_multigrapher, (register, 0x2c, 4) COPY (unique, 0x3b00, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x66, 1) COPY (register, 0x68, 1)
new_multigrapher, (register, 0x67, 1) COPY (register, 0x63, 1)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
new_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x62, 1) COPY (register, 0x66, 1)
new_multigrapher, (register, 0x61, 1) COPY (register, 0x65, 1)
new_multigrapher, (register, 0x60, 1) COPY (register, 0x64, 1)
new_multigrapher, (register, 0x63, 1) COPY (register, 0x67, 1)
new_multigrapher, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
new_multigrapher, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x17038, 4) , (unique, 0x2680, 1)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
new_multigrapher, (register, 0x66, 1) COPY (register, 0x68, 1)
new_multigrapher, (register, 0x67, 1) COPY (register, 0x63, 1)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
new_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x62, 1) COPY (register, 0x66, 1)
new_multigrapher, (register, 0x61, 1) COPY (register, 0x65, 1)
new_multigrapher, (register, 0x60, 1) COPY (register, 0x64, 1)
new_multigrapher, (register, 0x63, 1) COPY (register, 0x67, 1)
new_multigrapher, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x17064, 4) , (unique, 0x1a80, 1)
new_multigrapher, (unique, 0x1f500, 4) INT_ADD (const, 0x17040, 4) , (const, 0x8, 4)
new_multigrapher, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
new_multigrapher, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x30, 4)
new_multigrapher, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
new_multigrapher, (unique, 0x1f500, 4) INT_ADD (const, 0x17044, 4) , (const, 0x8, 4)
new_multigrapher, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
new_multigrapher, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x34, 4)
new_multigrapher, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
new_multigrapher, (register, 0x308, 8) COPY (register, 0x300, 8)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x38, 4)
new_multigrapher, (register, 0x318, 8) COPY (register, 0x310, 8)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x17058, 4)
new_multigrapher,  ---  CALL (ram, 0x111b0, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x34, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
new_multigrapher, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
new_multigrapher, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x80, 4) COPY (register, 0x54, 4)
new_multigrapher, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
new_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
new_multigrapher, (register, 0x54, 4) COPY (register, 0x80, 4)
new_multigrapher, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
new_multigrapher, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x69, 1) COPY (register, 0xb0, 1)
new_multigrapher, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
new_multigrapher,  ---  RETURN (register, 0x5c, 4)
new_multigrapher, (register, 0x20, 4) COPY (register, 0x38, 4)
new_multigrapher, (register, 0x58, 4) COPY (const, 0x1706c, 4)
new_multigrapher,  ---  CALL (ram, 0x112e8, 4)
new_multigrapher,  ---  BRANCH (ram, 0x17040, 4)
new_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
new_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
new_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
new_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
new_multigrapher, (register, 0x20, 4) COPY (const, 0x0, 4)
new_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x66, 1) COPY (register, 0x68, 1)
new_multigrapher, (register, 0x67, 1) COPY (register, 0x63, 1)
new_multigrapher,  ---  BRANCH (ram, 0x1705c, 4)
delete_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
delete_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
delete_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
delete_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
delete_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
delete_multigrapher, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x30, 4) COPY (register, 0x20, 4)
delete_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
delete_multigrapher, (register, 0x58, 4) COPY (const, 0x17098, 4)
delete_multigrapher,  ---  CALL (ram, 0x1127c, 4)
delete_multigrapher, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
delete_multigrapher, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
delete_multigrapher, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
delete_multigrapher, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
delete_multigrapher, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
delete_multigrapher, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
delete_multigrapher, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
delete_multigrapher, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
delete_multigrapher, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x34, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x62, 1) COPY (register, 0x66, 1)
delete_multigrapher, (register, 0x61, 1) COPY (register, 0x65, 1)
delete_multigrapher, (register, 0x60, 1) COPY (register, 0x64, 1)
delete_multigrapher, (register, 0x63, 1) COPY (register, 0x67, 1)
delete_multigrapher, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
delete_multigrapher,  ---  CBRANCH (ram, 0x170ac, 4) , (unique, 0x2280, 1)
delete_multigrapher, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
delete_multigrapher, (register, 0x58, 4) COPY (const, 0x170a8, 4)
delete_multigrapher,  ---  CALL (ram, 0x1148c, 4)
delete_multigrapher, (register, 0x34, 4) COPY (register, 0x20, 4)
delete_multigrapher, (register, 0x20, 4) COPY (register, 0x30, 4)
delete_multigrapher, (register, 0x58, 4) COPY (const, 0x170b4, 4)
delete_multigrapher,  ---  CALL (ram, 0x111a4, 4)
delete_multigrapher, (register, 0x20, 4) COPY (register, 0x34, 4)
delete_multigrapher, (register, 0x80, 4) COPY (register, 0x54, 4)
delete_multigrapher, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
delete_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
delete_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
delete_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
delete_multigrapher, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
delete_multigrapher, (register, 0x54, 4) COPY (register, 0x80, 4)
delete_multigrapher, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
delete_multigrapher, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x69, 1) COPY (register, 0xb0, 1)
delete_multigrapher, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
delete_multigrapher,  ---  RETURN (register, 0x5c, 4)
begin_graph, (register, 0x50, 4) COPY (const, 0x11218, 4)
begin_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1d000, 4) , (const, 0x1f, 4)
begin_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
begin_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
begin_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
begin_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
begin_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
begin_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
begin_graph, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1d000, 4)
begin_graph, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1d000, 4)
begin_graph, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1d000, 4)
begin_graph, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
begin_graph, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
begin_graph, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xe30, 4)
begin_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
begin_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
begin_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
begin_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
begin_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
begin_graph,  ---  BRANCHIND (register, 0x5c, 4)
begin_graph, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
begin_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
begin_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
begin_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
begin_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
begin_graph, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
begin_graph, (register, 0x30, 4) COPY (register, 0x20, 4)
begin_graph, (unique, 0x25480, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
begin_graph, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
begin_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
begin_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph, (register, 0x350, 8) COPY (register, 0x300, 8)
begin_graph, (register, 0x348, 8) COPY (register, 0x308, 8)
begin_graph, (register, 0x340, 8) COPY (register, 0x310, 8)
begin_graph, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
begin_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
begin_graph, (register, 0x58, 4) COPY (const, 0x170dc, 4)
begin_graph,  ---  CALL (ram, 0x11384, 4)
begin_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x170dc, 4) , (const, 0x8, 4)
begin_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
begin_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x24, 4)
begin_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
begin_graph, (register, 0x300, 8) COPY (register, 0x350, 8)
begin_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x328, 8)
begin_graph, (register, 0x318, 8) COPY (register, 0x350, 8)
begin_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x170ec, 4) , (const, 0x8, 4)
begin_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
begin_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1c, 4)
begin_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
begin_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
begin_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
begin_graph, (register, 0x328, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x328, 8)
begin_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
begin_graph, (unique, 0x25e80, 4) INT_MULT (const, 0x6, 4) , (const, 0x4, 4)
begin_graph, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
begin_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
begin_graph, (register, 0x310, 8) COPY (register, 0x308, 8)
begin_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
begin_graph, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
begin_graph, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
begin_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
begin_graph, (register, 0x54, 4) COPY (register, 0x80, 4)
begin_graph,  ---  BRANCH (ram, 0x11210, 4)
end_graph, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_graph,  ---  BRANCH (ram, 0x11438, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
set_graph_parameters, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x50, 4) COPY (register, 0x28, 4)
set_graph_parameters, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
set_graph_parameters, (register, 0x80, 4) COPY (register, 0x54, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x368, 8) COPY (register, 0x300, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3c, 4) , (register, 0x54, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x3c, 4)
set_graph_parameters, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x3c, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x370, 8) COPY (register, 0x310, 8)
set_graph_parameters, (register, 0x30, 4) COPY (register, 0x20, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x100, 4)
set_graph_parameters, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
set_graph_parameters, (register, 0x358, 8) COPY (register, 0x318, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x4c, 4) INT_AND (register, 0x38, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x308, 8)
set_graph_parameters, (register, 0x350, 8) COPY (register, 0x320, 8)
set_graph_parameters, (register, 0x360, 8) COPY (register, 0x328, 8)
set_graph_parameters, (register, 0x348, 8) COPY (register, 0x330, 8)
set_graph_parameters, (register, 0x340, 8) COPY (register, 0x338, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x104, 4)
set_graph_parameters, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x108, 4)
set_graph_parameters, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10c, 4)
set_graph_parameters, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x17438, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17558, 4) , (register, 0x61, 1)
set_graph_parameters, (register, 0x378, 8) COPY (register, 0x328, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x3c, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17448, 4) , (unique, 0x1a80, 1)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x17194, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3cc, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x358, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x358, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x350, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171a8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x338, 8) COPY (register, 0x358, 8)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171ac, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171b0, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x358, 8) COPY (register, 0x350, 8)
set_graph_parameters, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171b4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171b8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x350, 8) COPY (register, 0x338, 8)
set_graph_parameters, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (register, 0x358, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (register, 0x358, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x350, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x175d4, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x348, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x348, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x340, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171d0, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x338, 8) COPY (register, 0x348, 8)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171d4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) INT_OR (register, 0x34, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171d8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x348, 8) COPY (register, 0x340, 8)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x171dc, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x340, 8) COPY (register, 0x338, 8)
set_graph_parameters, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x348, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x348, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x340, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x17590, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17204, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x360, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x360, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x360, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x360, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17200, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x360, 8) FLOAT_ABS (register, 0x360, 8)
set_graph_parameters,  ---  CBRANCH (ram, 0x176bc, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17228, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x176bc, 4) , (register, 0x61, 1)
set_graph_parameters, (register, 0x338, 8) FLOAT_ABS (register, 0x338, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x120, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174a8, 4) , (unique, 0x1a80, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x118, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xfc, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17258, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1dc, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x17270, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (register, 0x20, 4) COPY (register, 0x50, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17268, 4)
set_graph_parameters,  ---  CALL (ram, 0x1c7c4, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1dc, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17278, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1e0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x17288, 4) , (register, 0x61, 1)
set_graph_parameters, (register, 0x20, 4) COPY (register, 0x2c, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17284, 4)
set_graph_parameters,  ---  CALL (ram, 0x1c7c4, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1e0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x17288, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2e0, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x338, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x20, 4) INT_AND (register, 0x48, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa0, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x24, 4) INT_AND (register, 0x34, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x110, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) INT_AND (register, 0x3c, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1f0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) INT_AND (register, 0x40, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x3c, 4) INT_AND (register, 0x3c, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1e8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x370, 8)
set_graph_parameters, (register, 0x300, 8) COPY (register, 0x358, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) INT_AND (register, 0x34, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x308, 8) COPY (register, 0x350, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x310, 8) COPY (register, 0x360, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x40, 4) INT_AND (register, 0x40, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x320, 8) COPY (register, 0x378, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0xb0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x20, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x10, 4)
set_graph_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x10, 4)
set_graph_parameters, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd8, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe0, 4)
set_graph_parameters, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17318, 4)
set_graph_parameters,  ---  CALL (ram, 0x14f08, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
set_graph_parameters, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xec, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x60, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x60, 4)
set_graph_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x60, 4)
set_graph_parameters, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x128, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x128, 4)
set_graph_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x128, 4)
set_graph_parameters, (register, 0x20, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
set_graph_parameters, (register, 0x300, 8) COPY (register, 0x348, 8)
set_graph_parameters, (register, 0x308, 8) COPY (register, 0x340, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf0, 4)
set_graph_parameters, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17358, 4)
set_graph_parameters,  ---  CALL (ram, 0x14f08, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
set_graph_parameters, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x328, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xd0, 4)
set_graph_parameters, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x330, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x24, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x4, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x38, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb8, 4)
set_graph_parameters, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x1738c, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1d4, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x88, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc0, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc8, 4)
set_graph_parameters, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x40b0, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x320, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x50, 4)
set_graph_parameters, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
set_graph_parameters, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0xa0, 4)
set_graph_parameters, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
set_graph_parameters, (unique, 0x6a600, 4) COPY (unique, 0x9180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x6a600, 4) INT_ADD (unique, 0x6a600, 4) , (const, 0x4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x6a600, 4) , (register, 0x2c, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x17618, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
set_graph_parameters, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
set_graph_parameters, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
set_graph_parameters, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
set_graph_parameters, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
set_graph_parameters, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
set_graph_parameters, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
set_graph_parameters, (unique, 0x9180, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
set_graph_parameters, (unique, 0x3cc80, 4) INT_ADD (unique, 0x9180, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x3cc80, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x104, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x17c, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10c, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x184, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x368, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x368, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x368, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x368, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters,  ---  CBRANCH (ram, 0x1746c, 4) , (register, 0x60, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xda40, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17418, 4)
set_graph_parameters,  ---  CALL (ram, 0x113a8, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x1746c, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x17420, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x150, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x368, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x330, 8)
set_graph_parameters, (register, 0x368, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x368, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x1747c, 4)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x17438, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x128, 4)
set_graph_parameters, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (register, 0x3c, 4) COPY (register, 0x4c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17194, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17194, 4) , (register, 0x61, 1)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x3c, 4) INT_OR (register, 0x3c, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x1719c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1f4, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1f8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1fc, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x200, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x204, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
set_graph_parameters, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
set_graph_parameters, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x80, 4) COPY (register, 0x54, 4)
set_graph_parameters, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
set_graph_parameters, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x80, 4) COPY (register, 0x54, 4)
set_graph_parameters, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
set_graph_parameters, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x54, 4) COPY (register, 0x80, 4)
set_graph_parameters, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x69, 1) COPY (register, 0xb0, 1)
set_graph_parameters, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
set_graph_parameters,  ---  RETURN (register, 0x5c, 4)
set_graph_parameters, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
set_graph_parameters, (register, 0x24, 4) INT_LEFT (register, 0x48, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x24, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
set_graph_parameters, (register, 0x28, 4) INT_LEFT (register, 0x44, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174b8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x4c, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
set_graph_parameters, (register, 0x20, 4) INT_LEFT (register, 0x40, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
set_graph_parameters, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174c4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x38, 4) COPY (register, 0x4c, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174c8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x38, 4) INT_OR (register, 0x4c, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (register, 0x320, 8) COPY (register, 0x378, 8)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174d4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x48, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x68, 1) COPY (register, 0x62, 1)
set_graph_parameters, (register, 0x48, 4) INT_OR (register, 0x48, 4) , (register, 0x24, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
set_graph_parameters, (register, 0x24, 4) INT_LEFT (register, 0x34, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x24, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174e4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x44, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x328, 8) COPY (register, 0x360, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x40, 4) INT_AND (register, 0x40, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (register, 0x330, 8) COPY (register, 0x350, 8)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x174f4, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x40, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x338, 8) COPY (register, 0x358, 8)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) INT_AND (register, 0x34, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (register, 0x68, 1) COPY (register, 0x62, 1)
set_graph_parameters, (register, 0x44, 4) INT_OR (register, 0x44, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17504, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x34, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
set_graph_parameters, (register, 0x28, 4) INT_LEFT (register, 0x3c, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x6fc80, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x3c, 4) INT_AND (register, 0x3c, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x62, 1) COPY (register, 0x66, 1)
set_graph_parameters, (register, 0x61, 1) COPY (register, 0x65, 1)
set_graph_parameters, (register, 0x60, 1) COPY (register, 0x64, 1)
set_graph_parameters, (register, 0x63, 1) COPY (register, 0x67, 1)
set_graph_parameters, (register, 0x68, 1) COPY (register, 0x62, 1)
set_graph_parameters, (register, 0x34, 4) INT_OR (register, 0x34, 4) , (register, 0x24, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17514, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x3c, 4) COPY (const, 0x2, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
set_graph_parameters, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x4c, 4) INT_AND (register, 0x38, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x68, 1) COPY (register, 0x62, 1)
set_graph_parameters, (register, 0x3c, 4) INT_OR (register, 0x3c, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
set_graph_parameters, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x350, 8) COPY (register, 0x340, 8)
set_graph_parameters, (register, 0x358, 8) COPY (register, 0x348, 8)
set_graph_parameters, (register, 0x68, 1) COPY (register, 0x62, 1)
set_graph_parameters, (register, 0x40, 4) INT_OR (register, 0x40, 4) , (register, 0x20, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x320, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0xa8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x328, 8)
set_graph_parameters, (register, 0x340, 8) COPY (register, 0x330, 8)
set_graph_parameters, (register, 0x348, 8) COPY (register, 0x338, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xe8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xf8, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x17234, 4)
set_graph_parameters, (unique, 0x1f500, 4) INT_ADD (const, 0x17558, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x8, 4)
set_graph_parameters, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xb0, 4)
set_graph_parameters, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x17440, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xf510, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0xf12c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xd9cc, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x175bc, 4)
set_graph_parameters,  ---  CALL (ram, 0x11354, 4)
set_graph_parameters, (unique, 0x1f300, 4) INT_ADD (const, 0x175bc, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x44, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (register, 0x340, 8) FLOAT_ADD (register, 0x340, 8) , (register, 0x338, 8)
set_graph_parameters, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
set_graph_parameters, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x171e8, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xf510, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0xf12c, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xd994, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x17600, 4)
set_graph_parameters,  ---  CALL (ram, 0x11354, 4)
set_graph_parameters, (unique, 0x1f300, 4) INT_ADD (const, 0x17600, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x88, 4)
set_graph_parameters, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
set_graph_parameters, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x338, 8)
set_graph_parameters, (register, 0x358, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
set_graph_parameters, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x171c4, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
set_graph_parameters, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
set_graph_parameters, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (register, 0x330, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
set_graph_parameters, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17640, 4) , (unique, 0x2080, 1)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
set_graph_parameters, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x1763c, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x338, 8) COPY (register, 0x318, 8)
set_graph_parameters, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
set_graph_parameters, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17640, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x338, 8) COPY (register, 0x328, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
set_graph_parameters, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
set_graph_parameters, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (register, 0x310, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x310, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
set_graph_parameters, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x176b4, 4) , (unique, 0x2080, 1)
set_graph_parameters, (unique, 0x11180, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
set_graph_parameters, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17668, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x310, 8) COPY (register, 0x320, 8)
set_graph_parameters, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
set_graph_parameters, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
set_graph_parameters, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x1766c, 4) , (unique, 0x2680, 1)
set_graph_parameters, (register, 0x310, 8) COPY (register, 0x330, 8)
set_graph_parameters, (register, 0x318, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x338, 8)
set_graph_parameters, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
set_graph_parameters, (register, 0x320, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x310, 8)
set_graph_parameters, (register, 0x330, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x310, 8)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x328, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x318, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
set_graph_parameters, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x310, 8)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (register, 0x330, 8)
set_graph_parameters, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x320, 8)
set_graph_parameters, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
set_graph_parameters, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
set_graph_parameters, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
set_graph_parameters, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
set_graph_parameters, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
set_graph_parameters, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
set_graph_parameters, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
set_graph_parameters, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
set_graph_parameters, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
set_graph_parameters, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
set_graph_parameters, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
set_graph_parameters, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
set_graph_parameters, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
set_graph_parameters, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
set_graph_parameters, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x17698, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x1769c, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x5c, 4) COPY (register, 0xb4, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x176a8, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
set_graph_parameters, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x176ac, 4) , (unique, 0x2680, 1)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0x0, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
set_graph_parameters,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x173fc, 4)
set_graph_parameters, (unique, 0x1f300, 4) INT_ADD (const, 0x176b4, 4) , (const, 0x8, 4)
set_graph_parameters, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
set_graph_parameters, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x134, 4)
set_graph_parameters, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x1766c, 4)
set_graph_parameters, (register, 0x28, 4) COPY (const, 0xf510, 4)
set_graph_parameters, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (register, 0x24, 4) COPY (const, 0xda04, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
set_graph_parameters, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
set_graph_parameters, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
set_graph_parameters, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x176e0, 4)
set_graph_parameters,  ---  CALL (ram, 0x11354, 4)
set_graph_parameters, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
set_graph_parameters, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
set_graph_parameters, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
set_graph_parameters, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
set_graph_parameters, (register, 0x20, 4) COPY (const, 0x1, 4)
set_graph_parameters, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x66, 1) COPY (register, 0x68, 1)
set_graph_parameters, (register, 0x67, 1) COPY (register, 0x63, 1)
set_graph_parameters, (register, 0x58, 4) COPY (const, 0x176e8, 4)
set_graph_parameters,  ---  CALL (ram, 0x11318, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x30, 4) COPY (register, 0x20, 4)
draw_frame_of_graph, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
draw_frame_of_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x810, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x810, 4) , (register, 0x54, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x810, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x810, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x34, 4) COPY (register, 0x24, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17708, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11384, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d8, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1771c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1771c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11294, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1771c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x204, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17730, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1142c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd684, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17740, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1774c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112dc, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18230, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17784, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1dc, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17784, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18780, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17790, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x1778c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17a80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x177cc, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x15c, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x177d0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x160, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ABS (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x177e0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x158, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17804, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x14c, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1780c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17818, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x378, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17840, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x118, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17844, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17850, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17854, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17858, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17864, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b0, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19d68, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x6c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17884, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1788c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1145c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17894, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11438, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x178f8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x34, 4) COPY (const, 0xf524, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x178f8, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x114, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17908, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17908, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0xf510, 4)
draw_frame_of_graph, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xda68, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x178f0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11354, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x2c, 4) COPY (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x810, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x810, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x810, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x810, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
draw_frame_of_graph, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x80, 4) COPY (register, 0x54, 4)
draw_frame_of_graph, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x54, 4) COPY (register, 0x80, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  RETURN (register, 0x5c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x178f8, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x198, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x178cc, 4) , (unique, 0x2600, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x178f8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x179a4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x179a8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x179c8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x88, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x179d8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x179dc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x348, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17a30, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11390, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (register, 0x318, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17a74, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11390, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x114, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17a98, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf4, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x185b8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ab0, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x16c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18400, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b58, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf4, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18060, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x114, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b64, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17adc, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x194, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17af0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11270, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17b00, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113b4, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x3c, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b64, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x34, 4) COPY (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x340, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x300, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17b2c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112ac, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x20, 4) COPY (register, 0x30, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17b38, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15ee8, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0xa, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b1c, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b10, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf4, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18060, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x168, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c0c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x16c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1810c, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c18, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17b90, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x248, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17ba4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11270, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17bb4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113b4, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x3c, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c18, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x34, 4) COPY (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x340, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x300, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17be0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112ac, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x20, 4) COPY (register, 0x30, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17bec, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x166d8, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0xa, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17bd0, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17bc4, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x16c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1810c, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17d74, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17c30, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111f8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c5c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17c64, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1121c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19870, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17c78, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x328, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x182e8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17cb4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17cb8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x360, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17cbc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17cd4, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x374, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17cd8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x370, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17cec, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17cec, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x37c, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17cf4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x17cf8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x380, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17d0c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17d18, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x350, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ABS (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x368, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x328, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17d54, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x62, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x62, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17d68, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17884, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17d98, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111f8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x130, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17dc4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17dcc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1121c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19dec, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17de0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3d0, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x177a4, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17e24, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x394, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17e28, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x398, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ABS (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17e38, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x390, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17e5c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x354, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17e64, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17e70, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x378, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17e98, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x370, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17e9c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ea8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17eac, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17eb0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17ebc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b0, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19d94, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5a, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x5a, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17ed4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11420, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x78, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17ee8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17ef4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11420, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x17f04, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2cc, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x17f50, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113d8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17a78, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x183bc, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17fb8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17fbc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x368, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x340, 8) COPY (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x340, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ff0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ff4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x348, 8) COPY (register, 0x300, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19608, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x378, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18038, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18048, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18058, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17a78, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x114, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b64, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18074, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1ac, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1807c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x15c, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1808c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf8, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18098, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11270, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x180a0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x340, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x34, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x180b0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf8, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x180bc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113b4, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x38, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x180cc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x180d8, 4) , (unique, 0x2600, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x180fc, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xf8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x338, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x180ec, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112ac, 4)
draw_frame_of_graph, (register, 0x20, 4) COPY (register, 0x30, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x180f4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15ee8, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x180d4, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17b64, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c18, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18120, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18128, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18138, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x170, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18144, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11270, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1814c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x8c, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x340, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x34, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1815c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x170, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_DIV (register, 0x300, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18168, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113b4, 4)
draw_frame_of_graph, (unique, 0x30900, 8) ROUND (register, 0x300, 8)
draw_frame_of_graph, (register, 0x33c, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x38, 4) COPY (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18178, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18184, 4) , (unique, 0x2600, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x181a8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x170, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x338, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18198, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112ac, 4)
draw_frame_of_graph, (register, 0x20, 4) COPY (register, 0x30, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x181a0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x166d8, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18180, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17c18, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18238, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11384, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xda4c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18248, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113a8, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1876c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1876c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18264, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1139c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18270, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x112dc, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18270, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a8, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x348, 8) COPY (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x350, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x182dc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x113d8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x182e4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11438, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17754, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x182f4, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xec, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x182f8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18300, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18318, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x130, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1831c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x12c, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18330, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18330, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18338, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18344, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x144, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x300, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x300, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18358, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18364, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x350, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ABS (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x368, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x183a0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x74, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x74, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x183b4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17d6c, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x328, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17fac, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1841c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111f8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x130, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18448, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18450, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1121c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x148, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18460, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18bb0, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18464, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x244, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1846c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x264, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18474, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x264, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18478, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x260, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x334, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x140, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x334, 4)
draw_frame_of_graph, (register, 0x330, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18ba4, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18ba4, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19624, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19dbc, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x128, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ABS (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1852c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x320, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18534, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18538, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x370, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1856c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18578, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x13c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x60, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18588, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a2b0, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18598, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15bd8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x185a4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111c8, 4)
draw_frame_of_graph, (register, 0x348, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x6c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19710, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x185d0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111f8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xb8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x185fc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18604, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1121c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd0, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd4, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18614, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19258, 4) , (unique, 0x2280, 1)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18618, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x3f8, 4)
draw_frame_of_graph, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1861c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x27c, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18624, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x264, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18628, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x240, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1862c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x244, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x334, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc8, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x334, 4)
draw_frame_of_graph, (register, 0x330, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1924c, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1924c, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1975c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x199f4, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xb0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x3c, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x186c8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x186fc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x318, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18704, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18708, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18728, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc4, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18734, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a2c8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x28, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18748, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15bd8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x62, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x62, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1875c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x1984c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xda60, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1877c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1139c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18264, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1e0, 4)
draw_frame_of_graph, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1878c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111f8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1e8, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x187b8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x187c0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x1121c, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x187c0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x310, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19da8, 4) , (unique, 0x2080, 1)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18800, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ABS (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18808, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18818, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18838, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1dc, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x62, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x62, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1884c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1885c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x18858, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17a78, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd68c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x188b8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x188c0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x38, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18908, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18914, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1895c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18968, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd684, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18978, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19b3c, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x189e0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x189ec, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18a3c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18a50, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18a7c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18a88, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1991c, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18af4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18b00, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18b50, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18b64, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18b90, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18b9c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18484, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x150, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e6c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x13c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x160, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18be4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c0, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18be8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x164, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18bf8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e6c, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18c04, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x374, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x18c0c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x374, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x33c, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x158, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x33c, 4)
draw_frame_of_graph, (register, 0x338, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e60, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e60, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18c58, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x24, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x18c54, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18e60, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a070, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18cc8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18ccc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18cd0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18ce0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18d28, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18d54, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18d60, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19f38, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18dc0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18dc4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18dc8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18dd8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e20, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18e4c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18e58, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x164, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18c14, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ab0, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x13c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18f30, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18e88, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18f30, 4) , (unique, 0x1c80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd68c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18eac, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a2d8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x18ef0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x318, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18f1c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11390, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd684, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18f2c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17ab0, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd68c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18f68, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18fa4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x18fbc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18ff0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19010, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd684, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19020, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19c54, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19074, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19094, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x190d8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19108, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19128, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19134, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19a38, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19188, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x191a8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x191f4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1921c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x320, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19238, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19244, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd4, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18634, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd8, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19510, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc4, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xe8, 4)
draw_frame_of_graph, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1928c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c0, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19290, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xec, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x192a0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19510, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x192ac, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x36c, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x192b0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x368, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x334, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xe0, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x30f00, 8) INT_SEXT (register, 0x334, 4)
draw_frame_of_graph, (register, 0x330, 8) INT2FLOAT (unique, 0x30f00, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x368, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19504, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19504, 4) , (unique, 0x2480, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x24, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x192fc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x24, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x192f8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19504, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a148, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19368, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x360, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19380, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x193a0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x193c0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x193c8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x193f4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19404, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e40, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19460, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x360, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19478, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19498, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x194b8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x194c0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x340, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x194ec, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x358, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x194fc, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xec, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x68, 1) COPY (register, 0x62, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x34, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x192b8, 4) , (unique, 0x2180, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17a98, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc4, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x195fc, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x1952c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3ac, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x195fc, 4) , (unique, 0x1c80, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd68c, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19550, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a304, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x19574, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x36c, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x358, 8) COPY (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x19590, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x348, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x350, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x358, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x358, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x340, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x195d0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x310, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x195d4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x195d8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x195e8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11390, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0xd684, 4)
draw_frame_of_graph, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
draw_frame_of_graph, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x195f8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111bc, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x17a98, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x368, 8) FLOAT_ADD (register, 0x368, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x378, 8) FLOAT_ADD (register, 0x378, 8) , (register, 0x320, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18028, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a00c, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x128, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x30, 4) , (const, 0x128, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x350, 8) , (register, 0x358, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ABS (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19688, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x320, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19690, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x378, 8)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19694, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) COPY (register, 0x370, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x328, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x196c8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x196d4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x13c, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x60, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x196e4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a298, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x196f4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15bd8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19700, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111c8, 4)
draw_frame_of_graph, (register, 0x348, 8) COPY (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x72, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x72, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19718, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x198, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x198, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1973c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x190, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19748, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x19744, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18ba0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a040, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0xb0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x3c, 4) INT_ADD (register, 0x30, 4) , (const, 0xb0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x38, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x197b0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x197e0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) COPY (register, 0x338, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x197e8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x360, 8)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x197ec, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x358, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1980c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc4, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19818, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x340, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a288, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x3c, 4)
draw_frame_of_graph, (register, 0x28, 4) COPY (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x20, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1982c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x15bd8, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x74, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x74, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19840, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x120, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1985c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (unique, 0x7800, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x1780, 4) INT_ADD (const, 0x19858, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x7800, 4)
draw_frame_of_graph, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
draw_frame_of_graph, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x69, 1) COPY (register, 0xb0, 1)
draw_frame_of_graph, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
draw_frame_of_graph,  ---  BRANCHIND (register, 0x5c, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19b34, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x198c4, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x198c4, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x198b4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x198b8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x198b8, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17c88, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x198cc, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17c88, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x184d8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x184d8, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x300, 8) COPY (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19970, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1997c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x199cc, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x199e0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x310, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18b74, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ABS (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x378, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18684, 4) , (unique, 0x1c80, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18688, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18688, 4) , (register, 0x61, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19a74, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19a94, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ae0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19b08, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19b20, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19b30, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd4, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x1924c, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x318, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19b98, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19ba4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x300, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x308, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19bf4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x308, 8)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19c08, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x348, 8) FLOAT_ADD (register, 0x348, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x300, 8)
draw_frame_of_graph, (register, 0x350, 8) FLOAT_ADD (register, 0x350, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19c34, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19c40, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x110, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18a98, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19c94, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19cb4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19cf8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1b8, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x320, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19d28, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19d48, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19d54, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x188, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19144, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5a, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x5a, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19d70, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11420, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x74, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x74, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19d84, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x24, 4) COPY (register, 0x34, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19d90, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11420, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x138, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x72, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x24, 4) COPY (const, 0x72, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x28, 4) COPY (const, 0x63, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x66, 1) COPY (register, 0x68, 1)
draw_frame_of_graph, (register, 0x67, 1) COPY (register, 0x63, 1)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19da4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11408, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17884, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18800, 4) , (unique, 0x1f00, 1)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x19db4, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x374, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18804, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ABS (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x198f8, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x184d8, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ff4, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ff4, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x19e24, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x30c, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x318, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e34, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e38, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17df0, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e4c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e50, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e54, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e58, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e5c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e78, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19e84, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x360, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19ea8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ec8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ee8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x180, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19ef0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x308, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_ADD (register, 0x340, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19f1c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x340, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19f2c, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1a0, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xec, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19504, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19f88, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19f8c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19f90, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x19fa0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x108, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19fe8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18e28, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f500, 4) INT_ADD (const, 0x19ffc, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x134, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x17df0, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ABS (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a25c, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19638, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ABS (register, 0x330, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x378, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ABS (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a230, 4) , (register, 0x60, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19770, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a0c0, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a0c4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a0c8, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a0d8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x350, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x350, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_DIV (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x78, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a120, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18d30, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a18c, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x360, 8) , (register, 0x370, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a1a4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x11240, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x28, 4)
draw_frame_of_graph, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x11180, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
draw_frame_of_graph, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x348, 8) , (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x348, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
draw_frame_of_graph, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
draw_frame_of_graph, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
draw_frame_of_graph, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
draw_frame_of_graph, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x62, 1) COPY (register, 0x66, 1)
draw_frame_of_graph, (register, 0x61, 1) COPY (register, 0x65, 1)
draw_frame_of_graph, (register, 0x60, 1) COPY (register, 0x64, 1)
draw_frame_of_graph, (register, 0x63, 1) COPY (register, 0x67, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a1c4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x80, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x40, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x30, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x98, 4)
draw_frame_of_graph, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x48, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a1e4, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a1ec, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x358, 8) FLOAT_ADD (register, 0x358, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1d0, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
draw_frame_of_graph, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
draw_frame_of_graph, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x1a218, 4) , (unique, 0x2680, 1)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_SUB (const, 0x0, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x338, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x358, 8) , (register, 0x310, 8)
draw_frame_of_graph, (register, 0x360, 8) FLOAT_ADD (register, 0x360, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x360, 8) , (register, 0x308, 8)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a228, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111ec, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19408, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x318, 8) COPY (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19770, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x310, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x310, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19150, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19770, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x100, 4)
draw_frame_of_graph, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x320, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x19638, 4) , (register, 0x61, 1)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x17280, 1) FLOAT_LESS (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x318, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x328, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17500, 1) FLOAT_NAN (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x17580, 1) FLOAT_NAN (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
draw_frame_of_graph, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
draw_frame_of_graph, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
draw_frame_of_graph, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
draw_frame_of_graph, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
draw_frame_of_graph, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
draw_frame_of_graph, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
draw_frame_of_graph, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
draw_frame_of_graph, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
draw_frame_of_graph, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
draw_frame_of_graph, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
draw_frame_of_graph, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
draw_frame_of_graph, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
draw_frame_of_graph, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
draw_frame_of_graph, (register, 0x5c, 4) COPY (register, 0xb4, 4)
draw_frame_of_graph, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x18aa4, 4) , (unique, 0x1a80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19638, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1a28c, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x154, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a294, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x1981c, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1a298, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x160, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a2a8, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x196e8, 4)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1a2b0, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x178, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a2c0, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
draw_frame_of_graph, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x1858c, 4)
draw_frame_of_graph, (register, 0x308, 8) COPY (register, 0x340, 8)
draw_frame_of_graph, (unique, 0x1f300, 4) INT_ADD (const, 0x1a2cc, 4) , (const, 0x8, 4)
draw_frame_of_graph, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
draw_frame_of_graph, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x194, 4)
draw_frame_of_graph, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
draw_frame_of_graph, (register, 0x58, 4) COPY (const, 0x1a2d4, 4)
draw_frame_of_graph,  ---  CALL (ram, 0x111d4, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18738, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x60, 4)
draw_frame_of_graph, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x70, 4)
draw_frame_of_graph, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x330, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x90, 4)
draw_frame_of_graph, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (register, 0x318, 8)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0xa8, 4)
draw_frame_of_graph, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x348, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x310, 8) FLOAT_ADD (register, 0x310, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x350, 8)
draw_frame_of_graph, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
draw_frame_of_graph, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x358, 8)
draw_frame_of_graph, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x18f14, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
draw_frame_of_graph, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (unique, 0x1f280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
draw_frame_of_graph, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
draw_frame_of_graph, (register, 0x340, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x320, 8)
draw_frame_of_graph, (register, 0x320, 8) FLOAT_DIV (register, 0x340, 8) , (register, 0x338, 8)
draw_frame_of_graph, (register, 0x338, 8) COPY (register, 0x320, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x19580, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x38, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
plot_point, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x25480, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (unique, 0x25480, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x3c, 4) COPY (register, 0x24, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1c, 4) , (register, 0x54, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x34, 4) COPY (register, 0x20, 4)
plot_point,  ---  CBRANCH (ram, 0x1a600, 4) , (register, 0x61, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1f4, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a600, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x40, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x200, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
plot_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
plot_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x300, 8) COPY (register, 0x348, 8)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x308, 8) COPY (register, 0x350, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x378, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x200, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x370, 8)
plot_point, (register, 0x358, 8) COPY (register, 0x370, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a388, 4)
plot_point,  ---  CALL (ram, 0x16e9c, 4)
plot_point, (register, 0x300, 8) COPY (register, 0x378, 8)
plot_point, (register, 0x30, 4) COPY (register, 0x20, 4)
plot_point, (register, 0x308, 8) COPY (register, 0x370, 8)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x360, 8) COPY (register, 0x378, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a3a0, 4)
plot_point,  ---  CALL (ram, 0x16e9c, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x38, 4) COPY (register, 0x20, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f080, 4) , (register, 0x338, 8)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x2c, 4) INT_OR (register, 0x38, 4) , (register, 0x30, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1a418, 4) , (register, 0x61, 1)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (unique, 0x6d600, 4) INT_AND (register, 0x38, 4) , (register, 0x30, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d600, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d600, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a760, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a3c8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x2c, 4) COPY (register, 0x30, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a3cc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x2c, 4) COPY (register, 0x38, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x4, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1a6e4, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x350, 8)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x300, 8) , (register, 0x348, 8)
plot_point, (register, 0x340, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x348, 8)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x340, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (register, 0x340, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x340, 8)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x308, 8) COPY (register, 0x340, 8)
plot_point,  ---  CBRANCH (ram, 0x1a718, 4) , (register, 0x61, 1)
plot_point, (register, 0x360, 8) COPY (register, 0x300, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a408, 4)
plot_point,  ---  CALL (ram, 0x16e9c, 4)
plot_point, (register, 0x358, 8) COPY (register, 0x340, 8)
plot_point, (register, 0x38, 4) COPY (register, 0x20, 4)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x2c, 4) INT_OR (register, 0x38, 4) , (register, 0x30, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a3b8, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x348, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x348, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x348, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x348, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x350, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x350, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x350, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x350, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a430, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a434, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x378, 8) , (register, 0x360, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x378, 8) , (register, 0x360, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x360, 8) , (register, 0x378, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x378, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x360, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a440, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a448, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x30, 4) COPY (const, 0x3, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a44c, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x30, 4) COPY (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x17e00, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x370, 8) , (register, 0x358, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x370, 8) , (register, 0x358, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x358, 8) , (register, 0x370, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x370, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x358, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a458, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a45c, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a464, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a46c, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x4, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x38, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a890, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a490, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a494, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a498, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a498, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3e8, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a49c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4b0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4b4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4d4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4dc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a4dc, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x3a4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4e0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4e4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4e8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a4ec, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a4fc, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7e8, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x3c, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1f, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1f, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
plot_point,  ---  CBRANCH (ram, 0x1aacc, 4) , (unique, 0x2480, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point,  ---  CBRANCH (ram, 0x1aaa4, 4) , (unique, 0x2600, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4c, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point,  ---  CBRANCH (ram, 0x1adcc, 4) , (unique, 0x2600, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a534, 4)
plot_point,  ---  CALL (ram, 0x11384, 4)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x24, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a540, 4)
plot_point,  ---  CALL (ram, 0x1546c, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a55c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a560, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a560, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x320, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a564, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a56c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x3c, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a58c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a590, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a5a4, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2dc, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a5a8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x310, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x40, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a5bc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a5c0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a5c8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x340, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a5dc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) COPY (register, 0x340, 8)
plot_point, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (register, 0x318, 8) FLOAT_ADD (register, 0x318, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x330, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a5ec, 4)
plot_point,  ---  CALL (ram, 0x11444, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_point,  ---  BRANCH (ram, 0x11438, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x60, 4)
plot_point, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4c, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7f4, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point,  ---  CBRANCH (ram, 0x1a64c, 4) , (unique, 0x2600, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x40, 4) COPY (const, 0x6667, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x6666, 4) , (const, 0x10, 4)
plot_point, (unique, 0x3f300, 4) INT_AND (register, 0x40, 4) , (const, 0xffff, 4)
plot_point, (register, 0x40, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_point, (unique, 0x64980, 8) INT_SEXT (register, 0x2c, 4)
plot_point, (unique, 0x64a80, 8) INT_SEXT (register, 0x40, 4)
plot_point, (unique, 0x64b80, 8) INT_MULT (unique, 0x64980, 8) , (unique, 0x64a80, 8)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x40, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x0, 4)
plot_point, (register, 0x44, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x4, 4)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1f, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x2c, 4) , (const, 0x1f, 4)
plot_point, (register, 0x28, 4) COPY (unique, 0x4100, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x50, 4) COPY (const, 0x5, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x44, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x44, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (unique, 0x4100, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (unique, 0x4100, 4) , (register, 0x28, 4)
plot_point, (register, 0x28, 4) INT_SUB (unique, 0x4100, 4) , (register, 0x28, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x24, 4) COPY (const, 0xf494, 4)
plot_point, (unique, 0x3e880, 4) INT_MULT (register, 0x50, 4) , (register, 0x28, 4)
plot_point, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (unique, 0x3e880, 4)
plot_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
plot_point, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
plot_point, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_point, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
plot_point, (unique, 0x8480, 4) INT_ADD (register, 0x24, 4) , (unique, 0x7800, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a64c, 4)
plot_point,  ---  CALL (ram, 0x111bc, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1d8, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a658, 4)
plot_point,  ---  CALL (ram, 0x1139c, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a658, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x200, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x50, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x300, 8) FLOAT_MULT (register, 0x300, 8) , (register, 0x338, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a66c, 4)
plot_point,  ---  CALL (ram, 0x1142c, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x60, 1)
plot_point,  ---  CBRANCH (ram, 0x1a67c, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x24, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point,  ---  CBRANCH (ram, 0x1a6b8, 4) , (register, 0x60, 1)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a680, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x200, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a684, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1dc, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a68c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1dc, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
plot_point,  ---  CBRANCH (ram, 0x1a6a0, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80000000, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x1, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x1, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x24, 4) COPY (const, 0x80000000, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point,  ---  CBRANCH (ram, 0x1a6b8, 4) , (unique, 0x2180, 1)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a6a4, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1cc, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x330, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
plot_point, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
plot_point,  ---  CBRANCH (ram, 0x1a6b4, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80000002, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x1, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x1, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x24, 4) COPY (const, 0x80000002, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa80, 4) , (unique, 0x1f00, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a6c0, 4)
plot_point,  ---  CALL (ram, 0x112dc, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f4, 4)
plot_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1a348, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x378, 8) COPY (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x1f280, 4) , (register, 0x370, 8)
plot_point,  ---  BRANCH (ram, 0x1a364, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x8, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1a72c, 4) , (register, 0x61, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x350, 8)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x368, 8) , (register, 0x348, 8)
plot_point, (register, 0x340, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x348, 8)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (register, 0x300, 8) COPY (register, 0x368, 8)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (register, 0x340, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (register, 0x340, 8) FLOAT_ADD (register, 0x350, 8) , (register, 0x340, 8)
plot_point, (register, 0x308, 8) COPY (register, 0x340, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a400, 4) , (unique, 0x1a80, 1)
plot_point, (register, 0x348, 8) COPY (register, 0x300, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a720, 4)
plot_point,  ---  CALL (ram, 0x16e9c, 4)
plot_point, (register, 0x350, 8) COPY (register, 0x340, 8)
plot_point, (register, 0x30, 4) COPY (register, 0x20, 4)
plot_point,  ---  BRANCH (ram, 0x1a3b0, 4)
plot_point, (register, 0x300, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x350, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a738, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x68, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a73c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a740, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) COPY (register, 0x340, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a744, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x348, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a748, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x340, 8) , (register, 0x350, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a74c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x348, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a750, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x350, 8)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x300, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x348, 8) , (register, 0x300, 8)
plot_point,  ---  BRANCH (ram, 0x1a3f0, 4)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a77c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x368, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a77c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x104, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a780, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a790, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x368, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a798, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x368, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7a0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7bc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1a7bc, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xc4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7c0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7c4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x370, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7cc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x370, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a7d0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x370, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x370, 8) , (register, 0x328, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a7e0, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_point, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_point, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_point, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_point,  ---  RETURN (register, 0x5c, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa70, 4) , (unique, 0x2600, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x40, 4) COPY (const, 0x6667, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x6666, 4) , (const, 0x10, 4)
plot_point, (unique, 0x3f300, 4) INT_AND (register, 0x40, 4) , (const, 0xffff, 4)
plot_point, (register, 0x40, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_point, (unique, 0x64980, 8) INT_SEXT (register, 0x28, 4)
plot_point, (unique, 0x64a80, 8) INT_SEXT (register, 0x40, 4)
plot_point, (unique, 0x64b80, 8) INT_MULT (unique, 0x64980, 8) , (unique, 0x64a80, 8)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x48, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x0, 4)
plot_point, (register, 0x4c, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x4, 4)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1f, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x28, 4) , (const, 0x1f, 4)
plot_point, (register, 0x2c, 4) COPY (unique, 0x4100, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x38, 4) COPY (const, 0x5, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x4c, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x4c, 4) , (const, 0x1, 4)
plot_point, (register, 0x30, 4) COPY (unique, 0x4100, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x50, 4) COPY (const, 0xf494, 4)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (register, 0x58, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
plot_point, (unique, 0x3f300, 4) INT_AND (register, 0x50, 4) , (const, 0xffff, 4)
plot_point, (register, 0x50, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_point, (unique, 0x64980, 8) INT_SEXT (register, 0x58, 4)
plot_point, (unique, 0x64a80, 8) INT_SEXT (register, 0x40, 4)
plot_point, (unique, 0x64b80, 8) INT_MULT (unique, 0x64980, 8) , (unique, 0x64a80, 8)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x64b80, 8) , (const, 0x0, 8)
plot_point, (register, 0x40, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x0, 4)
plot_point, (register, 0x44, 4) SUBPIECE (unique, 0x64b80, 8) , (const, 0x4, 4)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1f, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x58, 4) , (const, 0x1f, 4)
plot_point, (register, 0x24, 4) COPY (unique, 0x4100, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x3e00, 4) INT_SUB (const, 0x1, 4) , (const, 0x1, 4)
plot_point, (unique, 0x3e80, 4) INT_RIGHT (register, 0x44, 4) , (unique, 0x3e00, 4)
plot_point, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
plot_point, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x4100, 4) INT_SRIGHT (register, 0x44, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (unique, 0x4100, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (unique, 0x4100, 4) , (register, 0x24, 4)
plot_point, (register, 0x2c, 4) INT_SUB (unique, 0x4100, 4) , (register, 0x24, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3e880, 4) INT_MULT (register, 0x38, 4) , (register, 0x2c, 4)
plot_point, (register, 0x2c, 4) INT_SUB (register, 0x58, 4) , (unique, 0x3e880, 4)
plot_point, (unique, 0x3e880, 4) INT_MULT (register, 0x38, 4) , (register, 0x58, 4)
plot_point, (register, 0x30, 4) INT_SUB (register, 0x28, 4) , (unique, 0x3e880, 4)
plot_point, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
plot_point, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (unique, 0x7800, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a844, 4)
plot_point,  ---  CALL (ram, 0x111bc, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x2c, 4) COPY (const, 0xf480, 4)
plot_point, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
plot_point, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
plot_point, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
plot_point, (unique, 0x7800, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
plot_point, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1a858, 4)
plot_point,  ---  CALL (ram, 0x1139c, 4)
plot_point,  ---  BRANCH (ram, 0x1a658, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4c, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point,  ---  CBRANCH (ram, 0x1a478, 4) , (unique, 0x2600, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f0, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1aca4, 4) , (register, 0x61, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aaf0, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x6fb80, 4) INT_ADD (const, 0x1, 4) , (const, 0x0, 4)
plot_point, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (unique, 0x6fb80, 4)
plot_point, (register, 0x2c, 4) INT_LEFT (register, 0x30, 4) , (unique, 0x6fc80, 4)
plot_point, (unique, 0x6fc80, 4) INT_SUB (const, 0x1f, 4) , (const, 0x0, 4)
plot_point, (register, 0x2c, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x6fc80, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8bc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x40, 4) COPY (register, 0x2c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8c0, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x40, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8c8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point,  ---  CBRANCH (ram, 0x1a954, 4) , (register, 0x61, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x368, 8)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8e4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8e8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8ec, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x348, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1a8ec, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x6c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a8f0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a900, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x348, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a904, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1a914, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x94, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a918, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a930, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x330, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a934, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a938, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x328, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a94c, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x368, 8)
plot_point, (register, 0x358, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x370, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a96c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a970, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a974, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1a974, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0xf4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a978, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a990, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a994, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x320, 8) , (register, 0x338, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9b0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9b4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9b8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x358, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1a9b8, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x138, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9bc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9c0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x358, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1a9c4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1a9d4, 4)
plot_point,  ---  CALL (ram, 0x111ec, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1adc4, 4) , (register, 0x61, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point,  ---  CBRANCH (ram, 0x1af20, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1aa04, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x184, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point,  ---  CBRANCH (ram, 0x1af08, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1aa44, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x1c4, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x330, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1aa64, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) COPY (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
plot_point,  ---  BRANCH (ram, 0x1a7e8, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa74, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point, (register, 0x2c, 4) INT_NEGATE (register, 0x2c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa78, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x30, 4) COPY (register, 0x2c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa7c, 4) , (unique, 0x2680, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x30, 4) INT_AND (register, 0x2c, 4) , (const, 0x3, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point,  ---  BRANCH (ram, 0x1a844, 4)
plot_point, (unique, 0x11180, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17f00, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (unique, 0x17f00, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (unique, 0x17f00, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (unique, 0x17f00, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (unique, 0x17f00, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1aa84, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x20c, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa90, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_point,  ---  CBRANCH (ram, 0x1aa94, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x30900, 8) ROUND (register, 0x338, 8)
plot_point, (register, 0x338, 4) SUBPIECE (unique, 0x30900, 8) , (const, 0x0, 4)
plot_point, (register, 0x2c, 4) COPY (register, 0x338, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point,  ---  BRANCH (ram, 0x1a6b8, 4)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x24, 4) COPY (register, 0x3c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aabc, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4c, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1af38, 4) , (register, 0x61, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_point,  ---  BRANCH (ram, 0x1546c, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1aad4, 4)
plot_point,  ---  CALL (ram, 0x11384, 4)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x24, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1aae0, 4)
plot_point,  ---  CALL (ram, 0x1546c, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x48, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1aaec, 4)
plot_point,  ---  CALL (ram, 0x111f8, 4)
plot_point,  ---  BRANCH (ram, 0x1a540, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x2c, 4) INT_AND (register, 0x30, 4) , (const, 0x6, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point,  ---  CBRANCH (ram, 0x1ac20, 4) , (register, 0x61, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x2, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae90, 4) , (register, 0x61, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac20, 4) , (unique, 0x1a80, 1)
plot_point, (register, 0x348, 8) FLOAT_SUB (register, 0x348, 8) , (register, 0x368, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab24, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab28, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab2c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x348, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1ab2c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2ac, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab30, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab44, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x348, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab48, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x350, 8) FLOAT_SUB (register, 0x350, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab70, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1ab70, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x2f0, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab74, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab78, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) COPY (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab80, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab84, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x350, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ab88, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1ab94, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point,  ---  CBRANCH (ram, 0x1afe4, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1abbc, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x33c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1abf0, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x370, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1abf4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac04, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac08, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac10, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x328, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1ac1c, 4)
plot_point,  ---  CALL (ram, 0x111ec, 4)
plot_point,  ---  BRANCH (ram, 0x1a4fc, 4)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac30, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac34, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac38, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f300, 4) INT_ADD (const, 0x1ac38, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f380, 4) INT_AND (unique, 0x1f300, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f480, 4) INT_SUB (unique, 0x1f380, 4) , (const, 0x3b8, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac3c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f480, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac50, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac54, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac7c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1ac7c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x394, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac80, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac84, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) COPY (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac8c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac90, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac94, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1aca0, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point,  ---  BRANCH (ram, 0x1a4fc, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0x6, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad40, 4) , (unique, 0x1a80, 1)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac20, 4) , (unique, 0x1a80, 1)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1accc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1acd0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1acd4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1acd4, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x33c, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1acd8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ace8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1acec, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad10, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1ad10, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x300, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad14, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad18, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) COPY (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad20, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad24, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad28, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x318, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1ad3c, 4)
plot_point,  ---  CALL (ram, 0x111ec, 4)
plot_point,  ---  BRANCH (ram, 0x1a4fc, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad4c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x368, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad50, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad54, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x378, 8) , (register, 0x368, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad58, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad5c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x368, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1ad5c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x2b4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad60, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad74, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad78, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x330, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ad8c, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x370, 8) FLOAT_SUB (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ada0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1ada0, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x270, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ada4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ada8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1adac, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x370, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1adb0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (register, 0x338, 8) FLOAT_ADD (register, 0x338, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (register, 0x58, 4) COPY (const, 0x1adc0, 4)
plot_point,  ---  CALL (ram, 0x11240, 4)
plot_point,  ---  BRANCH (ram, 0x1a4fc, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1f4, 4)
plot_point,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
plot_point,  ---  BRANCH (ram, 0x1a50c, 4)
plot_point, (register, 0x20, 4) COPY (register, 0x34, 4)
plot_point, (register, 0x24, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1add8, 4)
plot_point,  ---  CALL (ram, 0x1546c, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1adf4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1adf8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1adf8, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x218, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1adfc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae04, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x320, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x3c, 4)
plot_point, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae24, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae28, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x328, 8) FLOAT_SUB (register, 0x328, 8) , (register, 0x318, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1ae3c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x1d4, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae40, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (register, 0x338, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae48, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x40, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae58, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_DIV (register, 0x328, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae60, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x340, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x328, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x338, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x338, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_point,  ---  CBRANCH (ram, 0x1ae74, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) COPY (register, 0x340, 8)
plot_point, (register, 0x310, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x310, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (unique, 0x25e80, 4) INT_MULT (const, 0x10, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (unique, 0x25e80, 4)
plot_point, (register, 0x340, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x348, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x350, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x358, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x360, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x368, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x370, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x378, 8) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
plot_point, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_point,  ---  BRANCH (ram, 0x11444, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1ac20, 4) , (unique, 0x1a80, 1)
plot_point, (register, 0x360, 8) FLOAT_SUB (register, 0x360, 8) , (register, 0x368, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aea8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aeac, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aeb0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x328, 8) FLOAT_DIV (register, 0x360, 8) , (register, 0x328, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1aeb0, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x160, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aeb4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aec4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x360, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aec8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x328, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x338, 8)
plot_point, (register, 0x330, 8) FLOAT_ADD (register, 0x330, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x54, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (register, 0x358, 8) FLOAT_SUB (register, 0x358, 8) , (register, 0x338, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1aee8, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x128, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aeec, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aef0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1aef4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x358, 8) , (register, 0x338, 8)
plot_point, (register, 0x300, 8) COPY (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1aefc, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1af00, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x358, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1af04, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point,  ---  BRANCH (ram, 0x1ad28, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x338, 8)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x328, 8)
plot_point,  ---  BRANCH (ram, 0x1aa50, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x338, 8)
plot_point,  ---  BRANCH (ram, 0x1aa10, 4)
plot_point, (register, 0x58, 4) COPY (const, 0x1af3c, 4)
plot_point,  ---  CALL (ram, 0x1546c, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x28, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
plot_point, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x48, 4)
plot_point, (register, 0x300, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x30, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point,  ---  CBRANCH (ram, 0x1affc, 4) , (register, 0x61, 1)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1af64, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0xac, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (register, 0x330, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x40, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x60, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x338, 8) , (register, 0x330, 8)
plot_point, (register, 0x320, 8) FLOAT_ADD (register, 0x320, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x24, 4) COPY (const, 0x1, 4)
plot_point, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
plot_point, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x338, 8) FLOAT_SUB (register, 0x338, 8) , (register, 0x318, 8)
plot_point, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
plot_point, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
plot_point, (register, 0x330, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_point, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
plot_point, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
plot_point, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f500, 4) INT_ADD (const, 0x1af9c, 4) , (const, 0x8, 4)
plot_point, (unique, 0x1f580, 4) INT_AND (unique, 0x1f500, 4) , (const, 0xfffffffc, 4)
plot_point, (unique, 0x1f680, 4) INT_ADD (unique, 0x1f580, 4) , (const, 0x74, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1afa0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f680, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
plot_point, (register, 0x308, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x310, 8)
plot_point, (register, 0x300, 8) FLOAT_ADD (register, 0x300, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x40, 4)
plot_point, (register, 0x310, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1afb4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point,  ---  CBRANCH (ram, 0x1afb8, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_DIV (register, 0x338, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
plot_point,  ---  CBRANCH (ram, 0x1afc0, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x320, 8) FLOAT_SUB (register, 0x318, 8) , (register, 0x320, 8)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x90, 4)
plot_point, (register, 0x318, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x340, 8) FLOAT_MULT (register, 0x318, 8) , (register, 0x338, 8)
plot_point, (unique, 0x17d80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x17280, 1) FLOAT_LESS (register, 0x330, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17380, 1) FLOAT_EQUAL (register, 0x330, 8) , (register, 0x340, 8)
plot_point, (unique, 0x17480, 1) FLOAT_LESSEQUAL (register, 0x340, 8) , (register, 0x330, 8)
plot_point, (unique, 0x17500, 1) FLOAT_NAN (register, 0x330, 8)
plot_point, (unique, 0x17580, 1) FLOAT_NAN (register, 0x340, 8)
plot_point, (unique, 0x17680, 1) INT_OR (unique, 0x17500, 1) , (unique, 0x17580, 1)
plot_point, (unique, 0x17700, 4) INT_AND (register, 0xb4, 4) , (const, 0xfffffff, 4)
plot_point, (unique, 0x17780, 4) INT_ZEXT (unique, 0x17280, 1)
plot_point, (unique, 0x17800, 4) INT_LEFT (unique, 0x17780, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x17880, 4) INT_OR (unique, 0x17700, 4) , (unique, 0x17800, 4)
plot_point, (unique, 0x17900, 4) INT_ZEXT (unique, 0x17380, 1)
plot_point, (unique, 0x17980, 4) INT_LEFT (unique, 0x17900, 4) , (const, 0x1e, 4)
plot_point, (unique, 0x17a00, 4) INT_OR (unique, 0x17880, 4) , (unique, 0x17980, 4)
plot_point, (unique, 0x17a80, 4) INT_ZEXT (unique, 0x17480, 1)
plot_point, (unique, 0x17b00, 4) INT_LEFT (unique, 0x17a80, 4) , (const, 0x1d, 4)
plot_point, (unique, 0x17b80, 4) INT_OR (unique, 0x17a00, 4) , (unique, 0x17b00, 4)
plot_point, (unique, 0x17c00, 4) INT_ZEXT (unique, 0x17680, 1)
plot_point, (unique, 0x17c80, 4) INT_LEFT (unique, 0x17c00, 4) , (const, 0x1c, 4)
plot_point, (register, 0xb4, 4) INT_OR (unique, 0x17b80, 4) , (unique, 0x17c80, 4)
plot_point, (register, 0x5c, 4) COPY (register, 0xb4, 4)
plot_point, (unique, 0x1c80, 1) BOOL_NEGATE (register, 0x60, 1)
plot_point, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1c80, 1)
plot_point,  ---  CBRANCH (ram, 0x1afd4, 4) , (unique, 0x2680, 1)
plot_point, (register, 0x330, 8) COPY (register, 0x340, 8)
plot_point, (register, 0x310, 8) FLOAT_MULT (register, 0x330, 8) , (register, 0x310, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x320, 8) , (register, 0x318, 8)
plot_point, (register, 0x328, 8) FLOAT_ADD (register, 0x328, 8) , (unique, 0x20900, 8)
plot_point, (unique, 0x20900, 8) FLOAT_MULT (register, 0x328, 8) , (register, 0x338, 8)
plot_point, (register, 0x308, 8) FLOAT_ADD (register, 0x308, 8) , (unique, 0x20900, 8)
plot_point,  ---  BRANCH (ram, 0x1ae80, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x320, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x320, 8)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x338, 8)
plot_point,  ---  BRANCH (ram, 0x1abc8, 4)
plot_point, (unique, 0x1f080, 4) COPY (register, 0x3c, 4)
plot_point, (register, 0x330, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f080, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x10, 4)
plot_point, (register, 0x328, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (unique, 0x1f280, 4) INT_ADD (register, 0x34, 4) , (const, 0x20, 4)
plot_point, (register, 0x338, 8) LOAD (const, 0x1a1, 8) , (unique, 0x1f280, 4)
plot_point, (register, 0x330, 8) FLOAT_SUB (register, 0x330, 8) , (register, 0x328, 8)
plot_point, (register, 0x338, 8) FLOAT_DIV (register, 0x330, 8) , (register, 0x338, 8)
plot_point,  ---  BRANCH (ram, 0x1af70, 4)
plot_point_array, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point_array, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point_array, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point_array, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point_array, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
plot_point_array, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point_array, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point_array, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point_array, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point_array, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
plot_point_array, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
plot_point_array, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
plot_point_array,  ---  CBRANCH (ram, 0x1b028, 4) , (unique, 0x2680, 1)
plot_point_array, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
plot_point_array, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_point_array, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
plot_point_array,  ---  RETURN (register, 0x5c, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
plot_point_array, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x3c, 4) COPY (register, 0x20, 4)
plot_point_array, (register, 0x38, 4) COPY (register, 0x28, 4)
plot_point_array, (register, 0x30, 4) COPY (register, 0x24, 4)
plot_point_array, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
plot_point_array, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point_array, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point_array, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point_array, (register, 0x34, 4) COPY (const, 0x0, 4)
plot_point_array, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x66, 1) COPY (register, 0x68, 1)
plot_point_array, (register, 0x67, 1) COPY (register, 0x63, 1)
plot_point_array, (register, 0x24, 4) COPY (register, 0x30, 4)
plot_point_array, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
plot_point_array, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point_array, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point_array, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point_array, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
plot_point_array, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
plot_point_array, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
plot_point_array, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x20, 4) COPY (register, 0x3c, 4)
plot_point_array, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
plot_point_array, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
plot_point_array, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
plot_point_array, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
plot_point_array, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x68, 4)
plot_point_array, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x68, 4)
plot_point_array, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x68, 4)
plot_point_array, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x58, 4) COPY (const, 0x1b050, 4)
plot_point_array,  ---  CALL (ram, 0x1a31c, 4)
plot_point_array, (register, 0x68, 1) COPY (register, 0x62, 1)
plot_point_array, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x34, 4)
plot_point_array, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x38, 4)
plot_point_array, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x38, 4)
plot_point_array, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x62, 1) COPY (register, 0x66, 1)
plot_point_array, (register, 0x61, 1) COPY (register, 0x65, 1)
plot_point_array, (register, 0x60, 1) COPY (register, 0x64, 1)
plot_point_array, (register, 0x63, 1) COPY (register, 0x67, 1)
plot_point_array, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
plot_point_array,  ---  CBRANCH (ram, 0x1b03c, 4) , (unique, 0x1a80, 1)
plot_point_array, (register, 0x80, 4) COPY (register, 0x54, 4)
plot_point_array, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
plot_point_array, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
plot_point_array, (register, 0x54, 4) COPY (register, 0x80, 4)
plot_point_array, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
plot_point_array, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x69, 1) COPY (register, 0xb0, 1)
plot_point_array, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
plot_point_array,  ---  RETURN (register, 0x5c, 4)
end_polyline_and_flush, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
end_polyline_and_flush,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
end_polyline_and_flush, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_polyline_and_flush,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
end_polyline_and_flush, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_polyline_and_flush, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_polyline_and_flush, (register, 0x30, 4) COPY (register, 0x20, 4)
end_polyline_and_flush, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_polyline_and_flush, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_polyline_and_flush, (register, 0x58, 4) COPY (const, 0x1b06c, 4)
end_polyline_and_flush,  ---  CALL (ram, 0x11174, 4)
end_polyline_and_flush, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
end_polyline_and_flush, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_polyline_and_flush, (register, 0x58, 4) COPY (const, 0x1b074, 4)
end_polyline_and_flush,  ---  CALL (ram, 0x1145c, 4)
end_polyline_and_flush, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_polyline_and_flush, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_polyline_and_flush, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_polyline_and_flush, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_polyline_and_flush, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_polyline_and_flush, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_polyline_and_flush, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_polyline_and_flush, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_polyline_and_flush, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_polyline_and_flush, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_polyline_and_flush, (register, 0x66, 1) COPY (register, 0x68, 1)
end_polyline_and_flush, (register, 0x67, 1) COPY (register, 0x63, 1)
end_polyline_and_flush, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1f4, 4)
end_polyline_and_flush,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_polyline_and_flush, (register, 0x80, 4) COPY (register, 0x54, 4)
end_polyline_and_flush, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_polyline_and_flush, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_polyline_and_flush, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_polyline_and_flush, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_polyline_and_flush, (register, 0x54, 4) COPY (register, 0x80, 4)
end_polyline_and_flush, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_polyline_and_flush, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_polyline_and_flush, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_polyline_and_flush, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_polyline_and_flush,  ---  RETURN (register, 0x5c, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
display_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x38, 4) COPY (const, 0xf4a8, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x38, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x38, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2c, 4) , (register, 0x54, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x30, 4) COPY (register, 0x20, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x24, 4)
display_fonts, (register, 0x34, 4) COPY (register, 0x38, 4)
display_fonts,  ---  BRANCH (ram, 0x1b0ac, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b0a4, 4)
display_fonts,  ---  CALL (ram, 0x11168, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b0e8, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8800, 4) COPY (register, 0x34, 4)
display_fonts, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b0a0, 4) , (unique, 0x1a80, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0xf510, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdab8, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x40, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x3c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b0dc, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x80, 4) COPY (register, 0x54, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x54, 4) COPY (register, 0x80, 4)
display_fonts, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
display_fonts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x69, 1) COPY (register, 0xb0, 1)
display_fonts, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
display_fonts,  ---  RETURN (register, 0x5c, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xc880, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b0fc, 4)
display_fonts,  ---  CALL (ram, 0x11168, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b0bc, 4) , (register, 0x61, 1)
display_fonts, (register, 0x34, 4) COPY (const, 0xf51c, 4)
display_fonts, (register, 0x44, 4) COPY (const, 0xf510, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x44, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x44, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b118, 4)
display_fonts,  ---  CALL (ram, 0x112f4, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b130, 4)
display_fonts,  ---  CALL (ram, 0x11228, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
display_fonts,  ---  CBRANCH (ram, 0x1b7b0, 4) , (register, 0x61, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0xdbcc, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b148, 4)
display_fonts,  ---  CALL (ram, 0x113a8, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b460, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc28, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b160, 4)
display_fonts,  ---  CALL (ram, 0x113a8, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b620, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc80, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b178, 4)
display_fonts,  ---  CALL (ram, 0x113a8, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b330, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdcc0, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b190, 4)
display_fonts,  ---  CALL (ram, 0x113a8, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b200, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x58, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x58, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x58, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x58, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b1f0, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b1f0, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdd08, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x42, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x42, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x24, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b1cc, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdd4c, 4)
display_fonts, (register, 0x24, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x12, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x12, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b1e4, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x80, 4) COPY (register, 0x54, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x54, 4) COPY (register, 0x80, 4)
display_fonts, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
display_fonts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x69, 1) COPY (register, 0xb0, 1)
display_fonts, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
display_fonts,  ---  RETURN (register, 0x5c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x3c, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_fonts, (register, 0x80, 4) COPY (register, 0x54, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_fonts, (register, 0x54, 4) COPY (register, 0x80, 4)
display_fonts, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
display_fonts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x69, 1) COPY (register, 0xb0, 1)
display_fonts, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
display_fonts,  ---  RETURN (register, 0x5c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b208, 4)
display_fonts,  ---  CALL (ram, 0x11198, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x44, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b830, 4) , (register, 0x61, 1)
display_fonts, (register, 0x2c, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x3c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x468, 4)
display_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x40, 4) COPY (const, 0x468, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b220, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x50, 4) INT_AND (register, 0x3c, 4) , (register, 0x24, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdccc, 4)
display_fonts, (unique, 0x5880, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x5900, 4) INT_SUB (unique, 0x5880, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5980, 4) INT_SRIGHT (register, 0x3c, 4) , (unique, 0x5900, 4)
display_fonts, (unique, 0x5a80, 4) INT_AND (unique, 0x5980, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5b00, 1) INT_EQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5b80, 1) BOOL_AND (unique, 0x5b00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x5c00, 1) INT_NOTEQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5c80, 1) SUBPIECE (unique, 0x5a80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5d00, 1) BOOL_AND (unique, 0x5c00, 1) , (unique, 0x5c80, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x5b80, 1) , (unique, 0x5d00, 1)
display_fonts, (unique, 0x5e80, 4) INT_SRIGHT (register, 0x3c, 4) , (unique, 0x5880, 4)
display_fonts, (register, 0x28, 4) COPY (unique, 0x5e80, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (register, 0x48, 4) COPY (register, 0x28, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x38, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x38, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x50, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b268, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x48, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b300, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) INT_MULT (register, 0x40, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3e780, 4) INT_MULT (register, 0x40, 4) , (register, 0x48, 4)
display_fonts, (register, 0x48, 4) INT_ADD (unique, 0x3e780, 4) , (register, 0x44, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x50, 4)
display_fonts, (register, 0x4c, 4) COPY (register, 0x2c, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b29c, 4)
display_fonts,  ---  CALL (ram, 0x11330, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x20, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc1c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x40, 4) , (const, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_SUB (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_ADD (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x30, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b2bc, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1b878, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b2d0, 4)
display_fonts,  ---  CALL (ram, 0x11468, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x20, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x460, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x460, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x460, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x460, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b2f4, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x4c, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x4c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b290, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b198, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) COPY (const, 0x468, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc20, 4)
display_fonts, (register, 0x4c, 4) INT_MULT (register, 0x2c, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b32c, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts,  ---  BRANCH (ram, 0x1b198, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b338, 4)
display_fonts,  ---  CALL (ram, 0x113cc, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x44, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b814, 4) , (register, 0x61, 1)
display_fonts, (register, 0x2c, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x3c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x458, 4)
display_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x40, 4) COPY (const, 0x458, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b350, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x50, 4) INT_AND (register, 0x3c, 4) , (register, 0x24, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdc8c, 4)
display_fonts, (unique, 0x5880, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x5900, 4) INT_SUB (unique, 0x5880, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5980, 4) INT_SRIGHT (register, 0x3c, 4) , (unique, 0x5900, 4)
display_fonts, (unique, 0x5a80, 4) INT_AND (unique, 0x5980, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5b00, 1) INT_EQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5b80, 1) BOOL_AND (unique, 0x5b00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x5c00, 1) INT_NOTEQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5c80, 1) SUBPIECE (unique, 0x5a80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5d00, 1) BOOL_AND (unique, 0x5c00, 1) , (unique, 0x5c80, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x5b80, 1) , (unique, 0x5d00, 1)
display_fonts, (unique, 0x5e80, 4) INT_SRIGHT (register, 0x3c, 4) , (unique, 0x5880, 4)
display_fonts, (register, 0x28, 4) COPY (unique, 0x5e80, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (register, 0x48, 4) COPY (register, 0x28, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x31, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x31, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x50, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b398, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x48, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x3c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b430, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) INT_MULT (register, 0x40, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3e780, 4) INT_MULT (register, 0x40, 4) , (register, 0x48, 4)
display_fonts, (register, 0x48, 4) INT_ADD (unique, 0x3e780, 4) , (register, 0x44, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x50, 4)
display_fonts, (register, 0x4c, 4) COPY (register, 0x2c, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b3cc, 4)
display_fonts,  ---  CALL (ram, 0x11330, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x20, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc1c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x40, 4) , (const, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_SUB (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_ADD (register, 0x38, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x30, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b3ec, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1b878, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b400, 4)
display_fonts,  ---  CALL (ram, 0x11468, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x20, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x450, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x450, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x450, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x450, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x8, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b424, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x4c, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x4c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b3c0, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b180, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x2c, 4) COPY (const, 0x458, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc20, 4)
display_fonts, (register, 0x4c, 4) INT_MULT (register, 0x2c, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b45c, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts,  ---  BRANCH (ram, 0x1b180, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b468, 4)
display_fonts,  ---  CALL (ram, 0x113f0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x50, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b7f8, 4) , (register, 0x61, 1)
display_fonts, (register, 0x2c, 4) COPY (register, 0x20, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x21c, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x220, 4)
display_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x28, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b490, 4) , (unique, 0x2680, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b480, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) INT_AND (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x48, 4) COPY (register, 0x44, 4)
display_fonts, (unique, 0x3e00, 4) INT_SUB (const, 0x1, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x3e80, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3e00, 4)
display_fonts, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
display_fonts, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x4100, 4) INT_SRIGHT (register, 0x3c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x24, 4) COPY (unique, 0x4100, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x20, 4) INT_NEGATE (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (register, 0x28, 4)
display_fonts, (register, 0x58, 4) INT_ADD (register, 0x24, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x44, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x21c, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b4d8, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b4cc, 4) , (unique, 0x2680, 1)
display_fonts, (register, 0x48, 4) COPY (register, 0x28, 4)
display_fonts,  ---  CBRANCH (ram, 0x1b4d8, 4) , (register, 0x61, 1)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x58, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x20, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x58, 4) , (register, 0x20, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b4d8, 4) , (unique, 0x2680, 1)
display_fonts, (register, 0x44, 4) COPY (register, 0x28, 4)
display_fonts, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x220, 4)
display_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b4b8, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdbdc, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x3c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b504, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
display_fonts, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b5f4, 4) , (unique, 0x2600, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
display_fonts, (register, 0x4c, 4) COPY (register, 0x50, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
display_fonts, (register, 0x38, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x30, 4) COPY (const, 0x220, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x3c, 4) INT_MULT (register, 0x30, 4) , (register, 0x48, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x30, 4) INT_MULT (register, 0x30, 4) , (register, 0x44, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x28, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b54c, 4)
display_fonts,  ---  CALL (ram, 0x11330, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc1c, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x40, 4) , (const, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_SUB (const, 0x24, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b568, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x40, 4)
display_fonts, (register, 0x40, 4) INT_ADD (register, 0x2c, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1b878, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b584, 4)
display_fonts,  ---  CALL (ram, 0x11468, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x20, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x4c, 4) , (register, 0x30, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x30, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x30, 4)
display_fonts, (register, 0x30, 4) INT_ADD (register, 0x4c, 4) , (register, 0x30, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b5a4, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x43c, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x220, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x220, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x220, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (const, 0x1, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b5a4, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x38, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x2c, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b5d8, 4) , (unique, 0x2180, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x43c, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x220, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x220, 4)
display_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x220, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (const, 0x1, 4)
display_fonts, (register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b5c4, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
display_fonts, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x38, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x2c, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b52c, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x50, 4) COPY (register, 0x4c, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b150, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x220, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x220, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x48, 4) INT_MULT (register, 0x2c, 4) , (register, 0x48, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc20, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x48, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b61c, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts,  ---  BRANCH (ram, 0x1b150, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b628, 4)
display_fonts,  ---  CALL (ram, 0x11348, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x44, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b868, 4) , (register, 0x61, 1)
display_fonts, (register, 0x28, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x158, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (register, 0x28, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b640, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
display_fonts, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
display_fonts, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
display_fonts, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
display_fonts, (register, 0x3c, 4) COPY (unique, 0x3580, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc34, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b664, 4)
display_fonts,  ---  CALL (ram, 0x113a8, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x20, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b670, 4)
display_fonts,  ---  CALL (ram, 0x1c758, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b84c, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x50, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x28, 4) COPY (register, 0x44, 4)
display_fonts, (register, 0x2c, 4) COPY (register, 0x50, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b6a0, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b6a8, 4) , (register, 0x61, 1)
display_fonts, (unique, 0x7800, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x20, 4) , (unique, 0x7800, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8480, 4) , (register, 0x2c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1, 4)
display_fonts, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x158, 4)
display_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x28, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b68c, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x20, 4) COPY (const, 0xdc48, 4)
display_fonts, (unique, 0x5880, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x5900, 4) INT_SUB (unique, 0x5880, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5980, 4) INT_SRIGHT (register, 0x50, 4) , (unique, 0x5900, 4)
display_fonts, (unique, 0x5a80, 4) INT_AND (unique, 0x5980, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x5b00, 1) INT_EQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5b80, 1) BOOL_AND (unique, 0x5b00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x5c00, 1) INT_NOTEQUAL (unique, 0x5880, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5c80, 1) SUBPIECE (unique, 0x5a80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x5d00, 1) BOOL_AND (unique, 0x5c00, 1) , (unique, 0x5c80, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x5b80, 1) , (unique, 0x5d00, 1)
display_fonts, (unique, 0x5e80, 4) INT_SRIGHT (register, 0x50, 4) , (unique, 0x5880, 4)
display_fonts, (register, 0x28, 4) COPY (unique, 0x5e80, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
display_fonts, (register, 0x40, 4) COPY (register, 0x28, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x50, 4) INT_AND (register, 0x50, 4) , (register, 0x24, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x37, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x37, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
display_fonts, (register, 0x48, 4) COPY (register, 0x50, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (register, 0x40, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x40, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b6ec, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
display_fonts, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b870, 4) , (unique, 0x2600, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
display_fonts, (register, 0x30, 4) COPY (register, 0x3c, 4)
display_fonts, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
display_fonts, (unique, 0x3300, 4) INT_RIGHT (register, 0x48, 4) , (unique, 0x3280, 4)
display_fonts, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
display_fonts, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3580, 4) INT_LEFT (register, 0x48, 4) , (const, 0x2, 4)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (unique, 0x3580, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (unique, 0x3580, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x28, 4) , (unique, 0x3580, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x28, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
display_fonts, (register, 0x4c, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
display_fonts, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x158, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x40, 4) COPY (const, 0x158, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x28, 4) INT_MULT (register, 0x40, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x28, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x20, 4) COPY (register, 0x38, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b728, 4)
display_fonts,  ---  CALL (ram, 0x11330, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc1c, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x20, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x38, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (const, 0x24, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (const, 0x24, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x3c, 4) INT_SUB (const, 0x24, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b744, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x3c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x3c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1b878, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b760, 4)
display_fonts,  ---  CALL (ram, 0x11468, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x20, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x20, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x34, 4)
display_fonts, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
display_fonts, (unique, 0x8800, 4) COPY (register, 0x48, 4)
display_fonts, (register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x40, 4) INT_MULT (register, 0x40, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x40, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b784, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x68, 1) COPY (register, 0x62, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
display_fonts, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b70c, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
display_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
display_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
display_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
display_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
display_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_fonts,  ---  CBRANCH (ram, 0x1b7cc, 4) , (unique, 0x1a80, 1)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b7ac, 4)
display_fonts,  ---  CALL (ram, 0x111a4, 4)
display_fonts,  ---  BRANCH (ram, 0x1b168, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdb8c, 4)
display_fonts, (register, 0x28, 4) COPY (register, 0x40, 4)
display_fonts, (register, 0x2c, 4) COPY (register, 0x30, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b7c8, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts,  ---  BRANCH (ram, 0x1b0dc, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x24, 4) COPY (const, 0xdc20, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (unique, 0x7800, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x158, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x2c, 4) COPY (const, 0x158, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (register, 0x2c, 4) INT_MULT (register, 0x2c, 4) , (register, 0x28, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x2c, 4)
display_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b7f4, 4)
display_fonts,  ---  CALL (ram, 0x11354, 4)
display_fonts,  ---  BRANCH (ram, 0x1b7a4, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdbdc, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x3c, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b810, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b150, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdc8c, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x31, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x31, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b82c, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b180, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdccc, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x38, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x38, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b848, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b198, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
display_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_fonts, (register, 0x20, 4) COPY (const, 0xdc48, 4)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x24, 4) COPY (const, 0x1, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x37, 4) , (const, 0x1f, 4)
display_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_fonts, (register, 0x28, 4) COPY (const, 0x37, 4)
display_fonts, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
display_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
display_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_fonts, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_fonts, (register, 0x58, 4) COPY (const, 0x1b864, 4)
display_fonts,  ---  CALL (ram, 0x1124c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b7a4, 4)
display_fonts, (register, 0x3c, 4) COPY (register, 0x2c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b654, 4)
display_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
display_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
display_fonts,  ---  BRANCH (ram, 0x1b798, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
list_fonts, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x34, 4) COPY (const, 0xf4a8, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x38, 4) COPY (register, 0x20, 4)
list_fonts, (register, 0x40, 4) COPY (register, 0x24, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts,  ---  BRANCH (ram, 0x1b8a4, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b89c, 4)
list_fonts,  ---  CALL (ram, 0x11168, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x30, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b8e4, 4) , (register, 0x61, 1)
list_fonts, (unique, 0x8800, 4) COPY (register, 0x34, 4)
list_fonts, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
list_fonts, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x38, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
list_fonts, (register, 0x24, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b898, 4) , (unique, 0x1a80, 1)
list_fonts, (register, 0x2c, 4) COPY (const, 0xf510, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdb8c, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x28, 4) COPY (register, 0x40, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x30, 4) COPY (register, 0x50, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x2c, 4) COPY (register, 0x38, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b8d8, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x80, 4) COPY (register, 0x54, 4)
list_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x54, 4) COPY (register, 0x80, 4)
list_fonts, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
list_fonts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x69, 1) COPY (register, 0xb0, 1)
list_fonts, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
list_fonts,  ---  RETURN (register, 0x5c, 4)
list_fonts, (register, 0x34, 4) COPY (const, 0xf51c, 4)
list_fonts, (register, 0x44, 4) COPY (const, 0xf510, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x44, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x44, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b8f8, 4)
list_fonts,  ---  CALL (ram, 0x112f4, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x24, 4) COPY (register, 0x30, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
list_fonts,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x38, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
list_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b910, 4)
list_fonts,  ---  CALL (ram, 0x11228, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x3c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba9c, 4) , (register, 0x61, 1)
list_fonts, (register, 0x24, 4) COPY (const, 0xdbcc, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b924, 4)
list_fonts,  ---  CALL (ram, 0x113a8, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba54, 4) , (unique, 0x1a80, 1)
list_fonts, (register, 0x24, 4) COPY (const, 0xdc28, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b93c, 4)
list_fonts,  ---  CALL (ram, 0x113a8, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b9f4, 4) , (unique, 0x1a80, 1)
list_fonts, (register, 0x24, 4) COPY (const, 0xdc80, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b954, 4)
list_fonts,  ---  CALL (ram, 0x113a8, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b9bc, 4) , (unique, 0x1a80, 1)
list_fonts, (register, 0x24, 4) COPY (const, 0xdcc0, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b96c, 4)
list_fonts,  ---  CALL (ram, 0x113a8, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b984, 4) , (unique, 0x1a80, 1)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x30, 4) COPY (const, 0x1, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x66, 1) COPY (register, 0x68, 1)
list_fonts, (register, 0x67, 1) COPY (register, 0x63, 1)
list_fonts, (register, 0x20, 4) COPY (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
list_fonts, (register, 0x80, 4) COPY (register, 0x54, 4)
list_fonts, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
list_fonts, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
list_fonts, (register, 0x54, 4) COPY (register, 0x80, 4)
list_fonts, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
list_fonts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x69, 1) COPY (register, 0xb0, 1)
list_fonts, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
list_fonts,  ---  RETURN (register, 0x5c, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b98c, 4)
list_fonts,  ---  CALL (ram, 0x11198, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b974, 4) , (register, 0x61, 1)
list_fonts, (register, 0x30, 4) COPY (register, 0x20, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b9ac, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x468, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b99c, 4) , (unique, 0x1a80, 1)
list_fonts,  ---  BRANCH (ram, 0x1b974, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b9c4, 4)
list_fonts,  ---  CALL (ram, 0x113cc, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b95c, 4) , (register, 0x61, 1)
list_fonts, (register, 0x30, 4) COPY (register, 0x20, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b9e4, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x458, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b9d4, 4) , (unique, 0x1a80, 1)
list_fonts,  ---  BRANCH (ram, 0x1b95c, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1b9fc, 4)
list_fonts,  ---  CALL (ram, 0x11348, 4)
list_fonts, (register, 0x30, 4) COPY (register, 0x20, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdc34, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1ba10, 4)
list_fonts,  ---  CALL (ram, 0x113a8, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x38, 4) COPY (register, 0x20, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b944, 4) , (register, 0x61, 1)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba3c, 4) , (unique, 0x1a80, 1)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
list_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba44, 4) , (register, 0x61, 1)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1ba44, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x158, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba20, 4) , (unique, 0x1a80, 1)
list_fonts,  ---  BRANCH (ram, 0x1b944, 4)
list_fonts, (register, 0x20, 4) COPY (register, 0x3c, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1ba5c, 4)
list_fonts,  ---  CALL (ram, 0x113f0, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b92c, 4) , (register, 0x61, 1)
list_fonts, (register, 0x30, 4) COPY (register, 0x20, 4)
list_fonts,  ---  BRANCH (ram, 0x1ba7c, 4)
list_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x220, 4)
list_fonts, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1b92c, 4) , (register, 0x61, 1)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x21c, 4)
list_fonts, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
list_fonts, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
list_fonts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
list_fonts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
list_fonts, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
list_fonts, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
list_fonts, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
list_fonts, (register, 0x62, 1) COPY (register, 0x66, 1)
list_fonts, (register, 0x61, 1) COPY (register, 0x65, 1)
list_fonts, (register, 0x60, 1) COPY (register, 0x64, 1)
list_fonts, (register, 0x63, 1) COPY (register, 0x67, 1)
list_fonts,  ---  CBRANCH (ram, 0x1ba70, 4) , (register, 0x61, 1)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdf68, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1ba98, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts,  ---  BRANCH (ram, 0x1ba70, 4)
list_fonts, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
list_fonts, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
list_fonts, (register, 0x24, 4) COPY (const, 0xdb8c, 4)
list_fonts, (register, 0x28, 4) COPY (register, 0x40, 4)
list_fonts, (register, 0x2c, 4) COPY (register, 0x38, 4)
list_fonts, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
list_fonts, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
list_fonts, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
list_fonts, (register, 0x58, 4) COPY (const, 0x1bab4, 4)
list_fonts,  ---  CALL (ram, 0x11354, 4)
list_fonts,  ---  BRANCH (ram, 0x1b8d8, 4)
elementp,  ---  BRANCH (ram, 0x1bac4, 4)
FUN_0001bac4, (register, 0x68, 1) COPY (register, 0x62, 1)
FUN_0001bac4, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x20, 4)
FUN_0001bac4, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x2c, 4)
FUN_0001bac4, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
FUN_0001bac4, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x62, 1) COPY (register, 0x66, 1)
FUN_0001bac4, (register, 0x61, 1) COPY (register, 0x65, 1)
FUN_0001bac4, (register, 0x60, 1) COPY (register, 0x64, 1)
FUN_0001bac4, (register, 0x63, 1) COPY (register, 0x67, 1)
FUN_0001bac4,  ---  CBRANCH (ram, 0x1bad8, 4) , (register, 0x61, 1)
FUN_0001bac4, (unique, 0x8800, 4) COPY (register, 0x24, 4)
FUN_0001bac4, (register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x4, 4)
FUN_0001bac4, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
FUN_0001bac4, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
FUN_0001bac4, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
FUN_0001bac4, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
FUN_0001bac4, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
FUN_0001bac4, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
FUN_0001bac4, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
FUN_0001bac4, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
FUN_0001bac4, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
FUN_0001bac4, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
FUN_0001bac4, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x62, 1) COPY (register, 0x66, 1)
FUN_0001bac4, (register, 0x61, 1) COPY (register, 0x65, 1)
FUN_0001bac4, (register, 0x60, 1) COPY (register, 0x64, 1)
FUN_0001bac4, (register, 0x63, 1) COPY (register, 0x67, 1)
FUN_0001bac4, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
FUN_0001bac4,  ---  CBRANCH (ram, 0x1babc, 4) , (unique, 0x1a80, 1)
FUN_0001bac4, (register, 0x20, 4) COPY (register, 0x2c, 4)
FUN_0001bac4, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
FUN_0001bac4, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x69, 1) COPY (register, 0xb0, 1)
FUN_0001bac4, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
FUN_0001bac4,  ---  RETURN (register, 0x5c, 4)
FUN_0001bac4, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
FUN_0001bac4, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
FUN_0001bac4, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
FUN_0001bac4, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
FUN_0001bac4, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
FUN_0001bac4, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
FUN_0001bac4, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
FUN_0001bac4, (register, 0x20, 4) COPY (const, 0x1, 4)
FUN_0001bac4, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x66, 1) COPY (register, 0x68, 1)
FUN_0001bac4, (register, 0x67, 1) COPY (register, 0x63, 1)
FUN_0001bac4, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
FUN_0001bac4, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
FUN_0001bac4, (register, 0x69, 1) COPY (register, 0xb0, 1)
FUN_0001bac4, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
FUN_0001bac4,  ---  RETURN (register, 0x5c, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
display_usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x30, 4) COPY (const, 0xf51c, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
display_usage, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x44, 4) COPY (register, 0x20, 4)
display_usage, (register, 0x38, 4) COPY (register, 0x24, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xdd94, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x3c, 4) COPY (register, 0x28, 4)
display_usage, (register, 0x4c, 4) COPY (const, 0xf134, 4)
display_usage, (register, 0x28, 4) COPY (register, 0x44, 4)
display_usage, (register, 0x40, 4) COPY (register, 0x2c, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x4c, 4) , (const, 0xffff, 4)
display_usage, (register, 0x4c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bb18, 4)
display_usage,  ---  CALL (ram, 0x11354, 4)
display_usage, (register, 0x20, 4) COPY (register, 0x44, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bb20, 4)
display_usage,  ---  CALL (ram, 0x11330, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x7, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x7, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x20, 4) , (const, 0x7, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbbc, 4) , (register, 0x61, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0xc, 4)
display_usage, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x2c, 4) COPY (register, 0x38, 4)
display_usage,  ---  BRANCH (ram, 0x1bb44, 4)
display_usage, (register, 0x68, 1) COPY (register, 0x62, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (register, 0x50, 4) , (register, 0x28, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x50, 4)
display_usage, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x50, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbb0, 4) , (register, 0x61, 1)
display_usage, (unique, 0x8800, 4) COPY (register, 0x2c, 4)
display_usage, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
display_usage, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage,  ---  CBRANCH (ram, 0x1bb3c, 4) , (unique, 0x1a80, 1)
display_usage, (register, 0x58, 4) COPY (const, 0x1bb54, 4)
display_usage,  ---  CALL (ram, 0x11330, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (const, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (const, 0x40, 4) , (register, 0x20, 4)
display_usage, (register, 0x2c, 4) INT_SUB (const, 0x40, 4) , (register, 0x20, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
display_usage, (register, 0x48, 4) COPY (register, 0x20, 4)
display_usage, (register, 0x68, 1) COPY (register, 0x62, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
display_usage, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
display_usage, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
display_usage,  ---  CBRANCH (ram, 0x1bc6c, 4) , (unique, 0x2600, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
display_usage, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xdda4, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bb78, 4)
display_usage,  ---  CALL (ram, 0x11354, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0xc, 4)
display_usage, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (const, 0x4, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (const, 0x4, 4)
display_usage, (register, 0x50, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
display_usage, (register, 0x68, 1) COPY (register, 0x62, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (register, 0x34, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (register, 0x34, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x50, 4) , (register, 0x34, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0xff, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0xff, 4) , (register, 0x28, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xff, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xff, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
display_usage, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
display_usage,  ---  CBRANCH (ram, 0x1bc28, 4) , (unique, 0x2080, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x24, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x1, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bc50, 4) , (register, 0x61, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x24, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x2, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bc8c, 4) , (register, 0x61, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5d, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x20, 4) COPY (const, 0x5d, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bbb0, 4)
display_usage,  ---  CALL (ram, 0x113e4, 4)
display_usage, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x10, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage,  ---  CBRANCH (ram, 0x1bb30, 4) , (unique, 0x1a80, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bcac, 4) , (register, 0x61, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (register, 0x3c, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bbd0, 4)
display_usage,  ---  CALL (ram, 0x11468, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bcc0, 4) , (register, 0x61, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x2, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x2, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbe0, 4) , (unique, 0x2680, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x40, 4) INT_SUB (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_usage,  ---  CBRANCH (ram, 0x1bd0c, 4) , (register, 0x61, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbec, 4) , (unique, 0x2680, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x3c, 4) COPY (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
display_usage, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbf4, 4) , (unique, 0x2680, 1)
display_usage, (register, 0x40, 4) COPY (register, 0x3c, 4)
display_usage, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
display_usage, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
display_usage, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbf8, 4) , (unique, 0x2680, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x40, 4) INT_OR (register, 0x3c, 4) , (const, 0x1, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage,  ---  CBRANCH (ram, 0x1bc0c, 4) , (register, 0x61, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x20, 4) COPY (const, 0xa, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (register, 0x58, 4) COPY (const, 0x1bc0c, 4)
display_usage,  ---  CALL (ram, 0x113e4, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xde8c, 4)
display_usage, (register, 0x28, 4) COPY (const, 0xdea0, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
display_usage, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x80, 4) COPY (register, 0x54, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_usage, (register, 0x54, 4) COPY (register, 0x80, 4)
display_usage,  ---  BRANCH (ram, 0x11354, 4)
display_usage, (register, 0x2c, 4) COPY (const, 0xf51c, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xddac, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
display_usage, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x5, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x5, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x5, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bc44, 4)
display_usage,  ---  CALL (ram, 0x11354, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x24, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x1, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage,  ---  CBRANCH (ram, 0x1bb98, 4) , (unique, 0x1a80, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (const, 0xddb4, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x28, 4) COPY (const, 0x5, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_usage, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x68, 1) COPY (register, 0x62, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bc68, 4)
display_usage,  ---  CALL (ram, 0x1124c, 4)
display_usage,  ---  BRANCH (ram, 0x1bbb0, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (const, 0xdda0, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x24, 4) COPY (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x28, 4) COPY (const, 0x2, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_usage, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x34, 4) COPY (const, 0x8, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (register, 0x58, 4) COPY (const, 0x1bc88, 4)
display_usage,  ---  CALL (ram, 0x1124c, 4)
display_usage,  ---  BRANCH (ram, 0x1bb64, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (const, 0xddbc, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x28, 4) COPY (const, 0xa, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x24, 4) COPY (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (register, 0x68, 1) COPY (register, 0x62, 1)
display_usage, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (register, 0x28, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_usage, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bca8, 4)
display_usage,  ---  CALL (ram, 0x1124c, 4)
display_usage,  ---  BRANCH (ram, 0x1bbb0, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x20, 4) COPY (const, 0xa, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (register, 0x58, 4) COPY (const, 0x1bcb8, 4)
display_usage,  ---  CALL (ram, 0x113e4, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
display_usage, (register, 0x62, 1) COPY (register, 0x66, 1)
display_usage, (register, 0x61, 1) COPY (register, 0x65, 1)
display_usage, (register, 0x60, 1) COPY (register, 0x64, 1)
display_usage, (register, 0x63, 1) COPY (register, 0x67, 1)
display_usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
display_usage,  ---  CBRANCH (ram, 0x1bbd8, 4) , (unique, 0x1a80, 1)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xddc8, 4)
display_usage, (register, 0x28, 4) COPY (register, 0x44, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bcd4, 4)
display_usage,  ---  CALL (ram, 0x11354, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (const, 0xdeb8, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x24, 4) COPY (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x62, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x28, 4) COPY (const, 0x62, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_usage, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x40, 4)
display_usage, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x40, 4) INT_SUB (register, 0x40, 4) , (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bcf0, 4)
display_usage,  ---  CALL (ram, 0x1124c, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x20, 4) COPY (const, 0xdf1c, 4)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x24, 4) COPY (const, 0x1, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x43, 4) , (const, 0x1f, 4)
display_usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_usage, (register, 0x28, 4) COPY (const, 0x43, 4)
display_usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x66, 1) COPY (register, 0x68, 1)
display_usage, (register, 0x67, 1) COPY (register, 0x63, 1)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_usage, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bd08, 4)
display_usage,  ---  CALL (ram, 0x1124c, 4)
display_usage,  ---  BRANCH (ram, 0x1bbe4, 4)
display_usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_usage, (register, 0x24, 4) COPY (const, 0xde18, 4)
display_usage, (register, 0x28, 4) COPY (register, 0x44, 4)
display_usage, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_usage, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_usage, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_usage, (register, 0x58, 4) COPY (const, 0x1bd20, 4)
display_usage,  ---  CALL (ram, 0x11354, 4)
display_usage,  ---  BRANCH (ram, 0x1bcd4, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
display_version, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x30, 4) COPY (const, 0xf51c, 4)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
display_version, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
display_version, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_version, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_version, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_version, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_version, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
display_version, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
display_version, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
display_version, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_version, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_version, (register, 0x2c, 4) COPY (const, 0xdf7c, 4)
display_version, (register, 0x50, 4) COPY (register, 0x20, 4)
display_version, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_version, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
display_version, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
display_version,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
display_version, (register, 0x38, 4) COPY (register, 0x24, 4)
display_version, (register, 0x2c, 4) COPY (const, 0xdf6c, 4)
display_version, (register, 0x24, 4) COPY (const, 0xdf60, 4)
display_version, (register, 0x34, 4) COPY (const, 0xdf68, 4)
display_version, (register, 0x20, 4) COPY (register, 0x58, 4)
display_version, (register, 0x3c, 4) COPY (register, 0x28, 4)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
display_version, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (register, 0x28, 4) COPY (register, 0x50, 4)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
display_version, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
display_version, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (register, 0x58, 4) COPY (const, 0x1bd74, 4)
display_version,  ---  CALL (ram, 0x11354, 4)
display_version, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_version, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_version, (register, 0x28, 4) COPY (register, 0x3c, 4)
display_version, (register, 0x24, 4) COPY (register, 0x34, 4)
display_version, (register, 0x58, 4) COPY (const, 0x1bd84, 4)
display_version,  ---  CALL (ram, 0x11354, 4)
display_version, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_version, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_version, (register, 0x20, 4) COPY (const, 0xdf80, 4)
display_version, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
display_version, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_version, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_version, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_version, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_version, (register, 0x24, 4) COPY (const, 0x1, 4)
display_version, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
display_version, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
display_version, (register, 0x66, 1) COPY (register, 0x68, 1)
display_version, (register, 0x67, 1) COPY (register, 0x63, 1)
display_version, (unique, 0x2e80, 4) INT_RIGHT (const, 0x97, 4) , (const, 0x1f, 4)
display_version, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_version, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_version, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_version, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_version, (register, 0x28, 4) COPY (const, 0x97, 4)
display_version, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_version, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_version, (register, 0x66, 1) COPY (register, 0x68, 1)
display_version, (register, 0x67, 1) COPY (register, 0x63, 1)
display_version, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
display_version, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
display_version, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
display_version, (register, 0x58, 4) COPY (const, 0x1bd9c, 4)
display_version,  ---  CALL (ram, 0x1124c, 4)
display_version, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
display_version, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
display_version, (register, 0x24, 4) COPY (register, 0x34, 4)
display_version, (register, 0x28, 4) COPY (register, 0x38, 4)
display_version, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
display_version, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
display_version, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
display_version, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
display_version, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
display_version, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
display_version, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
display_version, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
display_version, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
display_version, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
display_version, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
display_version, (register, 0x80, 4) COPY (register, 0x54, 4)
display_version, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_version, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_version, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_version, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_version, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
display_version, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
display_version, (register, 0x54, 4) COPY (register, 0x80, 4)
display_version,  ---  BRANCH (ram, 0x11354, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
exchange, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x38, 4) COPY (const, 0xf528, 4)
exchange, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
exchange, (unique, 0x3f300, 4) INT_AND (register, 0x38, 4) , (const, 0xffff, 4)
exchange, (register, 0x38, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
exchange, (register, 0x80, 4) COPY (register, 0x38, 4)
exchange, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
exchange, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
exchange, (register, 0x30, 4) COPY (register, 0x44, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x40, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
exchange, (register, 0x34, 4) COPY (register, 0x3c, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x58, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x30, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x58, 4) , (register, 0x30, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
exchange, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
exchange, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
exchange,  ---  CBRANCH (ram, 0x1bddc, 4) , (unique, 0x2680, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x34, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x58, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
exchange,  ---  CBRANCH (ram, 0x1be30, 4) , (unique, 0x2600, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x34, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x58, 4)
exchange, (register, 0x4c, 4) INT_SUB (register, 0x34, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x58, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x30, 4)
exchange, (register, 0x48, 4) INT_SUB (register, 0x58, 4) , (register, 0x30, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x48, 4) , (register, 0x4c, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x48, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x48, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
exchange, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
exchange,  ---  CBRANCH (ram, 0x1be44, 4) , (unique, 0x2480, 1)
exchange, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
exchange, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
exchange, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
exchange, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
exchange, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
exchange, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
exchange, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
exchange,  ---  CBRANCH (ram, 0x1be20, 4) , (unique, 0x2600, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x58, 4) , (register, 0x4c, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x58, 4) , (register, 0x4c, 4)
exchange, (register, 0x48, 4) INT_ADD (register, 0x58, 4) , (register, 0x4c, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x2c, 4) COPY (register, 0x40, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x28, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x48, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x48, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x48, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
exchange, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
exchange, (unique, 0x8800, 4) COPY (register, 0x28, 4)
exchange, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x50, 4)
exchange, (unique, 0x8800, 4) COPY (register, 0x2c, 4)
exchange, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x24, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x48, 4) , (register, 0x2c, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x48, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x48, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
exchange,  ---  CBRANCH (ram, 0x1be08, 4) , (unique, 0x1a80, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (register, 0x4c, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (register, 0x4c, 4)
exchange, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (register, 0x4c, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x58, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x30, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x58, 4) , (register, 0x30, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
exchange, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
exchange, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
exchange,  ---  CBRANCH (ram, 0x1be2c, 4) , (unique, 0x2680, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x34, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x58, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
exchange, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
exchange,  ---  CBRANCH (ram, 0x1bde0, 4) , (unique, 0x2480, 1)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x3c, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x58, 4)
exchange, (register, 0x58, 4) INT_SUB (register, 0x3c, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (register, 0x58, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (register, 0x58, 4)
exchange, (register, 0x58, 4) INT_ADD (register, 0x44, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
exchange, (register, 0x80, 4) COPY (register, 0x54, 4)
exchange, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
exchange, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
exchange, (register, 0x54, 4) COPY (register, 0x80, 4)
exchange, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
exchange, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x69, 1) COPY (register, 0xb0, 1)
exchange, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
exchange,  ---  RETURN (register, 0x5c, 4)
exchange, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
exchange, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
exchange, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
exchange, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
exchange, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
exchange, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
exchange, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x48, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (const, 0x0, 4)
exchange, (unique, 0x3b980, 4) INT_SUB (register, 0x48, 4) , (const, 0x0, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
exchange, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
exchange,  ---  CBRANCH (ram, 0x1be7c, 4) , (unique, 0x2600, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x30, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x58, 4)
exchange, (register, 0x2c, 4) INT_SUB (register, 0x30, 4) , (register, 0x58, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x2c, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x2c, 4)
exchange, (register, 0x2c, 4) INT_ADD (register, 0x34, 4) , (register, 0x2c, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x2c, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (register, 0x2c, 4)
exchange, (register, 0x4c, 4) INT_ADD (register, 0x48, 4) , (register, 0x2c, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x28, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
exchange, (unique, 0x3300, 4) INT_RIGHT (register, 0x4c, 4) , (unique, 0x3280, 4)
exchange, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
exchange, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
exchange, (unique, 0x3580, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)
exchange, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x4c, 4) INT_ADD (register, 0x20, 4) , (unique, 0x3580, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
exchange, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
exchange, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
exchange, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
exchange, (unique, 0x8800, 4) COPY (register, 0x28, 4)
exchange, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x50, 4)
exchange, (unique, 0x8800, 4) COPY (register, 0x2c, 4)
exchange, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x24, 4)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x2c, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x4c, 4)
exchange, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x4c, 4)
exchange, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
exchange, (register, 0x62, 1) COPY (register, 0x66, 1)
exchange, (register, 0x61, 1) COPY (register, 0x65, 1)
exchange, (register, 0x60, 1) COPY (register, 0x64, 1)
exchange, (register, 0x63, 1) COPY (register, 0x67, 1)
exchange, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
exchange,  ---  CBRANCH (ram, 0x1be64, 4) , (unique, 0x1a80, 1)
exchange, (register, 0x68, 1) COPY (register, 0x62, 1)
exchange, (register, 0x66, 1) INT_LESSEQUAL (register, 0x48, 4) , (register, 0x34, 4)
exchange, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x48, 4)
exchange, (register, 0x34, 4) INT_SUB (register, 0x34, 4) , (register, 0x48, 4)
exchange, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
exchange, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
exchange,  ---  BRANCH (ram, 0x1bdd4, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
_getopt_internal, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x30, 4) COPY (const, 0xf528, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x30, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x50, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3c, 4) , (register, 0x54, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x40, 4) COPY (register, 0x20, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x44, 4) COPY (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x50, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x50, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x50, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c044, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf9c, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf9c, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c32c, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_getopt_internal, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
_getopt_internal, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0c0, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0a0, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x38, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (register, 0x3c, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1bf2c, 4)
_getopt_internal,  ---  CALL (ram, 0x1133c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf38, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf3c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf40, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf48, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x3a, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c2d4, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x34, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf88, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf510, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe130, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1bf88, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x80, 4) COPY (register, 0x54, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x54, 4) COPY (register, 0x80, 4)
_getopt_internal, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x69, 1) COPY (register, 0xb0, 1)
_getopt_internal, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_getopt_internal,  ---  RETURN (register, 0x5c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c1f8, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c270, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x7800, 4) INT_LEFT (register, 0x38, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c020, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c290, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c290, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x34, 4) COPY (const, 0xf528, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c4f8, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x28, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c010, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c00c, 4)
_getopt_internal,  ---  CALL (ram, 0x1bdb4, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x28, 4) COPY (register, 0x40, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c278, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c280, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x80, 4) COPY (register, 0x54, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x54, 4) COPY (register, 0x80, 4)
_getopt_internal, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x69, 1) COPY (register, 0xb0, 1)
_getopt_internal, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_getopt_internal,  ---  RETURN (register, 0x5c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x34, 4) COPY (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c408, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2b, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2b, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2b, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2b, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c2c0, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x20, 4) COPY (const, 0xe018, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c078, 4)
_getopt_internal,  ---  CALL (ram, 0x11288, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c080, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c084, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c088, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c1f8, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bfb0, 4) , (unique, 0x1a80, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c270, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0c0, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
_getopt_internal, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c0b8, 4)
_getopt_internal,  ---  CALL (ram, 0x1133c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf10, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (register, 0x3c, 4) COPY (register, 0x34, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0d0, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0e8, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x3c, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0e4, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c0d8, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x48, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x48, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c468, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
_getopt_internal, (register, 0x4c, 4) COPY (register, 0x44, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x40, 4) COPY (register, 0x4c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x44, 4) INT_SUB (register, 0x3c, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x4c, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x30, 4) COPY (register, 0x48, 4)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x30, 4)
_getopt_internal, (register, 0x24, 4) COPY (register, 0x34, 4)
_getopt_internal, (register, 0x28, 4) COPY (register, 0x44, 4)
_getopt_internal, (register, 0x48, 4) COPY (register, 0x40, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c130, 4)
_getopt_internal,  ---  CALL (ram, 0x11474, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x30, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c160, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c140, 4)
_getopt_internal,  ---  CALL (ram, 0x11330, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x20, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c3fc, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c154, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c158, 4) , (unique, 0x2680, 1)
_getopt_internal, (register, 0x4c, 4) COPY (register, 0x40, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c15c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c160, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x40, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c11c, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c340, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c1cc, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf510, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe028, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c1c0, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x34, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c1d8, 4)
_getopt_internal,  ---  CALL (ram, 0x11330, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x80, 4) COPY (register, 0x54, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x54, 4) COPY (register, 0x80, 4)
_getopt_internal, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x69, 1) COPY (register, 0xb0, 1)
_getopt_internal, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_getopt_internal,  ---  RETURN (register, 0x5c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x34, 4) COPY (const, 0xf528, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c4ec, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c224, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c220, 4)
_getopt_internal,  ---  CALL (ram, 0x1bdb4, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
_getopt_internal, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c22c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
_getopt_internal, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c230, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x3300, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3280, 4)
_getopt_internal, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3580, 4) INT_LEFT (register, 0x38, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
_getopt_internal, (register, 0x28, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3580, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
_getopt_internal, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c248, 4) , (unique, 0x2480, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c314, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c314, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8800, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c238, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c238, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c318, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c280, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) INT_NEGATE (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x80, 4) COPY (register, 0x54, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_getopt_internal, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x54, 4) COPY (register, 0x80, 4)
_getopt_internal, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x69, 1) COPY (register, 0xb0, 1)
_getopt_internal, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_getopt_internal,  ---  RETURN (register, 0x5c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c020, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x24, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x34, 4) INT_SUB (register, 0x24, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x34, 4) CALLOTHER (const, 0x0, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3880, 4) INT_RIGHT (register, 0x34, 4) , (unique, 0x3800, 4)
_getopt_internal, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b00, 4) INT_RIGHT (register, 0x34, 4) , (const, 0x5, 4)
_getopt_internal, (register, 0x34, 4) COPY (unique, 0x3b00, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c2b0, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x34, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x34, 4) INT_ADD (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1bed0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c08c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c038, 4) , (unique, 0x1a80, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c558, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c504, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c038, 4)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x40, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bfb0, 4) , (unique, 0x1a80, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c270, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x3c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x38, 4) COPY (register, 0x3c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1bf20, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c468, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x48, 4) COPY (register, 0x4c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x44, 4) COPY (const, 0xf528, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x44, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x44, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c41c, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c37c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c380, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c428, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c3e4, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c5ec, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xf510, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe080, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c3e0, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x34, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c3f0, 4)
_getopt_internal,  ---  CALL (ram, 0x11330, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c038, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
_getopt_internal, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
_getopt_internal, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c350, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x34, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0x2, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c08c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c52c, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x34, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c430, 4)
_getopt_internal,  ---  CALL (ram, 0x11330, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x28, 4) COPY (register, 0x48, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c448, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c454, 4) , (unique, 0x2680, 1)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x48, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c458, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c45c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c460, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c464, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c038, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c5b0, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c4cc, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c688, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xf510, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe108, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c4c4, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xcf1c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c038, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c4f4, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c224, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x38, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c010, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x40, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x40, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf528, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x1c61c, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (unique, 0x8480, 4) INT_ADD (register, 0x24, 4) , (unique, 0x7800, 4)
_getopt_internal, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c308, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x40, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x3ba80, 4) INT_SUB (register, 0x40, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
_getopt_internal, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c574, 4) , (unique, 0x2600, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x4c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c428, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c560, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c564, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c568, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c56c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c570, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c308, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c6bc, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x20, 4) COPY (register, 0x34, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c590, 4)
_getopt_internal,  ---  CALL (ram, 0x11330, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x68, 1) COPY (register, 0x62, 1)
_getopt_internal, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x20, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c5a8, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c5ac, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c038, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c674, 4) , (register, 0x61, 1)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
_getopt_internal, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c5cc, 4)
_getopt_internal,  ---  CALL (ram, 0x1133c, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1bf14, 4) , (unique, 0x1a80, 1)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c494, 4) , (unique, 0x1a80, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c4cc, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xf510, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe04c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c614, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c3e4, 4)
_getopt_internal, (register, 0x34, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x34, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c658, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf510, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe14c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c658, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3a, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c66c, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3f, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c670, 4) , (unique, 0x2680, 1)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3a, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x38, 4) COPY (const, 0x3a, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x66, 1) COPY (register, 0x68, 1)
_getopt_internal, (register, 0x67, 1) COPY (register, 0x63, 1)
_getopt_internal,  ---  BRANCH (ram, 0x1c308, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf504, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_getopt_internal, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_getopt_internal, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_getopt_internal, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_getopt_internal, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
_getopt_internal, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x62, 1) COPY (register, 0x66, 1)
_getopt_internal, (register, 0x61, 1) COPY (register, 0x65, 1)
_getopt_internal, (register, 0x60, 1) COPY (register, 0x64, 1)
_getopt_internal, (register, 0x63, 1) COPY (register, 0x67, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x1c4cc, 4) , (register, 0x61, 1)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf510, 4)
_getopt_internal, (register, 0x2c, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x2c, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe0e0, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x2c, 4) COPY (register, 0x34, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c6b0, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c4cc, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xf510, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_getopt_internal, (register, 0x28, 4) COPY (const, 0xf12c, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x2, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x28, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x28, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x24, 4) COPY (const, 0xe0b4, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
_getopt_internal, (unique, 0x3f300, 4) INT_AND (register, 0x24, 4) , (const, 0xffff, 4)
_getopt_internal, (register, 0x24, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
_getopt_internal, (register, 0x58, 4) COPY (const, 0x1c6ec, 4)
_getopt_internal,  ---  CALL (ram, 0x11354, 4)
_getopt_internal, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
_getopt_internal, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
_getopt_internal,  ---  BRANCH (ram, 0x1c588, 4)
gnu_getopt, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
gnu_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)
gnu_getopt, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
gnu_getopt, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
gnu_getopt, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
gnu_getopt, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
gnu_getopt, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
gnu_getopt, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
gnu_getopt, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
gnu_getopt, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
gnu_getopt, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
gnu_getopt, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
gnu_getopt, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
gnu_getopt, (register, 0x50, 4) COPY (const, 0x0, 4)
gnu_getopt, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x66, 1) COPY (register, 0x68, 1)
gnu_getopt, (register, 0x67, 1) COPY (register, 0x63, 1)
gnu_getopt, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
gnu_getopt,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
gnu_getopt, (register, 0x2c, 4) COPY (register, 0x50, 4)
gnu_getopt, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
gnu_getopt,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
gnu_getopt, (register, 0x58, 4) COPY (const, 0x1c710, 4)
gnu_getopt,  ---  CALL (ram, 0x1be84, 4)
gnu_getopt, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
gnu_getopt, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
gnu_getopt, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
gnu_getopt, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
gnu_getopt, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
gnu_getopt, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
gnu_getopt, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
gnu_getopt, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
gnu_getopt, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x8800, 4) COPY (register, 0x54, 4)
gnu_getopt, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
gnu_getopt, (unique, 0x3c980, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
gnu_getopt, (unique, 0x0, 4) INT_AND (unique, 0x3c980, 4) , (const, 0x1, 4)
gnu_getopt, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x69, 1) COPY (register, 0xb0, 1)
gnu_getopt, (register, 0x5c, 4) INT_AND (unique, 0x3c980, 4) , (const, 0xfffffffe, 4)
gnu_getopt,  ---  BRANCHIND (register, 0x5c, 4)
getopt_long, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)
getopt_long, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
getopt_long, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
getopt_long, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
getopt_long, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
getopt_long, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
getopt_long, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
getopt_long, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long, (register, 0x58, 4) COPY (const, 0x0, 4)
getopt_long, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
getopt_long, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
getopt_long, (register, 0x66, 1) COPY (register, 0x68, 1)
getopt_long, (register, 0x67, 1) COPY (register, 0x63, 1)
getopt_long, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
getopt_long, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
getopt_long, (register, 0x80, 4) COPY (register, 0x54, 4)
getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x50, 4)
getopt_long, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
getopt_long, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
getopt_long, (register, 0x58, 4) COPY (const, 0x1c730, 4)
getopt_long,  ---  CALL (ram, 0x1be84, 4)
getopt_long, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
getopt_long, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
getopt_long, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
getopt_long, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
getopt_long, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
getopt_long, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x8800, 4) COPY (register, 0x54, 4)
getopt_long, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
getopt_long, (unique, 0x3c980, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
getopt_long, (unique, 0x0, 4) INT_AND (unique, 0x3c980, 4) , (const, 0x1, 4)
getopt_long, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
getopt_long, (register, 0x69, 1) COPY (register, 0xb0, 1)
getopt_long, (register, 0x5c, 4) INT_AND (unique, 0x3c980, 4) , (const, 0xfffffffe, 4)
getopt_long,  ---  BRANCHIND (register, 0x5c, 4)
getopt_long_only, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)
getopt_long_only, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
getopt_long_only, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long_only, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long_only, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long_only, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long_only, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
getopt_long_only, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
getopt_long_only, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
getopt_long_only, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
getopt_long_only, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
getopt_long_only, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
getopt_long_only, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long_only, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long_only, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long_only, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long_only, (register, 0x58, 4) COPY (const, 0x1, 4)
getopt_long_only, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
getopt_long_only, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
getopt_long_only, (register, 0x66, 1) COPY (register, 0x68, 1)
getopt_long_only, (register, 0x67, 1) COPY (register, 0x63, 1)
getopt_long_only, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
getopt_long_only, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
getopt_long_only, (register, 0x80, 4) COPY (register, 0x54, 4)
getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x50, 4)
getopt_long_only, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
getopt_long_only, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
getopt_long_only, (register, 0x58, 4) COPY (const, 0x1c750, 4)
getopt_long_only,  ---  CALL (ram, 0x1be84, 4)
getopt_long_only, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
getopt_long_only, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getopt_long_only, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
getopt_long_only, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getopt_long_only, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getopt_long_only, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getopt_long_only, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
getopt_long_only, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
getopt_long_only, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
getopt_long_only, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
getopt_long_only, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
getopt_long_only, (unique, 0x8800, 4) COPY (register, 0x54, 4)
getopt_long_only, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
getopt_long_only, (unique, 0x3c980, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
getopt_long_only, (unique, 0x0, 4) INT_AND (unique, 0x3c980, 4) , (const, 0x1, 4)
getopt_long_only, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
getopt_long_only, (register, 0x69, 1) COPY (register, 0xb0, 1)
getopt_long_only, (register, 0x5c, 4) INT_AND (unique, 0x3c980, 4) , (const, 0xfffffffe, 4)
getopt_long_only,  ---  BRANCHIND (register, 0x5c, 4)
xmalloc, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
xmalloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
xmalloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xmalloc, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xmalloc, (register, 0x58, 4) COPY (const, 0x1c760, 4)
xmalloc,  ---  CALL (ram, 0x112a0, 4)
xmalloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
xmalloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xmalloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xmalloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xmalloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xmalloc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
xmalloc, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
xmalloc, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
xmalloc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
xmalloc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
xmalloc, (register, 0x62, 1) COPY (register, 0x66, 1)
xmalloc, (register, 0x61, 1) COPY (register, 0x65, 1)
xmalloc, (register, 0x60, 1) COPY (register, 0x64, 1)
xmalloc, (register, 0x63, 1) COPY (register, 0x67, 1)
xmalloc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
xmalloc, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
xmalloc,  ---  CBRANCH (ram, 0x1c768, 4) , (unique, 0x2680, 1)
xmalloc, (register, 0x80, 4) COPY (register, 0x54, 4)
xmalloc, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xmalloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xmalloc, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xmalloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xmalloc, (register, 0x54, 4) COPY (register, 0x80, 4)
xmalloc, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
xmalloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
xmalloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
xmalloc, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
xmalloc,  ---  RETURN (register, 0x5c, 4)
xmalloc, (register, 0x20, 4) COPY (const, 0xe174, 4)
xmalloc, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
xmalloc, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
xmalloc, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
xmalloc, (register, 0x58, 4) COPY (const, 0x1c774, 4)
xmalloc,  ---  CALL (ram, 0x11234, 4)
xmalloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
xmalloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xmalloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xmalloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xmalloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xmalloc, (register, 0x20, 4) COPY (const, 0x1, 4)
xmalloc, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
xmalloc, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
xmalloc, (register, 0x66, 1) COPY (register, 0x68, 1)
xmalloc, (register, 0x67, 1) COPY (register, 0x63, 1)
xmalloc, (register, 0x58, 4) COPY (const, 0x1c77c, 4)
xmalloc,  ---  CALL (ram, 0x11318, 4)
xrealloc, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
xrealloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
xrealloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xrealloc, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xrealloc, (register, 0x58, 4) COPY (const, 0x1c784, 4)
xrealloc,  ---  CALL (ram, 0x11204, 4)
xrealloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
xrealloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xrealloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xrealloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xrealloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xrealloc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
xrealloc, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
xrealloc, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
xrealloc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
xrealloc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
xrealloc, (register, 0x62, 1) COPY (register, 0x66, 1)
xrealloc, (register, 0x61, 1) COPY (register, 0x65, 1)
xrealloc, (register, 0x60, 1) COPY (register, 0x64, 1)
xrealloc, (register, 0x63, 1) COPY (register, 0x67, 1)
xrealloc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
xrealloc, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
xrealloc,  ---  CBRANCH (ram, 0x1c78c, 4) , (unique, 0x2680, 1)
xrealloc, (register, 0x80, 4) COPY (register, 0x54, 4)
xrealloc, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xrealloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xrealloc, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xrealloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xrealloc, (register, 0x54, 4) COPY (register, 0x80, 4)
xrealloc, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
xrealloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
xrealloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
xrealloc, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
xrealloc,  ---  RETURN (register, 0x5c, 4)
xrealloc, (register, 0x20, 4) COPY (const, 0xe174, 4)
xrealloc, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
xrealloc, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
xrealloc, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
xrealloc, (register, 0x58, 4) COPY (const, 0x1c798, 4)
xrealloc,  ---  CALL (ram, 0x11234, 4)
xrealloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
xrealloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xrealloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xrealloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xrealloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xrealloc, (register, 0x20, 4) COPY (const, 0x1, 4)
xrealloc, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
xrealloc, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
xrealloc, (register, 0x66, 1) COPY (register, 0x68, 1)
xrealloc, (register, 0x67, 1) COPY (register, 0x63, 1)
xrealloc, (register, 0x58, 4) COPY (const, 0x1c7a0, 4)
xrealloc,  ---  CALL (ram, 0x11318, 4)
xcalloc, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
xcalloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
xcalloc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xcalloc, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xcalloc, (register, 0x58, 4) COPY (const, 0x1c7a8, 4)
xcalloc,  ---  CALL (ram, 0x1115c, 4)
xcalloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
xcalloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xcalloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xcalloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xcalloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xcalloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xcalloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xcalloc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
xcalloc, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
xcalloc, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
xcalloc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
xcalloc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
xcalloc, (register, 0x62, 1) COPY (register, 0x66, 1)
xcalloc, (register, 0x61, 1) COPY (register, 0x65, 1)
xcalloc, (register, 0x60, 1) COPY (register, 0x64, 1)
xcalloc, (register, 0x63, 1) COPY (register, 0x67, 1)
xcalloc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
xcalloc, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
xcalloc,  ---  CBRANCH (ram, 0x1c7b0, 4) , (unique, 0x2680, 1)
xcalloc, (register, 0x80, 4) COPY (register, 0x54, 4)
xcalloc, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xcalloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xcalloc, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xcalloc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xcalloc, (register, 0x54, 4) COPY (register, 0x80, 4)
xcalloc, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
xcalloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
xcalloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
xcalloc, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
xcalloc,  ---  RETURN (register, 0x5c, 4)
xcalloc, (register, 0x20, 4) COPY (const, 0xe174, 4)
xcalloc, (unique, 0x3f280, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)
xcalloc, (unique, 0x3f300, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)
xcalloc, (register, 0x20, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
xcalloc, (register, 0x58, 4) COPY (const, 0x1c7bc, 4)
xcalloc,  ---  CALL (ram, 0x11234, 4)
xcalloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
xcalloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xcalloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xcalloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xcalloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xcalloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xcalloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xcalloc, (register, 0x20, 4) COPY (const, 0x1, 4)
xcalloc, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
xcalloc, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
xcalloc, (register, 0x66, 1) COPY (register, 0x68, 1)
xcalloc, (register, 0x67, 1) COPY (register, 0x63, 1)
xcalloc, (register, 0x58, 4) COPY (const, 0x1c7c4, 4)
xcalloc,  ---  CALL (ram, 0x11318, 4)
xstrdup, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
xstrdup, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
xstrdup, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
xstrdup, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xstrdup, (register, 0x30, 4) COPY (register, 0x20, 4)
xstrdup, (register, 0x58, 4) COPY (const, 0x1c7d0, 4)
xstrdup,  ---  CALL (ram, 0x11330, 4)
xstrdup, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
xstrdup, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
xstrdup, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
xstrdup, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
xstrdup, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
xstrdup, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
xstrdup, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
xstrdup, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
xstrdup, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
xstrdup, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
xstrdup, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
xstrdup, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
xstrdup, (register, 0x58, 4) COPY (const, 0x1c7d8, 4)
xstrdup,  ---  CALL (ram, 0x1c758, 4)
xstrdup, (register, 0x24, 4) COPY (register, 0x30, 4)
xstrdup, (register, 0x58, 4) COPY (const, 0x1c7e0, 4)
xstrdup,  ---  CALL (ram, 0x11258, 4)
xstrdup, (register, 0x80, 4) COPY (register, 0x54, 4)
xstrdup, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xstrdup, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xstrdup, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
xstrdup, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
xstrdup, (register, 0x54, 4) COPY (register, 0x80, 4)
xstrdup, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
xstrdup, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
xstrdup, (register, 0x69, 1) COPY (register, 0xb0, 1)
xstrdup, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
xstrdup,  ---  RETURN (register, 0x5c, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) COPY (register, 0x20, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x1c83c, 4)
__libc_csu_init, (register, 0x40, 4) COPY (register, 0x24, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x1c840, 4)
__libc_csu_init, (register, 0x44, 4) COPY (register, 0x28, 4)
__libc_csu_init, (unique, 0x1780, 4) INT_ADD (const, 0x1c7fc, 4) , (const, 0x8, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x58, 4) COPY (const, 0x1c804, 4)
__libc_csu_init,  ---  CALL (ram, 0x1113c, 4)
__libc_csu_init, (unique, 0x1780, 4) INT_ADD (const, 0x1c804, 4) , (const, 0x8, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3e00, 4) INT_SUB (const, 0x2, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x3e80, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3e00, 4)
__libc_csu_init, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x4100, 4) INT_SRIGHT (register, 0x38, 4) , (const, 0x2, 4)
__libc_csu_init, (register, 0x38, 4) COPY (unique, 0x4100, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x66, 1) COPY (register, 0x68, 1)
__libc_csu_init, (register, 0x67, 1) COPY (register, 0x63, 1)
__libc_csu_init, (register, 0x62, 1) COPY (register, 0x66, 1)
__libc_csu_init, (register, 0x61, 1) COPY (register, 0x65, 1)
__libc_csu_init, (register, 0x60, 1) COPY (register, 0x64, 1)
__libc_csu_init, (register, 0x63, 1) COPY (register, 0x67, 1)
__libc_csu_init, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x1c814, 4) , (unique, 0x2680, 1)
__libc_csu_init, (register, 0x80, 4) COPY (register, 0x54, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) COPY (register, 0x80, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init,  ---  RETURN (register, 0x5c, 4)
__libc_csu_init, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_csu_init, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_csu_init, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_csu_init, (register, 0x30, 4) COPY (const, 0x0, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x66, 1) COPY (register, 0x68, 1)
__libc_csu_init, (register, 0x67, 1) COPY (register, 0x63, 1)
__libc_csu_init, (unique, 0x8800, 4) COPY (register, 0x34, 4)
__libc_csu_init, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
__libc_csu_init, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_csu_init, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_csu_init, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x20, 4) COPY (register, 0x3c, 4)
__libc_csu_init, (register, 0x24, 4) COPY (register, 0x40, 4)
__libc_csu_init, (register, 0x28, 4) COPY (register, 0x44, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init, (register, 0x58, 4) COPY (const, 0x1c830, 4)
__libc_csu_init,  ---  CALLIND (register, 0x5c, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x30, 4)
__libc_csu_init, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x38, 4)
__libc_csu_init, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x62, 1) COPY (register, 0x66, 1)
__libc_csu_init, (register, 0x61, 1) COPY (register, 0x65, 1)
__libc_csu_init, (register, 0x60, 1) COPY (register, 0x64, 1)
__libc_csu_init, (register, 0x63, 1) COPY (register, 0x67, 1)
__libc_csu_init, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x1c818, 4) , (unique, 0x1a80, 1)
__libc_csu_init, (register, 0x80, 4) COPY (register, 0x54, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) COPY (register, 0x80, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init,  ---  RETURN (register, 0x5c, 4)
__libc_csu_fini, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
__libc_csu_fini, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_fini, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_fini, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
__libc_csu_fini,  ---  RETURN (register, 0x5c, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x80, 4) COPY (register, 0x54, 4)
_fini, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_fini, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_fini, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x54, 4) COPY (register, 0x80, 4)
_fini, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_fini, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_fini, (register, 0x69, 1) COPY (register, 0xb0, 1)
_fini, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_fini,  ---  RETURN (register, 0x5c, 4)
