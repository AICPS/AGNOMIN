_init, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048865, 4)
_init,  ---  CALL (ram, 0x8048e40, 4)
_init, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x779b, 4)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x779b, 4)
_init, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x779b, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)
_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_init, (register, 0x200, 1) COPY (const, 0x0, 1)
_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
_init, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_init, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init,  ---  CBRANCH (ram, 0x804887a, 4) , (register, 0x206, 1)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804887a, 4)
_init,  ---  CALL (ram, 0x80489b0, 4)
_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  RETURN (register, 0x284, 4)
FUN_08048880, (unique, 0x9780, 4) COPY (ram, 0x8050004, 4)
FUN_08048880, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
FUN_08048880,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
FUN_08048880,  ---  BRANCHIND (ram, 0x8050008, 4)
__snprintf_chk,  ---  BRANCHIND (ram, 0x805000c, 4)
free,  ---  BRANCHIND (ram, 0x8050010, 4)
memcpy,  ---  BRANCHIND (ram, 0x8050014, 4)
fclose,  ---  BRANCHIND (ram, 0x8050018, 4)
time,  ---  BRANCHIND (ram, 0x805001c, 4)
memcmp,  ---  BRANCHIND (ram, 0x8050020, 4)
ctime,  ---  BRANCHIND (ram, 0x8050024, 4)
__stack_chk_fail,  ---  BRANCHIND (ram, 0x8050028, 4)
fseek,  ---  BRANCHIND (ram, 0x805002c, 4)
fopen64,  ---  BRANCHIND (ram, 0x8050030, 4)
perror,  ---  BRANCHIND (ram, 0x8050034, 4)
fwrite,  ---  BRANCHIND (ram, 0x8050038, 4)
fread,  ---  BRANCHIND (ram, 0x805003c, 4)
error,  ---  BRANCHIND (ram, 0x8050040, 4)
getenv,  ---  BRANCHIND (ram, 0x8050044, 4)
realloc,  ---  BRANCHIND (ram, 0x8050048, 4)
malloc,  ---  BRANCHIND (ram, 0x805004c, 4)
puts,  ---  BRANCHIND (ram, 0x8050050, 4)
__gmon_start__,  ---  BRANCHIND (ram, 0x8050054, 4)
exit,  ---  BRANCHIND (ram, 0x8050058, 4)
ftello64,  ---  BRANCHIND (ram, 0x805005c, 4)
localtime,  ---  BRANCHIND (ram, 0x8050060, 4)
strchr,  ---  BRANCHIND (ram, 0x8050064, 4)
strlen,  ---  BRANCHIND (ram, 0x8050068, 4)
__libc_start_main,  ---  BRANCHIND (ram, 0x805006c, 4)
memset,  ---  BRANCHIND (ram, 0x8050070, 4)
strncpy,  ---  BRANCHIND (ram, 0x8050074, 4)
__printf_chk,  ---  BRANCHIND (ram, 0x8050078, 4)
fputc,  ---  BRANCHIND (ram, 0x805007c, 4)
__memset_chk,  ---  BRANCHIND (ram, 0x8050080, 4)
__fprintf_chk,  ---  BRANCHIND (ram, 0x8050084, 4)
strncmp,  ---  BRANCHIND (ram, 0x8050088, 4)
abort,  ---  BRANCHIND (ram, 0x805008c, 4)
strtol,  ---  BRANCHIND (ram, 0x8050090, 4)
fputs,  ---  BRANCHIND (ram, 0x8050094, 4)
__ctype_b_loc,  ---  BRANCHIND (ram, 0x8050098, 4)
calloc,  ---  BRANCHIND (ram, 0x805009c, 4)
__sprintf_chk,  ---  BRANCHIND (ram, 0x80500a0, 4)
main, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
main, (register, 0x4, 4) COPY (unique, 0x2500, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffff0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0xfffffffc, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
main, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0x14, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x14, 4) COPY (register, 0x10, 4)
main, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0x18, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0x4, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffe0, 4)
main, (register, 0x1c, 4) COPY (unique, 0x1d00, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x34, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x34, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x34, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x4, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
main, (register, 0xc, 4) COPY (unique, 0x7980, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
main, (register, 0x18, 4) COPY (unique, 0x7980, 4)
main, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
main, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
main, (register, 0x0, 4) COPY (unique, 0x5000, 4)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffe4, 4)
main, (unique, 0x7980, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
main, (register, 0x0, 4) COPY (unique, 0x7980, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (ram, 0x80502d0, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048b25, 4)
main,  ---  CALL (ram, 0x804a830, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd4, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffe0, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
main, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f400, 4) COPY (const, 0x8050100, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x2f400, 4) COPY (const, 0x804cc31, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x9780, 4) COPY (register, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0x18, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048b4c, 4)
main,  ---  CALL (ram, 0x804ba80, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x8048cd1, 4) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x7a, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x7a, 4)
main, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x7a, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
main,  ---  CBRANCH (ram, 0x8048cc2, 4) , (unique, 0x8180, 1)
main, (unique, 0x2080, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
main, (unique, 0x2180, 4) INT_ADD (const, 0x804cd68, 4) , (unique, 0x2080, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2180, 4)
main,  ---  BRANCHIND (unique, 0x7980, 4)
main, (ram, 0x8050280, 4) COPY (const, 0x1, 4)
main, (ram, 0x8050284, 4) COPY (const, 0x1, 4)
main, (ram, 0x8050288, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050298, 4) COPY (const, 0x1, 4)
main, (ram, 0x8050294, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (unique, 0x9780, 4) COPY (register, 0x4, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f200, 4) COPY (const, 0xa, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x80502d8, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048bae, 4)
main,  ---  CALL (ram, 0x8048aa0, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (ram, 0x8050210, 4) COPY (register, 0x0, 4)
main,  ---  CBRANCH (ram, 0x8048e02, 4) , (register, 0x207, 1)
main, (register, 0x0, 4) COPY (ram, 0x8050214, 4)
main, (register, 0x200, 1) INT_LESS (ram, 0x8050210, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x8050210, 4) , (register, 0x0, 4)
main, (unique, 0x1e380, 4) INT_SUB (ram, 0x8050210, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
main,  ---  CBRANCH (ram, 0x8048b30, 4) , (unique, 0x8900, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804cae8, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048bdc, 4)
main,  ---  CALL (ram, 0x8049d00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x805027c, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050290, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x9780, 4) COPY (ram, 0x80502d8, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048c10, 4)
main,  ---  CALL (ram, 0x804a850, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd4, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050278, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050274, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (unique, 0x2f400, 4) COPY (const, 0x804cc3b, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x80502d0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f400, 4) COPY (const, 0x804ca88, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048c54, 4)
main,  ---  CALL (ram, 0x8048a40, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048c60, 4)
main,  ---  CALL (ram, 0x80489c0, 4)
main, (unique, 0x9780, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f200, 4) COPY (const, 0xa, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x80502d8, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048c70, 4)
main,  ---  CALL (ram, 0x8048aa0, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (ram, 0x8050214, 4) COPY (register, 0x0, 4)
main, (unique, 0x8280, 1) BOOL_NEGATE (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x8048b30, 4) , (unique, 0x8280, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804ca58, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048c8d, 4)
main,  ---  CALL (ram, 0x8049d00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050270, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050280, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (ram, 0x8050284, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x8048b30, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048cc7, 4)
main,  ---  CALL (ram, 0x8048f10, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048cd1, 4)
main,  ---  CALL (ram, 0x80489c0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (ram, 0x8050220, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (ram, 0x8050220, 4)
main, (unique, 0x1e780, 4) INT_SUB (register, 0x18, 4) , (ram, 0x8050220, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
main,  ---  CBRANCH (ram, 0x8048da0, 4) , (unique, 0x8900, 1)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd4, 4)
main, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
main, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
main, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
main, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
main, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x8048d8b, 4) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048cf1, 4)
main,  ---  CALL (ram, 0x804a310, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
main, (ram, 0x805026c, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d02, 4)
main,  ---  CALL (ram, 0x804a310, 4)
main, (ram, 0x80502cc, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d0c, 4)
main,  ---  CALL (ram, 0x80497b0, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d18, 4)
main,  ---  CALL (ram, 0x80488d0, 4)
main, (register, 0x8, 4) COPY (ram, 0x805028c, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0xc, 4) COPY (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
main, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x8048d29, 4) , (unique, 0x8580, 1)
main, (register, 0xc, 4) COPY (register, 0x8, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804cbd7, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x9780, 4) COPY (register, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f400, 4) COPY (const, 0x80502d4, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d40, 4)
main,  ---  CALL (ram, 0x8049670, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804cc4f, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x9780, 4) COPY (register, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d52, 4)
main,  ---  CALL (ram, 0x80492a0, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x8050274, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x8050274, 4) , (const, 0x0, 4)
main, (unique, 0x1e080, 4) INT_SUB (ram, 0x8050274, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x0, 4) COPY (const, 0x804cb36, 4)
main,  ---  CBRANCH (ram, 0x8048d76, 4) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x8050290, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x8050290, 4) , (const, 0x0, 4)
main, (unique, 0x1e080, 4) INT_SUB (ram, 0x8050290, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x0, 4) COPY (const, 0x804cc2a, 4)
main, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x8048d76, 4) , (unique, 0x7f00, 1)
main, (register, 0x0, 4) COPY (const, 0x804cc24, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x9780, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d7f, 4)
main,  ---  CALL (ram, 0x8048fa0, 4)
main, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d8b, 4)
main,  ---  CALL (ram, 0x80489c0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804cc41, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048d98, 4)
main,  ---  CALL (ram, 0x804a850, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x8048ce7, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048daa, 4)
main,  ---  CALL (ram, 0x804a310, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (ram, 0x8050268, 4) COPY (register, 0x0, 4)
main,  ---  BRANCH (ram, 0x8048dd1, 4)
main, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
main, (ram, 0x8050220, 4) COPY (register, 0x8, 4)
main, (unique, 0x9780, 4) COPY (register, 0x8, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
main, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
main, (unique, 0x2000, 4) INT_ADD (register, 0xc, 4) , (unique, 0x1f00, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
main, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x8050268, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048dce, 4)
main,  ---  CALL (ram, 0x804a340, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x0, 4) COPY (ram, 0x8050220, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
main, (unique, 0x1e380, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
main,  ---  CBRANCH (ram, 0x8048db4, 4) , (unique, 0x8900, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x8050298, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x8050298, 4) , (const, 0x0, 4)
main, (unique, 0x1e080, 4) INT_SUB (ram, 0x8050298, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x8048cdd, 4) , (register, 0x206, 1)
main, (unique, 0x9780, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (unique, 0x9780, 4) COPY (ram, 0x8050268, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048dfa, 4)
main,  ---  CALL (ram, 0x804a740, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x8048cdd, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x2f400, 4) COPY (const, 0x804cab4, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048e0f, 4)
main,  ---  CALL (ram, 0x8049d00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x8048bbe, 4)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x14, 4) INT_XOR (register, 0x14, 4) , (register, 0x14, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
_start, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
_start, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_start, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_start, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_start, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_start, (register, 0x4, 4) COPY (register, 0x10, 4)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffff0, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_start, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_start, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_start, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_start, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x10, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x8, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x804c6f0, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x804c680, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x4, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x8048af0, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048e38, 4)
_start,  ---  CALL (ram, 0x8048a10, 4)
_start,  ---  BRANCH (ram, 0x8048e38, 4)
__x86.get_pc_thunk.bx, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
__x86.get_pc_thunk.bx, (register, 0xc, 4) COPY (unique, 0x7980, 4)
__x86.get_pc_thunk.bx, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__x86.get_pc_thunk.bx, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__x86.get_pc_thunk.bx,  ---  RETURN (register, 0x284, 4)
deregister_tm_clones, (register, 0x0, 4) COPY (const, 0x805022b, 4)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8050228, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x8050228, 4)
deregister_tm_clones, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x8050228, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x8048e79, 4) , (unique, 0x8000, 1)
deregister_tm_clones, (register, 0x0, 4) COPY (const, 0x0, 4)
deregister_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x8048e79, 4) , (register, 0x206, 1)
deregister_tm_clones, (unique, 0x9780, 4) COPY (register, 0x14, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
deregister_tm_clones, (register, 0x14, 4) COPY (register, 0x10, 4)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f400, 4) COPY (const, 0x8050228, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048e75, 4)
deregister_tm_clones,  ---  CALLIND (register, 0x0, 4)
deregister_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x10, 4) COPY (register, 0x14, 4)
deregister_tm_clones, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  RETURN (register, 0x284, 4)
register_tm_clones, (register, 0x0, 4) COPY (const, 0x8050228, 4)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8050228, 4)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x8050228, 4)
register_tm_clones, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x8050228, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
register_tm_clones, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
register_tm_clones, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
register_tm_clones, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
register_tm_clones, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
register_tm_clones, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
register_tm_clones, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
register_tm_clones, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
register_tm_clones, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
register_tm_clones, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
register_tm_clones, (register, 0x8, 4) COPY (register, 0x0, 4)
register_tm_clones, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x41200, 4) COPY (register, 0x8, 4)
register_tm_clones, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x41180, 4)
register_tm_clones, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
register_tm_clones, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
register_tm_clones, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
register_tm_clones, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
register_tm_clones, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
register_tm_clones, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
register_tm_clones, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
register_tm_clones, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
register_tm_clones, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
register_tm_clones, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
register_tm_clones, (unique, 0x3cb80, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x8048eb3, 4) , (register, 0x206, 1)
register_tm_clones, (register, 0x8, 4) COPY (const, 0x0, 4)
register_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x8048eb3, 4) , (register, 0x206, 1)
register_tm_clones, (unique, 0x9780, 4) COPY (register, 0x14, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
register_tm_clones, (register, 0x14, 4) COPY (register, 0x10, 4)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x9780, 4) COPY (register, 0x0, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
register_tm_clones, (unique, 0x2f400, 4) COPY (const, 0x8050228, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048eaf, 4)
register_tm_clones,  ---  CALLIND (register, 0x8, 4)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (register, 0x10, 4) COPY (register, 0x14, 4)
register_tm_clones, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  RETURN (register, 0x284, 4)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x8050264, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x8050264, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x1dc80, 1) INT_SUB (ram, 0x8050264, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
__do_global_dtors_aux, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
__do_global_dtors_aux, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x8048edc, 4) , (unique, 0x7f00, 1)
__do_global_dtors_aux, (unique, 0x9780, 4) COPY (register, 0x14, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__do_global_dtors_aux, (register, 0x14, 4) COPY (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__do_global_dtors_aux, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__do_global_dtors_aux, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048ed4, 4)
__do_global_dtors_aux,  ---  CALL (ram, 0x8048e50, 4)
__do_global_dtors_aux, (ram, 0x8050264, 1) COPY (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x10, 4) COPY (register, 0x14, 4)
__do_global_dtors_aux, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x284, 4)
frame_dummy, (register, 0x0, 4) COPY (const, 0x804ff08, 4)
frame_dummy, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
frame_dummy, (register, 0x8, 4) COPY (unique, 0x7980, 4)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
frame_dummy,  ---  CBRANCH (ram, 0x8048ef0, 4) , (unique, 0x7f00, 1)
frame_dummy,  ---  BRANCH (ram, 0x8048e80, 4)
frame_dummy, (register, 0x8, 4) COPY (const, 0x0, 4)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy,  ---  CBRANCH (ram, 0x8048eeb, 4) , (register, 0x206, 1)
frame_dummy, (unique, 0x9780, 4) COPY (register, 0x14, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
frame_dummy, (register, 0x14, 4) COPY (register, 0x10, 4)
frame_dummy, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x9780, 4) COPY (register, 0x0, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f02, 4)
frame_dummy,  ---  CALLIND (register, 0x8, 4)
frame_dummy, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (register, 0x10, 4) COPY (register, 0x14, 4)
frame_dummy, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
frame_dummy, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  BRANCH (ram, 0x8048e80, 4)
give_usage, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
give_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
give_usage, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
give_usage, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
give_usage, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
give_usage, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
give_usage, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
give_usage, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
give_usage, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
give_usage, (unique, 0x9780, 4) COPY (ram, 0x80502d0, 4)
give_usage, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
give_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
give_usage, (unique, 0x2f400, 4) COPY (const, 0x804c748, 4)
give_usage, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
give_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
give_usage, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
give_usage, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
give_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
give_usage, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
give_usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f25, 4)
give_usage,  ---  CALL (ram, 0x8048a40, 4)
give_usage, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
give_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
give_usage, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
give_usage, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
give_usage, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
give_usage, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
give_usage, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
give_usage, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
give_usage, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
give_usage,  ---  BRANCH (ram, 0x8049e00, 4)
update_system_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_system_time, (unique, 0x9780, 4) COPY (register, 0xc, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_system_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
update_system_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
update_system_time, (register, 0xc, 4) COPY (unique, 0x2500, 4)
update_system_time, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_system_time, (register, 0x18, 4) COPY (unique, 0x7980, 4)
update_system_time, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
update_system_time, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
update_system_time, (register, 0x0, 4) COPY (unique, 0x5000, 4)
update_system_time, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
update_system_time, (unique, 0x7980, 4) COPY (register, 0x0, 4)
update_system_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x9780, 4) COPY (register, 0xc, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_system_time, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f55, 4)
update_system_time,  ---  CALL (ram, 0x804a6f0, 4)
update_system_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time,  ---  CBRANCH (ram, 0x8048f7b, 4) , (register, 0x206, 1)
update_system_time, (register, 0x18, 4) COPY (register, 0x18, 4)
update_system_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
update_system_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x9780, 4) COPY (register, 0x0, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f69, 4)
update_system_time,  ---  CALL (ram, 0x804a6a0, 4)
update_system_time, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (register, 0x200, 1) INT_CARRY (unique, 0x7980, 4) , (register, 0x18, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (register, 0x20b, 1) INT_SCARRY (unique, 0x7980, 4) , (register, 0x18, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (unique, 0x7980, 4) INT_ADD (unique, 0x7980, 4) , (register, 0x18, 4)
update_system_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x7980, 4) COPY (register, 0xc, 4)
update_system_time,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f74, 4)
update_system_time,  ---  CALL (ram, 0x804a710, 4)
update_system_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
update_system_time,  ---  CBRANCH (ram, 0x8048f60, 4) , (unique, 0x7f00, 1)
update_system_time, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_system_time, (register, 0x0, 4) COPY (unique, 0x7980, 4)
update_system_time, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
update_system_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
update_system_time,  ---  CBRANCH (ram, 0x8048f8e, 4) , (unique, 0x7f00, 1)
update_system_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
update_system_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_system_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_system_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_system_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_system_time, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_system_time, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_system_time, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_system_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  RETURN (register, 0x284, 4)
update_system_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_system_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048f93, 4)
update_system_time,  ---  CALL (ram, 0x8048900, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x14, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x18, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x44, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x44, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x44, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
do_statistics, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
do_statistics, (register, 0x14, 4) COPY (unique, 0x2500, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
do_statistics, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
do_statistics, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
do_statistics, (register, 0x0, 4) COPY (unique, 0x5000, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x14, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x9780, 4) COPY (ram, 0x805026c, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048fcb, 4)
do_statistics,  ---  CALL (ram, 0x804a6f0, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0xc, 4) COPY (register, 0x0, 4)
do_statistics,  ---  CBRANCH (ram, 0x80490ed, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x18, 4) COPY (register, 0x18, 4)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x9780, 4) COPY (register, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048fe9, 4)
do_statistics,  ---  CALL (ram, 0x804a690, 4)
do_statistics, (register, 0x1c, 4) COPY (register, 0x0, 4)
do_statistics, (register, 0x0, 4) COPY (ram, 0x8050268, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x804900a, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049003, 4)
do_statistics,  ---  CALL (ram, 0x804a5e0, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049079, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x9780, 4) COPY (register, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049013, 4)
do_statistics,  ---  CALL (ram, 0x804a6a0, 4)
do_statistics, (register, 0x8, 4) COPY (ram, 0x8050278, 4)
do_statistics, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
do_statistics, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (register, 0x0, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (register, 0x0, 4)
do_statistics, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049079, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049032, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0x4, 4) COPY (ram, 0x8050270, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049079, 4) , (register, 0x206, 1)
do_statistics, (register, 0x8, 4) COPY (ram, 0x8050290, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
do_statistics, (register, 0x0, 4) COPY (const, 0x804cb34, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x12180, 10) COPY (register, 0x1046, 10)
do_statistics, (register, 0x1046, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (unique, 0x12180, 10)
do_statistics, (unique, 0x3f00, 8) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
do_statistics, (register, 0x1000, 10) INT2FLOAT (unique, 0x3f00, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x45400, 10) FLOAT2FLOAT (ram, 0x804cf90, 4)
do_statistics, (register, 0x1000, 10) FLOAT_DIV (register, 0x1000, 10) , (unique, 0x45400, 10)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x804905c, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0x0, 4) COPY (const, 0x804cb35, 4)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3f00, 8) FLOAT2FLOAT (register, 0x1000, 10)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x3f00, 8)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1046, 10)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x8, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x2f400, 4) COPY (const, 0x804cb37, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049076, 4)
do_statistics,  ---  CALL (ram, 0x8048a40, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x30, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x30, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x9780, 4) COPY (register, 0xc, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049082, 4)
do_statistics,  ---  CALL (ram, 0x804a7c0, 4)
do_statistics, (unique, 0x7980, 4) COPY (register, 0x14, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804908a, 4)
do_statistics,  ---  CALL (ram, 0x804a710, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0xc, 4) COPY (register, 0x0, 4)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x8048fe0, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0xc, 4) COPY (ram, 0x8050274, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) COPY (register, 0x18, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x12180, 10) COPY (register, 0x1046, 10)
do_statistics, (register, 0x1046, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (unique, 0x12180, 10)
do_statistics, (unique, 0x3f00, 8) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
do_statistics, (register, 0x1000, 10) INT2FLOAT (unique, 0x3f00, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x45400, 10) FLOAT2FLOAT (ram, 0x804cf90, 4)
do_statistics, (register, 0x1000, 10) FLOAT_DIV (register, 0x1000, 10) , (unique, 0x45400, 10)
do_statistics,  ---  CBRANCH (ram, 0x8049100, 4) , (register, 0x206, 1)
do_statistics, (unique, 0x47a00, 10) INT2FLOAT (const, 0x0, 4)
do_statistics, (register, 0x1046, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (unique, 0x47a00, 10)
do_statistics, (unique, 0x4c900, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (unique, 0x4c900, 10)
do_statistics, (register, 0x1081, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x12280, 1) FLOAT_NAN (register, 0x1000, 10)
do_statistics, (unique, 0x12300, 1) FLOAT_NAN (register, 0x100a, 10)
do_statistics, (register, 0x1082, 1) BOOL_OR (unique, 0x12280, 1) , (unique, 0x12300, 1)
do_statistics, (unique, 0x12400, 1) FLOAT_LESS (register, 0x1000, 10) , (register, 0x100a, 10)
do_statistics, (register, 0x1080, 1) INT_OR (register, 0x1082, 1) , (unique, 0x12400, 1)
do_statistics, (unique, 0x12500, 1) FLOAT_EQUAL (register, 0x1000, 10) , (register, 0x100a, 10)
do_statistics, (register, 0x1083, 1) INT_OR (register, 0x1082, 1) , (unique, 0x12500, 1)
do_statistics, (unique, 0x12600, 2) INT_ZEXT (register, 0x1080, 1)
do_statistics, (unique, 0x12680, 2) INT_LEFT (unique, 0x12600, 2) , (const, 0x8, 4)
do_statistics, (unique, 0x12700, 2) INT_ZEXT (register, 0x1081, 1)
do_statistics, (unique, 0x12780, 2) INT_LEFT (unique, 0x12700, 2) , (const, 0x9, 4)
do_statistics, (unique, 0x12800, 2) INT_OR (unique, 0x12680, 2) , (unique, 0x12780, 2)
do_statistics, (unique, 0x12880, 2) INT_ZEXT (register, 0x1082, 1)
do_statistics, (unique, 0x12900, 2) INT_LEFT (unique, 0x12880, 2) , (const, 0xa, 4)
do_statistics, (unique, 0x12980, 2) INT_OR (unique, 0x12800, 2) , (unique, 0x12900, 2)
do_statistics, (unique, 0x12a00, 2) INT_ZEXT (register, 0x1083, 1)
do_statistics, (unique, 0x12a80, 2) INT_LEFT (unique, 0x12a00, 2) , (const, 0xe, 4)
do_statistics, (register, 0x1092, 2) INT_OR (unique, 0x12980, 2) , (unique, 0x12a80, 2)
do_statistics, (register, 0x0, 2) COPY (register, 0x1092, 2)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1046, 10)
do_statistics, (unique, 0x3bb80, 1) INT_AND (register, 0x1, 1) , (const, 0x80, 1)
do_statistics, (register, 0x207, 1) INT_NOTEQUAL (unique, 0x3bb80, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3bc80, 1) INT_AND (register, 0x1, 1) , (const, 0x40, 1)
do_statistics, (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3bc80, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3bd80, 1) INT_AND (register, 0x1, 1) , (const, 0x10, 1)
do_statistics, (register, 0x204, 1) INT_NOTEQUAL (unique, 0x3bd80, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3be80, 1) INT_AND (register, 0x1, 1) , (const, 0x4, 1)
do_statistics, (register, 0x202, 1) INT_NOTEQUAL (unique, 0x3be80, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3bf80, 1) INT_AND (register, 0x1, 1) , (const, 0x1, 1)
do_statistics, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3bf80, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x80490d0, 4) , (register, 0x202, 1)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x80490d0, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0x4, 4) COPY (ram, 0x8050270, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049130, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3f00, 8) FLOAT2FLOAT (register, 0x1000, 10)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x3f00, 8)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1046, 10)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0xb, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
do_statistics, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x2f400, 4) COPY (const, 0x804cb47, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80490e8, 4)
do_statistics,  ---  CALL (ram, 0x8048a40, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  BRANCH (ram, 0x8049138, 4)
do_statistics, (register, 0x0, 4) COPY (ram, 0x8050274, 4)
do_statistics, (unique, 0x47a00, 10) INT2FLOAT (const, 0x0, 4)
do_statistics, (register, 0x1046, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (unique, 0x47a00, 10)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x80490c6, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0x18, 4) COPY (register, 0x18, 4)
do_statistics, (register, 0x8, 4) COPY (ram, 0x8050290, 4)
do_statistics, (register, 0x0, 4) COPY (const, 0x804cb34, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049150, 4) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3f00, 8) FLOAT2FLOAT (register, 0x1000, 10)
do_statistics,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x3f00, 8)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1046, 10)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0xb, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_statistics, (unique, 0x2f400, 4) COPY (const, 0x804cb57, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_statistics, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049124, 4)
do_statistics,  ---  CALL (ram, 0x8048a40, 4)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics,  ---  BRANCH (ram, 0x8049138, 4)
do_statistics, (register, 0x1000, 10) COPY (register, 0x1000, 10)
do_statistics, (register, 0x1000, 10) COPY (register, 0x100a, 10)
do_statistics, (register, 0x100a, 10) COPY (register, 0x1014, 10)
do_statistics, (register, 0x1014, 10) COPY (register, 0x101e, 10)
do_statistics, (register, 0x101e, 10) COPY (register, 0x1028, 10)
do_statistics, (register, 0x1028, 10) COPY (register, 0x1032, 10)
do_statistics, (register, 0x1032, 10) COPY (register, 0x103c, 10)
do_statistics, (register, 0x103c, 10) COPY (register, 0x1046, 10)
do_statistics, (register, 0x18, 4) COPY (register, 0x18, 4)
do_statistics, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
do_statistics, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
do_statistics, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_statistics, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
do_statistics, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x8049157, 4) , (unique, 0x7f00, 1)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_statistics, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_statistics, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_statistics, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_statistics, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_statistics, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_statistics, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  RETURN (register, 0x284, 4)
do_statistics, (register, 0x0, 4) COPY (const, 0x804cb35, 4)
do_statistics,  ---  BRANCH (ram, 0x804910f, 4)
do_statistics, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_statistics,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804915c, 4)
do_statistics,  ---  CALL (ram, 0x8048900, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0xc, 4) COPY (unique, 0x7980, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0x18, 4) COPY (unique, 0x7980, 4)
update_user_time, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
update_user_time, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
update_user_time, (register, 0x0, 4) COPY (unique, 0x5000, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) COPY (register, 0x0, 4)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x8049220, 4) , (register, 0x207, 1)
update_user_time, (register, 0x0, 4) COPY (ram, 0x8050298, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x80491df, 4) , (register, 0x206, 1)
update_user_time, (register, 0x0, 4) COPY (ram, 0x8050268, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x80491ab, 4) , (register, 0x206, 1)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x0, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80491a4, 4)
update_user_time,  ---  CALL (ram, 0x804a5e0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x80491df, 4) , (register, 0x206, 1)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) COPY (register, 0xc, 4)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x12180, 10) COPY (register, 0x1046, 10)
update_user_time, (register, 0x1046, 10) COPY (register, 0x103c, 10)
update_user_time, (register, 0x103c, 10) COPY (register, 0x1032, 10)
update_user_time, (register, 0x1032, 10) COPY (register, 0x1028, 10)
update_user_time, (register, 0x1028, 10) COPY (register, 0x101e, 10)
update_user_time, (register, 0x101e, 10) COPY (register, 0x1014, 10)
update_user_time, (register, 0x1014, 10) COPY (register, 0x100a, 10)
update_user_time, (register, 0x100a, 10) COPY (register, 0x1000, 10)
update_user_time, (register, 0x1000, 10) COPY (unique, 0x12180, 10)
update_user_time, (unique, 0x3e80, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0x1000, 10) INT2FLOAT (unique, 0x3e80, 4)
update_user_time, (unique, 0x45400, 10) FLOAT2FLOAT (ram, 0x804cf90, 4)
update_user_time, (register, 0x1000, 10) FLOAT_DIV (register, 0x1000, 10) , (unique, 0x45400, 10)
update_user_time, (unique, 0x3f00, 8) FLOAT2FLOAT (register, 0x1000, 10)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x3f00, 8)
update_user_time, (register, 0x1000, 10) COPY (register, 0x100a, 10)
update_user_time, (register, 0x100a, 10) COPY (register, 0x1014, 10)
update_user_time, (register, 0x1014, 10) COPY (register, 0x101e, 10)
update_user_time, (register, 0x101e, 10) COPY (register, 0x1028, 10)
update_user_time, (register, 0x1028, 10) COPY (register, 0x1032, 10)
update_user_time, (register, 0x1032, 10) COPY (register, 0x103c, 10)
update_user_time, (register, 0x103c, 10) COPY (register, 0x1046, 10)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x2f400, 4) COPY (const, 0x804cb66, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80491dc, 4)
update_user_time,  ---  CALL (ram, 0x8048a70, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x30, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x30, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (ram, 0x805026c, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80491f0, 4)
update_user_time,  ---  CALL (ram, 0x804a5e0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x8049260, 4) , (register, 0x206, 1)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x0, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049200, 4)
update_user_time,  ---  CALL (ram, 0x804a6a0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (unique, 0x7980, 4) , (register, 0xc, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (unique, 0x7980, 4) , (register, 0xc, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (unique, 0x7980, 4) INT_ADD (unique, 0x7980, 4) , (register, 0xc, 4)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0x0, 4) COPY (unique, 0x7980, 4)
update_user_time, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
update_user_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
update_user_time,  ---  CBRANCH (ram, 0x8049299, 4) , (unique, 0x7f00, 1)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  RETURN (register, 0x284, 4)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804922e, 4)
update_user_time,  ---  CALL (ram, 0x804a9e0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x9780, 4) COPY (register, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x2f400, 4) COPY (const, 0x804c8b4, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049248, 4)
update_user_time,  ---  CALL (ram, 0x8048a70, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2f400, 4) COPY (const, 0x804c8f0, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049255, 4)
update_user_time,  ---  CALL (ram, 0x8049d00, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time,  ---  BRANCH (ram, 0x8049186, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x18, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (ram, 0x805026c, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049279, 4)
update_user_time,  ---  CALL (ram, 0x804a340, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2f200, 4) COPY (const, 0x4, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
update_user_time, (register, 0x8, 4) COPY (unique, 0x2500, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x8, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x9780, 4) COPY (register, 0x0, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) COPY (register, 0x0, 4)
update_user_time,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804928d, 4)
update_user_time,  ---  CALL (ram, 0x804a6b0, 4)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
update_user_time, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
update_user_time, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
update_user_time, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
update_user_time, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
update_user_time, (register, 0x0, 4) COPY (unique, 0x7980, 4)
update_user_time,  ---  BRANCH (ram, 0x80491f7, 4)
update_user_time, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
update_user_time,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804929e, 4)
update_user_time,  ---  CALL (ram, 0x8048900, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x14, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x34, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x34, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x34, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
log_everyone_out, (register, 0xc, 4) COPY (unique, 0x2500, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x18, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_everyone_out, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
log_everyone_out, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
log_everyone_out, (register, 0x0, 4) COPY (unique, 0x5000, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80492d3, 4)
log_everyone_out,  ---  CALL (ram, 0x804a6f0, 4)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x14, 4) COPY (register, 0x0, 4)
log_everyone_out, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x80492fd, 4) , (unique, 0x7f00, 1)
log_everyone_out,  ---  BRANCH (ram, 0x8049340, 4)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x8049331, 4) , (register, 0x206, 1)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x40, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x8, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
log_everyone_out, (unique, 0x7980, 4) COPY (register, 0x8, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80492f4, 4)
log_everyone_out,  ---  CALL (ram, 0x804a710, 4)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x14, 4) COPY (register, 0x0, 4)
log_everyone_out,  ---  CBRANCH (ram, 0x8049340, 4) , (register, 0x206, 1)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x14, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049306, 4)
log_everyone_out,  ---  CALL (ram, 0x804a6a0, 4)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x80492e0, 4) , (register, 0x206, 1)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x4, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (unique, 0x7980, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (unique, 0x7980, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_everyone_out, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (unique, 0x7980, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x4, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049326, 4)
log_everyone_out,  ---  CALL (ram, 0x8049160, 4)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x80492e4, 4) , (unique, 0x7f00, 1)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x9780, 4) COPY (register, 0x14, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804933a, 4)
log_everyone_out,  ---  CALL (ram, 0x804a7c0, 4)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out,  ---  BRANCH (ram, 0x80492eb, 4)
log_everyone_out, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_everyone_out, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_everyone_out, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
log_everyone_out, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x8049355, 4) , (unique, 0x7f00, 1)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x2c, 4)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x2c, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2c, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_everyone_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_everyone_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  RETURN (register, 0x284, 4)
log_everyone_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_everyone_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804935a, 4)
log_everyone_out,  ---  CALL (ram, 0x8048900, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0xc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2500, 4) INT_ADD (const, 0x40, 4) , (register, 0x10, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_in, (register, 0xc, 4) COPY (unique, 0x7980, 4)
log_in, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
log_in, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x5000, 4)
log_in, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
log_in, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_in,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
log_in, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
log_in, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
log_in, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
log_in, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x80493a0, 4) , (unique, 0x7f00, 1)
log_in, (register, 0xc, 4) COPY (ram, 0x8050294, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x8049400, 4) , (unique, 0x7f00, 1)
log_in, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_in, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
log_in, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x80494d2, 4) , (unique, 0x7f00, 1)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  RETURN (register, 0x284, 4)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
log_in, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80493b4, 4)
log_in,  ---  CALL (ram, 0x804a5e0, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (register, 0x1c, 4) COPY (register, 0x0, 4)
log_in,  ---  CBRANCH (ram, 0x8049490, 4) , (register, 0x206, 1)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80493ca, 4)
log_in,  ---  CALL (ram, 0x804a6a0, 4)
log_in, (register, 0x4, 4) COPY (ram, 0x8050294, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (register, 0x18, 4) COPY (register, 0x0, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x8049450, 4) , (unique, 0x7f00, 1)
log_in, (register, 0x0, 4) COPY (ram, 0x8050284, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x8049430, 4) , (unique, 0x7f00, 1)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80493f1, 4)
log_in,  ---  CALL (ram, 0x8048a30, 4)
log_in, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x20, 4)
log_in, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_in,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
log_in,  ---  BRANCH (ram, 0x8049386, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804940e, 4)
log_in,  ---  CALL (ram, 0x804a9e0, 4)
log_in, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x2f200, 4) COPY (const, 0x33, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x2f400, 4) COPY (const, 0x804c920, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049422, 4)
log_in,  ---  CALL (ram, 0x8048940, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in,  ---  BRANCH (ram, 0x8049386, 4)
log_in, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x20, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_in, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f400, 4) COPY (const, 0x804cb7e, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049448, 4)
log_in,  ---  CALL (ram, 0x8049160, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in,  ---  BRANCH (ram, 0x80493e2, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049459, 4)
log_in,  ---  CALL (ram, 0x804a690, 4)
log_in, (register, 0x8, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_in, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x1c, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049467, 4)
log_in,  ---  CALL (ram, 0x804a9e0, 4)
log_in, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
log_in,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
log_in, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x2f400, 4) COPY (const, 0x804c954, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_in, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804947e, 4)
log_in,  ---  CALL (ram, 0x8048a70, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in,  ---  BRANCH (ram, 0x80493d9, 4)
log_in, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
log_in, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
log_in, (register, 0x1c, 4) COPY (unique, 0x2500, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80494a3, 4)
log_in,  ---  CALL (ram, 0x8048a30, 4)
log_in, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
log_in, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
log_in, (register, 0x0, 4) COPY (unique, 0x7980, 4)
log_in, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
log_in, (unique, 0x7980, 4) COPY (register, 0x0, 4)
log_in,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80494be, 4)
log_in,  ---  CALL (ram, 0x804a340, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in, (unique, 0x2f200, 4) COPY (const, 0x24, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80494ca, 4)
log_in,  ---  CALL (ram, 0x804a6b0, 4)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_in, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_in, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_in, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_in,  ---  BRANCH (ram, 0x8049386, 4)
log_in, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_in,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80494d7, 4)
log_in,  ---  CALL (ram, 0x8048900, 4)
log_out, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x9780, 4) COPY (register, 0x18, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x9780, 4) COPY (register, 0xc, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
log_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
log_out, (register, 0xc, 4) COPY (unique, 0x7980, 4)
log_out, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
log_out, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
log_out, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
log_out, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
log_out, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_out,  ---  CBRANCH (ram, 0x8049500, 4) , (unique, 0x7f00, 1)
log_out, (register, 0x8, 4) COPY (ram, 0x8050294, 4)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
log_out,  ---  CBRANCH (ram, 0x8049550, 4) , (unique, 0x7f00, 1)
log_out, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  RETURN (register, 0x284, 4)
log_out, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
log_out, (register, 0x1c, 4) COPY (unique, 0x1d00, 4)
log_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_out, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049514, 4)
log_out,  ---  CALL (ram, 0x804a5e0, 4)
log_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (register, 0x18, 4) COPY (register, 0x0, 4)
log_out,  ---  CBRANCH (ram, 0x8049580, 4) , (register, 0x206, 1)
log_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049526, 4)
log_out,  ---  CALL (ram, 0x804a6a0, 4)
log_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x2f400, 4) COPY (const, 0x804cbe0, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_out, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
log_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
log_out, (register, 0x8, 4) COPY (unique, 0x7980, 4)
log_out, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
log_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x7980, 4)
log_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x7980, 4)
log_out, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
log_out, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (unique, 0x7980, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x9780, 4) COPY (register, 0x8, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x9780, 4) COPY (register, 0x0, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804953e, 4)
log_out,  ---  CALL (ram, 0x8049160, 4)
log_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
log_out, (unique, 0x7980, 4) COPY (register, 0x18, 4)
log_out,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
log_out, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  BRANCH (ram, 0x804a7c0, 4)
log_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804955e, 4)
log_out,  ---  CALL (ram, 0x804a9e0, 4)
log_out, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (unique, 0x2f200, 4) COPY (const, 0x33, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_out, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_out, (unique, 0x2f400, 4) COPY (const, 0x804c920, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049572, 4)
log_out,  ---  CALL (ram, 0x8048940, 4)
log_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  RETURN (register, 0x284, 4)
log_out, (register, 0x0, 4) COPY (ram, 0x8050294, 4)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out,  ---  CBRANCH (ram, 0x80494f7, 4) , (register, 0x206, 1)
log_out, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804959b, 4)
log_out,  ---  CALL (ram, 0x804a9e0, 4)
log_out, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
log_out,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
log_out, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_out, (unique, 0x2f400, 4) COPY (const, 0x804c984, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
log_out, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
log_out, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
log_out, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
log_out,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80495b2, 4)
log_out,  ---  CALL (ram, 0x8048a70, 4)
log_out, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
log_out, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
log_out, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
log_out, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
log_out,  ---  BRANCH (ram, 0x80494f7, 4)
midnight_after_me, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x48, 4)
midnight_after_me, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x48, 4)
midnight_after_me, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x48, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
midnight_after_me, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
midnight_after_me, (register, 0x0, 4) COPY (unique, 0x5000, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (register, 0x200, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x20b, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
midnight_after_me, (register, 0x0, 4) COPY (unique, 0x2500, 4)
midnight_after_me, (unique, 0x9780, 4) COPY (register, 0x0, 4)
midnight_after_me, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
midnight_after_me, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80495d9, 4)
midnight_after_me,  ---  CALL (ram, 0x80489e0, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
midnight_after_me, (register, 0x8, 4) COPY (unique, 0x2500, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x14, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x18, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1c, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x24, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x4, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7a00, 4) COPY (const, 0xffffffff, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x28, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
midnight_after_me, (register, 0x0, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x8, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) COPY (register, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
midnight_after_me, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049656, 4)
midnight_after_me,  ---  CALL (ram, 0x804c2c0, 4)
midnight_after_me, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
midnight_after_me, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
midnight_after_me, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
midnight_after_me, (register, 0x8, 4) COPY (unique, 0x7980, 4)
midnight_after_me, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
midnight_after_me, (register, 0x200, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x20b, 1) COPY (const, 0x0, 1)
midnight_after_me, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
midnight_after_me, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (unique, 0x7980, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
midnight_after_me,  ---  CBRANCH (ram, 0x804966a, 4) , (unique, 0x7f00, 1)
midnight_after_me, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
midnight_after_me, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
midnight_after_me, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
midnight_after_me, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
midnight_after_me, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
midnight_after_me, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
midnight_after_me,  ---  RETURN (register, 0x284, 4)
midnight_after_me, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
midnight_after_me,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804966f, 4)
midnight_after_me,  ---  CALL (ram, 0x8048900, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x14, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x18, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0xc, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x130, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (register, 0x18, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x134, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (register, 0xc, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
do_totals, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x5000, 4)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x10c, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_totals,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2980, 4) , (unique, 0x7980, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x138, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (register, 0x14, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x140, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (unique, 0x1e380, 4) INT_SUB (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_totals, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
do_totals,  ---  CBRANCH (ram, 0x80496df, 4) , (unique, 0x8700, 1)
do_totals, (register, 0x18, 4) COPY (register, 0x18, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x140, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x14, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80496bf, 4)
do_totals,  ---  CALL (ram, 0x80492a0, 4)
do_totals, (register, 0x0, 4) COPY (ram, 0x8050274, 4)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals,  ---  CBRANCH (ram, 0x8049700, 4) , (unique, 0x7f00, 1)
do_totals, (register, 0x0, 4) COPY (register, 0xc, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80496d6, 4)
do_totals,  ---  CALL (ram, 0x80495c0, 4)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) INT_LESS (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (unique, 0x1e380, 4) INT_SUB (register, 0xc, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_totals,  ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (unique, 0x7980, 4)
do_totals, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_totals, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
do_totals,  ---  CBRANCH (ram, 0x80496b0, 4) , (unique, 0x8900, 1)
do_totals, (unique, 0x2980, 4) INT_ADD (const, 0x10c, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
do_totals, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals,  ---  CBRANCH (ram, 0x80497a7, 4) , (unique, 0x7f00, 1)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x11c, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  RETURN (register, 0x284, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xa, 4)
do_totals, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0xa, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
do_totals, (unique, 0x7980, 4) COPY (register, 0x0, 4)
do_totals,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
do_totals, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x2500, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049716, 4)
do_totals,  ---  CALL (ram, 0x80489e0, 4)
do_totals, (register, 0x4, 4) COPY (ram, 0x8050290, 4)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x8049790, 4) , (register, 0x206, 1)
do_totals, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x14, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
do_totals, (register, 0x4, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x1e00, 4) INT_ADD (register, 0x4, 4) , (const, 0x76c, 4)
do_totals, (register, 0x8, 4) COPY (unique, 0x1e00, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x8, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
do_totals, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x2080, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
do_totals, (unique, 0x2180, 4) INT_ADD (const, 0x804cf60, 4) , (unique, 0x2080, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2180, 4)
do_totals, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x2f400, 4) COPY (const, 0x804cb87, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_totals, (unique, 0x2f400, 4) COPY (const, 0x100, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_totals, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
do_totals, (unique, 0x2f400, 4) COPY (const, 0x100, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_totals, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x2500, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049755, 4)
do_totals,  ---  CALL (ram, 0x8048890, 4)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x2500, 4)
do_totals, (unique, 0x9780, 4) COPY (register, 0x0, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049765, 4)
do_totals,  ---  CALL (ram, 0x8048fa0, 4)
do_totals, (register, 0x8, 4) COPY (ram, 0x8050274, 4)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x80496cb, 4) , (register, 0x206, 1)
do_totals, (register, 0x0, 4) COPY (ram, 0x805027c, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x80496cb, 4) , (register, 0x206, 1)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals,  ---  BRANCH (ram, 0x80496cd, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
do_totals, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
do_totals, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
do_totals, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
do_totals, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
do_totals, (register, 0x0, 4) COPY (unique, 0x7980, 4)
do_totals, (unique, 0x2080, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
do_totals, (unique, 0x2180, 4) INT_ADD (const, 0x804cf60, 4) , (unique, 0x2080, 4)
do_totals, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2180, 4)
do_totals, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
do_totals, (unique, 0x2f400, 4) COPY (const, 0x804cb92, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
do_totals,  ---  BRANCH (ram, 0x804973f, 4)
do_totals, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
do_totals,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80497ac, 4)
do_totals,  ---  CALL (ram, 0x8048900, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x18, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
parse_entries, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x5000, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) COPY (register, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
parse_entries, (register, 0x14, 4) COPY (unique, 0x2500, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
parse_entries, (register, 0x18, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80497e5, 4)
parse_entries,  ---  CALL (ram, 0x804a870, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0xc, 4) COPY (register, 0x0, 4)
parse_entries,  ---  CBRANCH (ram, 0x8049860, 4) , (register, 0x206, 1)
parse_entries, (register, 0x0, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049b00, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049801, 4)
parse_entries,  ---  CALL (ram, 0x804aa00, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049816, 4) , (register, 0x206, 1)
parse_entries, (register, 0x4, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049bc0, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804981f, 4)
parse_entries,  ---  CALL (ram, 0x804aca0, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049880, 4) , (register, 0x206, 1)
parse_entries, (register, 0x0, 4) COPY (ram, 0x8050294, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804983d, 4)
parse_entries,  ---  CALL (ram, 0x804a9e0, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x16, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cba7, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049851, 4)
parse_entries,  ---  CALL (ram, 0x8048940, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049859, 4)
parse_entries,  ---  CALL (ram, 0x804a870, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0xc, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497eb, 4) , (unique, 0x7f00, 1)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049cf8, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  RETURN (register, 0x284, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42480, 2) INT_AND (register, 0x18, 2) , (register, 0x18, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42480, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42480, 2) , (const, 0x0, 2)
parse_entries, (unique, 0xd900, 2) INT_AND (unique, 0x42480, 2) , (const, 0xff, 2)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049ba0, 4) , (unique, 0x7f00, 1)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x7900, 2) , (const, 0x3, 2)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x7900, 2) , (const, 0x3, 2)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (unique, 0x1df80, 2) INT_SUB (unique, 0x7900, 2) , (const, 0x3, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries,  ---  CBRANCH (ram, 0x80498f0, 4) , (register, 0x206, 1)
parse_entries, (register, 0x4, 4) COPY (ram, 0x8050214, 4)
parse_entries, (register, 0x8, 4) COPY (ram, 0x805028c, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x4, 4) , (register, 0x0, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x4, 4) , (register, 0x0, 4)
parse_entries, (register, 0x4, 4) INT_ADD (register, 0x4, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
parse_entries, (unique, 0x1e380, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x8480, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049b30, 4) , (unique, 0x8480, 1)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (ram, 0x8050210, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (ram, 0x8050210, 4)
parse_entries, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (ram, 0x8050210, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
parse_entries, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
parse_entries, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049b30, 4) , (unique, 0x8900, 1)
parse_entries, (ram, 0x805028c, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbd7, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x80502d4, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80498d5, 4)
parse_entries,  ---  CALL (ram, 0x8049670, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x7900, 2) , (const, 0x9, 2)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x7900, 2) , (const, 0x9, 2)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (unique, 0x1df80, 2) INT_SUB (unique, 0x7900, 2) , (const, 0x9, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
parse_entries, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
parse_entries,  ---  CBRANCH (ram, 0x80499d0, 4) , (unique, 0x8180, 1)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x0, 4) INT_ZEXT (unique, 0x7900, 2)
parse_entries, (unique, 0x2080, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x2180, 4) INT_ADD (const, 0x804cd40, 4) , (unique, 0x2080, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2180, 4)
parse_entries,  ---  BRANCHIND (unique, 0x7980, 4)
parse_entries, (ram, 0x805028c, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049c78, 4) , (register, 0x206, 1)
parse_entries, (register, 0x18, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804991b, 4)
parse_entries,  ---  CALL (ram, 0x8048f30, 4)
parse_entries, (register, 0x0, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049927, 4)
parse_entries,  ---  CALL (ram, 0x80495c0, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (ram, 0x80502d4, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
parse_entries, (register, 0x18, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x1c, 4) COPY (register, 0x1c, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x80502cc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804995f, 4)
parse_entries,  ---  CALL (ram, 0x804a6f0, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0xc, 4) COPY (register, 0x0, 4)
parse_entries,  ---  CBRANCH (ram, 0x80499c1, 4) , (register, 0x206, 1)
parse_entries, (register, 0x18, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049979, 4)
parse_entries,  ---  CALL (ram, 0x804a690, 4)
parse_entries, (unique, 0x7980, 4) COPY (register, 0xc, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x18, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049983, 4)
parse_entries,  ---  CALL (ram, 0x804a6a0, 4)
parse_entries, (register, 0xc, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
parse_entries, (unique, 0x7980, 4) COPY (register, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049990, 4)
parse_entries,  ---  CALL (ram, 0x80488f0, 4)
parse_entries, (register, 0x8, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x4, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x18, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cc10, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80499af, 4)
parse_entries,  ---  CALL (ram, 0x8048a70, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x24, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x24, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80499b8, 4)
parse_entries,  ---  CALL (ram, 0x804a710, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0xc, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049970, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x80497e0, 4)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049cc0, 4) , (register, 0x206, 1)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049c50, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80499ef, 4)
parse_entries,  ---  CALL (ram, 0x80494e0, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
parse_entries, (register, 0x1c, 4) COPY (const, 0x804cbe7, 4)
parse_entries, (register, 0x4, 4) COPY (const, 0x9, 4)
parse_entries, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
parse_entries,  ---  CBRANCH (ram, 0x8049a17, 4) , (unique, 0x8c80, 1)
parse_entries, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
parse_entries, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
parse_entries, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
parse_entries, (unique, 0x5400, 4) COPY (register, 0x18, 4)
parse_entries, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
parse_entries, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049a15, 4) , (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049a30, 4) , (register, 0x206, 1)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049a30, 4) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049940, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x18, 4) COPY (register, 0x18, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbe7, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049a46, 4)
parse_entries,  ---  CALL (ram, 0x80492a0, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
parse_entries, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
parse_entries, (register, 0x1c, 4) COPY (const, 0x804cbe7, 4)
parse_entries, (register, 0x4, 4) COPY (const, 0x9, 4)
parse_entries, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
parse_entries,  ---  CBRANCH (ram, 0x8049a6f, 4) , (unique, 0x8c80, 1)
parse_entries, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
parse_entries, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
parse_entries, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
parse_entries, (unique, 0x5400, 4) COPY (register, 0x18, 4)
parse_entries, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
parse_entries, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
parse_entries, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
parse_entries, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
parse_entries, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049a6d, 4) , (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049a30, 4) , (register, 0x206, 1)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbf0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050288, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049a8b, 4)
parse_entries,  ---  CALL (ram, 0x80492a0, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
parse_entries, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x80499e4, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) COPY (register, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x59, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804c9b0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049b14, 4)
parse_entries,  ---  CALL (ram, 0x8048940, 4)
parse_entries, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x0, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049b22, 4)
parse_entries,  ---  CALL (ram, 0x804a890, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x80497f8, 4)
parse_entries, (register, 0x0, 4) COPY (ram, 0x8050294, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049bf0, 4) , (unique, 0x7f00, 1)
parse_entries, (register, 0x0, 4) COPY (ram, 0x80502d4, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbcd, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050280, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
parse_entries, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x80502d4, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049b60, 4)
parse_entries,  ---  CALL (ram, 0x8049670, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049b6e, 4)
parse_entries,  ---  CALL (ram, 0x80495c0, 4)
parse_entries, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
parse_entries, (register, 0x8, 4) INT_ZEXT (unique, 0x7900, 2)
parse_entries, (ram, 0x80502d4, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x3, 2)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x3, 2)
parse_entries, (unique, 0x1df80, 2) INT_SUB (register, 0x8, 2) , (const, 0x3, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
parse_entries, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (ram, 0x805028c, 4) COPY (register, 0x0, 4)
parse_entries, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x80498be, 4) , (unique, 0x7f00, 1)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049c78, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049908, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049bae, 4)
parse_entries,  ---  CALL (ram, 0x80495c0, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (ram, 0x80502d4, 4) COPY (register, 0x0, 4)
parse_entries,  ---  BRANCH (ram, 0x8049889, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0xd, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cb99, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049bd4, 4)
parse_entries,  ---  CALL (ram, 0x8048940, 4)
parse_entries, (register, 0x0, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (register, 0x8, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049be2, 4)
parse_entries,  ---  CALL (ram, 0x804a890, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x8049816, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049bfe, 4)
parse_entries,  ---  CALL (ram, 0x804a9e0, 4)
parse_entries, (unique, 0x7a00, 4) COPY (const, 0x805028c, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c0a, 4)
parse_entries,  ---  CALL (ram, 0x80488f0, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804ca0c, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c1d, 4)
parse_entries,  ---  CALL (ram, 0x8048a70, 4)
parse_entries, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x154, 4)
parse_entries, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
parse_entries, (register, 0x0, 4) COPY (unique, 0x7980, 4)
parse_entries, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
parse_entries, (unique, 0x7980, 4) COPY (register, 0x0, 4)
parse_entries,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x14, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c30, 4)
parse_entries,  ---  CALL (ram, 0x80488f0, 4)
parse_entries, (unique, 0x9780, 4) COPY (register, 0x0, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbbe, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c43, 4)
parse_entries,  ---  CALL (ram, 0x8048a70, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x8049b3d, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (register, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c5b, 4)
parse_entries,  ---  CALL (ram, 0x8049360, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (register, 0x1c, 4) COPY (ram, 0x8050294, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049940, 4) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049c96, 4)
parse_entries,  ---  CALL (ram, 0x804a9e0, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x2a, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804ca2c, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049caa, 4)
parse_entries,  ---  CALL (ram, 0x8048940, 4)
parse_entries, (register, 0xc, 4) COPY (ram, 0x8050298, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x80497e0, 4) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x8049950, 4)
parse_entries, (register, 0x18, 4) COPY (ram, 0x8050294, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x8049940, 4) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049cdc, 4)
parse_entries,  ---  CALL (ram, 0x804a9e0, 4)
parse_entries, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x18, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
parse_entries, (unique, 0x2f400, 4) COPY (const, 0x804cbf7, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049cf0, 4)
parse_entries,  ---  CALL (ram, 0x8048940, 4)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
parse_entries, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x8049940, 4)
parse_entries, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
parse_entries,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049cfd, 4)
parse_entries,  ---  CALL (ram, 0x8048900, 4)
fatal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
fatal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
fatal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fatal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fatal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fatal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fatal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fatal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fatal, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
fatal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fatal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fatal, (unique, 0x9780, 4) COPY (ram, 0x80502d0, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fatal, (unique, 0x2f400, 4) COPY (const, 0x804cf94, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
fatal, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
fatal, (unique, 0x9780, 4) COPY (ram, 0x8050240, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049d1f, 4)
fatal,  ---  CALL (ram, 0x8048a70, 4)
fatal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
fatal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
fatal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
fatal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fatal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fatal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fatal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fatal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fatal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fatal, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
fatal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fatal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049d29, 4)
fatal,  ---  CALL (ram, 0x80489c0, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0x14, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x14, 4) COPY (register, 0x10, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0x18, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
file_open, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0xc, 4) COPY (unique, 0x7980, 4)
file_open, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
file_open, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
file_open, (register, 0x0, 4) COPY (unique, 0x5000, 4)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffe4, 4)
file_open, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_open,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x42580, 4) INT_AND (register, 0xc, 4) , (register, 0xc, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open,  ---  CBRANCH (ram, 0x8049df1, 4) , (register, 0x206, 1)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_open, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_open, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
file_open, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open,  ---  CBRANCH (ram, 0x8049d90, 4) , (register, 0x206, 1)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
file_open, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_open, (register, 0x0, 4) COPY (const, 0x804cf9c, 4)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x8049d65, 4) , (unique, 0x7f00, 1)
file_open, (register, 0x0, 4) COPY (const, 0x804cf9f, 4)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049d6f, 4)
file_open,  ---  CALL (ram, 0x8048920, 4)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x18, 4) COPY (register, 0x0, 4)
file_open,  ---  CBRANCH (ram, 0x8049db0, 4) , (register, 0x206, 1)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffe4, 4)
file_open, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_open, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
file_open, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (unique, 0x7980, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x0, 4) COPY (register, 0x18, 4)
file_open, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x8049dec, 4) , (unique, 0x7f00, 1)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff4, 4)
file_open, (register, 0x10, 4) COPY (unique, 0x1d00, 4)
file_open, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_open, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_open, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_open, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_open, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  RETURN (register, 0x284, 4)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
file_open, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
file_open, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x8049d54, 4) , (unique, 0x7f00, 1)
file_open, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
file_open, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_open, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_open, (register, 0x18, 4) COPY (ram, 0x8050244, 4)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open,  ---  CBRANCH (ram, 0x8049d78, 4) , (register, 0x206, 1)
file_open, (register, 0x18, 4) COPY (ram, 0x8050260, 4)
file_open,  ---  BRANCH (ram, 0x8049d78, 4)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049db9, 4)
file_open,  ---  CALL (ram, 0x8048a00, 4)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x3c, 4)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x3c, 4)
file_open, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3c, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffff0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x2500, 4) INT_ADD (const, 0xf, 4) , (register, 0x10, 4)
file_open, (register, 0x1c, 4) COPY (unique, 0x2500, 4)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (unique, 0x2f400, 4) COPY (const, 0x804cfbf, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xfffffff0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x2f200, 4) COPY (const, 0xffffffff, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_open, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_open, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049dde, 4)
file_open,  ---  CALL (ram, 0x8048ae0, 4)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049de7, 4)
file_open,  ---  CALL (ram, 0x8048930, 4)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open,  ---  BRANCH (ram, 0x8049d78, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049df1, 4)
file_open,  ---  CALL (ram, 0x8048900, 4)
file_open, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_open, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_open, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_open, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_open, (unique, 0x2f400, 4) COPY (const, 0x804cfa2, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_open, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_open,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049dfe, 4)
file_open,  ---  CALL (ram, 0x8049d00, 4)
print_wtmp_file_location, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
print_wtmp_file_location, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
print_wtmp_file_location, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_wtmp_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_wtmp_file_location, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_wtmp_file_location, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_wtmp_file_location, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_wtmp_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_wtmp_file_location, (unique, 0x2f400, 4) COPY (const, 0x804cc41, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_wtmp_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_wtmp_file_location, (unique, 0x2f400, 4) COPY (const, 0x804d020, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_wtmp_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_wtmp_file_location, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_wtmp_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_wtmp_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e14, 4)
print_wtmp_file_location,  ---  CALL (ram, 0x8048a40, 4)
print_wtmp_file_location, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_wtmp_file_location, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
print_wtmp_file_location, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_wtmp_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_wtmp_file_location, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_wtmp_file_location, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_wtmp_file_location, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_wtmp_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_wtmp_file_location, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_wtmp_file_location, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_wtmp_file_location,  ---  RETURN (register, 0x284, 4)
print_acct_file_location, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
print_acct_file_location, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
print_acct_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
print_acct_file_location, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_location, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_location, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_location, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_location, (unique, 0x2f400, 4) COPY (const, 0x804cfd7, 4)
print_acct_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_location, (unique, 0x2f400, 4) COPY (const, 0x804d054, 4)
print_acct_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_location, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_acct_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_acct_file_location, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_location,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e34, 4)
print_acct_file_location,  ---  CALL (ram, 0x8048a40, 4)
print_acct_file_location, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_location, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_location, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_location, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_location, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_location, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_location, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_location, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_acct_file_location, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_location,  ---  RETURN (register, 0x284, 4)
print_acct_file_locations, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
print_acct_file_locations, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_locations, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804d08c, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e4d, 4)
print_acct_file_locations,  ---  CALL (ram, 0x80489a0, 4)
print_acct_file_locations, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_locations, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804cfd7, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804d0c0, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e61, 4)
print_acct_file_locations,  ---  CALL (ram, 0x8048a40, 4)
print_acct_file_locations, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_locations, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804cfee, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804d0e4, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e75, 4)
print_acct_file_locations,  ---  CALL (ram, 0x8048a40, 4)
print_acct_file_locations, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_locations, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804d007, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f400, 4) COPY (const, 0x804d108, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_acct_file_locations, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_acct_file_locations, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049e89, 4)
print_acct_file_locations,  ---  CALL (ram, 0x8048a40, 4)
print_acct_file_locations, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_locations, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_locations, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_acct_file_locations, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_acct_file_locations, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_acct_file_locations, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_acct_file_locations,  ---  RETURN (register, 0x284, 4)
file_reader_init, (unique, 0x9780, 4) COPY (register, 0x14, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_init, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_init, (unique, 0x9780, 4) COPY (register, 0x18, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_init, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
file_reader_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
file_reader_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_init, (register, 0x14, 4) COPY (unique, 0x7980, 4)
file_reader_init, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
file_reader_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_init, (register, 0x18, 4) COPY (unique, 0x7980, 4)
file_reader_init, (unique, 0x2f200, 4) COPY (const, 0x30, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049ea6, 4)
file_reader_init,  ---  CALL (ram, 0x804c2f0, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
file_reader_init, (register, 0x1c, 4) COPY (unique, 0x1d00, 4)
file_reader_init, (register, 0x4, 4) COPY (register, 0x0, 4)
file_reader_init, (register, 0xc, 4) COPY (register, 0x0, 4)
file_reader_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7a00, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x2c, 4)
file_reader_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
file_reader_init, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xfffffffc, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x1c, 4)
file_reader_init, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x1c, 4)
file_reader_init, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x1c, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x200, 1) INT_CARRY (register, 0x4, 4) , (const, 0x30, 4)
file_reader_init, (register, 0x20b, 1) INT_SCARRY (register, 0x4, 4) , (const, 0x30, 4)
file_reader_init, (register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x30, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (unique, 0x41180, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
file_reader_init, (unique, 0x41200, 4) COPY (register, 0x4, 4)
file_reader_init, (register, 0x4, 4) INT_RIGHT (register, 0x4, 4) , (unique, 0x41180, 4)
file_reader_init, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
file_reader_init, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
file_reader_init, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
file_reader_init, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
file_reader_init, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
file_reader_init, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
file_reader_init, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
file_reader_init, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
file_reader_init, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
file_reader_init, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xdc80, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_init, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
file_reader_init, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
file_reader_init, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
file_reader_init, (unique, 0xdf80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_init, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
file_reader_init, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
file_reader_init, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
file_reader_init, (unique, 0xe200, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
file_reader_init, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
file_reader_init, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
file_reader_init, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_init, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
file_reader_init, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
file_reader_init, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
file_reader_init, (unique, 0x8a80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
file_reader_init,  ---  CBRANCH (ram, 0x8049ec9, 4) , (unique, 0x8a80, 1)
file_reader_init, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x7480, 4) COPY (register, 0x1c, 4)
file_reader_init, (unique, 0x7500, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
file_reader_init, (unique, 0x7580, 4) INT_ZEXT (register, 0x20a, 1)
file_reader_init, (unique, 0x7600, 4) INT_MULT (const, 0x8, 4) , (unique, 0x7580, 4)
file_reader_init, (register, 0x1c, 4) INT_SUB (unique, 0x7500, 4) , (unique, 0x7600, 4)
file_reader_init, (unique, 0x7700, 4) COPY (register, 0x0, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x7480, 4) , (unique, 0x7700, 4)
file_reader_init,  ---  BRANCH (ram, 0x8049ec7, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_init, (unique, 0x7980, 4) COPY (register, 0x18, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x20, 4)
file_reader_init, (unique, 0x7980, 4) COPY (register, 0x14, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_init, (unique, 0x27c00, 8) INT_SEXT (register, 0x18, 4)
file_reader_init, (unique, 0x27c80, 8) INT_SEXT (register, 0x14, 4)
file_reader_init, (unique, 0x27d80, 8) INT_MULT (unique, 0x27c00, 8) , (unique, 0x27c80, 8)
file_reader_init, (register, 0x18, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x0, 4)
file_reader_init, (unique, 0x27f00, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x4, 4)
file_reader_init, (unique, 0xe880, 8) INT_SEXT (register, 0x18, 4)
file_reader_init, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27d80, 8)
file_reader_init, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_init, (unique, 0x7980, 4) COPY (register, 0x18, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
file_reader_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049eda, 4)
file_reader_init,  ---  CALL (ram, 0x804c2f0, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1c, 4)
file_reader_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_init, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
file_reader_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_init, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x0, 4) COPY (register, 0xc, 4)
file_reader_init, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_init,  ---  RETURN (register, 0x284, 4)
file_reader_add_file, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_reader_add_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_add_file, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
file_reader_add_file, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
file_reader_add_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
file_reader_add_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_add_file, (register, 0xc, 4) COPY (unique, 0x7980, 4)
file_reader_add_file, (unique, 0x2f200, 4) COPY (const, 0x8, 4)
file_reader_add_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_add_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049eff, 4)
file_reader_add_file,  ---  CALL (ram, 0x804c2f0, 4)
file_reader_add_file, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
file_reader_add_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_add_file, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_add_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
file_reader_add_file, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
file_reader_add_file, (unique, 0x7980, 4) COPY (register, 0x8, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_add_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_reader_add_file, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x8049f31, 4) , (register, 0x206, 1)
file_reader_add_file, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
file_reader_add_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_add_file, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x8049f22, 4) , (unique, 0x7f00, 1)
file_reader_add_file,  ---  BRANCH (ram, 0x8049f38, 4)
file_reader_add_file, (register, 0x4, 4) COPY (register, 0x8, 4)
file_reader_add_file, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x4, 4)
file_reader_add_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_add_file, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x8049f20, 4) , (unique, 0x7f00, 1)
file_reader_add_file, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x4, 4)
file_reader_add_file, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file,  ---  RETURN (register, 0x284, 4)
file_reader_add_file, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_add_file,  ---  STORE (const, 0x1a1, 4) , (register, 0xc, 4) , (unique, 0x7980, 4)
file_reader_add_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_add_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_add_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_add_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_add_file, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_add_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_add_file,  ---  RETURN (register, 0x284, 4)
file_reader_add_file, (register, 0x4, 4) COPY (register, 0x8, 4)
file_reader_add_file,  ---  BRANCH (ram, 0x8049f29, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x14, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x18, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (register, 0xc, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x18, 4) COPY (register, 0x8, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a0b4, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049fa8, 4) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049fe8, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x20, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1c, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049f78, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048950, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a0e8, 4) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a148, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049f97, 4)
file_reader_get_entry,  ---  CALL (ram, 0x80488c0, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (register, 0xc, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a16f, 4) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049fbe, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8049d30, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049f9a, 4) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a110, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
file_reader_get_entry, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
file_reader_get_entry, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
file_reader_get_entry, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049f69, 4) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x18, 4) COPY (register, 0x18, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8049ff1, 4)
file_reader_get_entry,  ---  CALL (ram, 0x80489d0, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x8, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x1e080, 4) INT_SUB (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x8480, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049f8c, 4) , (unique, 0x8480, 1)
file_reader_get_entry, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a100, 4) , (unique, 0x8700, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x14, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (register, 0x14, 4)
file_reader_get_entry, (unique, 0x1d680, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x8, 4) SUBPIECE (unique, 0x1d680, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x8, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x14, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a01c, 4)
file_reader_get_entry,  ---  CALL (ram, 0x804c4b0, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x20, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x18, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x1c, 4) COPY (register, 0x4, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
file_reader_get_entry, (unique, 0x3d000, 4) COPY (register, 0x1c, 4)
file_reader_get_entry, (register, 0x1c, 4) INT_SRIGHT (register, 0x1c, 4) , (unique, 0x3cf80, 4)
file_reader_get_entry, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
file_reader_get_entry, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
file_reader_get_entry, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
file_reader_get_entry, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
file_reader_get_entry, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
file_reader_get_entry, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
file_reader_get_entry, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
file_reader_get_entry, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
file_reader_get_entry, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
file_reader_get_entry, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
file_reader_get_entry, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xdc80, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_get_entry, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
file_reader_get_entry, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
file_reader_get_entry, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
file_reader_get_entry, (unique, 0xdf80, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_get_entry, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
file_reader_get_entry, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
file_reader_get_entry, (unique, 0xe200, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
file_reader_get_entry, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
file_reader_get_entry, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
file_reader_get_entry, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
file_reader_get_entry, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
file_reader_get_entry, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x3c00, 4)
file_reader_get_entry, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x3c00, 4)
file_reader_get_entry, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (unique, 0x1e780, 4) INT_SUB (register, 0x8, 4) , (unique, 0x3c00, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x1c, 4) COPY (register, 0x8, 4)
file_reader_get_entry, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a162, 4) , (unique, 0x8580, 1)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x14, 4)
file_reader_get_entry, (register, 0x14, 4) INT_2COMP (register, 0x14, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) COPY (register, 0x14, 4)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x27c00, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (unique, 0x27c80, 8) INT_SEXT (register, 0x18, 4)
file_reader_get_entry, (unique, 0x27d80, 8) INT_MULT (unique, 0x27c00, 8) , (unique, 0x27c80, 8)
file_reader_get_entry, (register, 0x0, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x27f00, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27d80, 8)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a052, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048910, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (ram, 0x8050298, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a19b, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x18, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1c, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a071, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048950, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a1c7, 4) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x14, 4) COPY (ram, 0x8050298, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a180, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x0, 4) INT_2COMP (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x27c00, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (unique, 0x27c80, 8) INT_SEXT (register, 0x18, 4)
file_reader_get_entry, (unique, 0x27d80, 8) INT_MULT (unique, 0x27c00, 8) , (unique, 0x27c80, 8)
file_reader_get_entry, (register, 0x0, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x27f00, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27d80, 8)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a0a1, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048910, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x18, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x18, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (register, 0x18, 4)
file_reader_get_entry, (register, 0x8, 4) COPY (register, 0x1c, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a130, 4) , (unique, 0x7f00, 1)
file_reader_get_entry, (register, 0x18, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x1c, 4) COPY (register, 0x8, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0xcf80, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
file_reader_get_entry, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
file_reader_get_entry, (register, 0x1c, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x18, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) COPY (register, 0x1c, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x27c00, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x27c80, 8) INT_SEXT (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x27d80, 8) INT_MULT (unique, 0x27c00, 8) , (unique, 0x27c80, 8)
file_reader_get_entry, (register, 0x0, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x27f00, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27d80, 8)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1c, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  RETURN (register, 0x284, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2f400, 4) COPY (const, 0x804d174, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a0f5, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8049d00, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x8049f8c, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x8049f8c, 4) , (unique, 0x8000, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a007, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x2, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a11d, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048910, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x8049fd3, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0xcf80, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
file_reader_get_entry, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
file_reader_get_entry, (register, 0x8, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
file_reader_get_entry, (unique, 0x27c00, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x27c80, 8) INT_SEXT (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x27d80, 8) INT_MULT (unique, 0x27c00, 8) , (unique, 0x27c80, 8)
file_reader_get_entry, (register, 0x0, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x27f00, 4) SUBPIECE (unique, 0x27d80, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27d80, 8)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x8, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x1c, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a0d9, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (register, 0x4, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d680, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x8, 4) SUBPIECE (unique, 0x1d680, 8) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x8, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x8, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a0bb, 4) , (register, 0x206, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a130, 4)
file_reader_get_entry, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a176, 4) , (unique, 0x8700, 1)
file_reader_get_entry, (register, 0x18, 4) COPY (register, 0x4, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a03d, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a0dd, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
file_reader_get_entry, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x804a03d, 4) , (unique, 0x8000, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a164, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (register, 0x18, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x2f400, 4) COPY (const, 0x804d14a, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a193, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048a70, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a08b, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a1a6, 4)
file_reader_get_entry,  ---  CALL (ram, 0x80489d0, 4)
file_reader_get_entry, (unique, 0x7980, 4) COPY (register, 0x0, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
file_reader_get_entry, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (unique, 0x2f400, 4) COPY (const, 0x804d12c, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_reader_get_entry, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_get_entry, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a1bf, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8048a70, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a062, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x2f400, 4) COPY (const, 0x804d174, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_reader_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a1d4, 4)
file_reader_get_entry,  ---  CALL (ram, 0x8049d00, 4)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x804a07d, 4)
file_reader_print_file_and_line, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
file_reader_print_file_and_line, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_print_file_and_line, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_print_file_and_line, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x2c, 4)
file_reader_print_file_and_line, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_print_file_and_line, (register, 0x8, 4) COPY (unique, 0x7980, 4)
file_reader_print_file_and_line, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
file_reader_print_file_and_line, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
file_reader_print_file_and_line, (register, 0x0, 4) COPY (unique, 0x7980, 4)
file_reader_print_file_and_line, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
file_reader_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line,  ---  CBRANCH (ram, 0x804a210, 4) , (register, 0x206, 1)
file_reader_print_file_and_line, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line, (unique, 0x9780, 4) COPY (register, 0x8, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_print_file_and_line, (unique, 0x9780, 4) COPY (register, 0x0, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_print_file_and_line, (unique, 0x2f400, 4) COPY (const, 0x804d16b, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
file_reader_print_file_and_line, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
file_reader_print_file_and_line, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
file_reader_print_file_and_line, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
file_reader_print_file_and_line, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a206, 4)
file_reader_print_file_and_line,  ---  CALL (ram, 0x8048a70, 4)
file_reader_print_file_and_line, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x2c, 4)
file_reader_print_file_and_line, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x2c, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2c, 4)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
file_reader_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
file_reader_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
file_reader_print_file_and_line, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
file_reader_print_file_and_line,  ---  RETURN (register, 0x284, 4)
file_reader_print_file_and_line, (register, 0x0, 4) COPY (const, 0x804d165, 4)
file_reader_print_file_and_line,  ---  BRANCH (ram, 0x804a1f1, 4)
get_key_len, (unique, 0x9780, 4) COPY (register, 0xc, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
get_key_len, (register, 0xc, 4) COPY (register, 0x8, 4)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len,  ---  CBRANCH (ram, 0x804a240, 4) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len,  ---  CBRANCH (ram, 0x804a270, 4) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
get_key_len, (unique, 0x1e380, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0x4, 4)
get_key_len, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
get_key_len,  ---  CBRANCH (ram, 0x804a280, 4) , (unique, 0x7f00, 1)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  RETURN (register, 0x284, 4)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x4, 4) COPY (register, 0x8, 4)
get_key_len,  ---  CBRANCH (ram, 0x804a2a0, 4) , (register, 0x206, 1)
get_key_len, (register, 0x18, 4) COPY (register, 0x18, 4)
get_key_len, (register, 0x1c, 4) COPY (register, 0x1c, 4)
get_key_len, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
get_key_len, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
get_key_len, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
get_key_len, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len,  ---  CBRANCH (ram, 0x804a25d, 4) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (const, 0x1, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (const, 0x1, 4)
get_key_len, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
get_key_len,  ---  CBRANCH (ram, 0x804a250, 4) , (unique, 0x7f00, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0xc, 4)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
get_key_len, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  RETURN (register, 0x284, 4)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x2f400, 4) COPY (const, 0x804d198, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a27d, 4)
get_key_len,  ---  CALL (ram, 0x8049d00, 4)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x2f400, 4) COPY (const, 0x804d1d0, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a28d, 4)
get_key_len,  ---  CALL (ram, 0x8049d00, 4)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0xc, 4)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  RETURN (register, 0x284, 4)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x9780, 4) COPY (register, 0x0, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
get_key_len, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a2a9, 4)
get_key_len,  ---  CALL (ram, 0x8048a00, 4)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
get_key_len, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
get_key_len, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
get_key_len, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
get_key_len, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
get_key_len, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
get_key_len,  ---  RETURN (register, 0x284, 4)
hashtab_next, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_next, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_next, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_next, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_next, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_next, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
hashtab_next, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x7e00, 1) BOOL_NEGATE (register, 0x200, 1)
hashtab_next,  ---  CBRANCH (ram, 0x804a2ee, 4) , (unique, 0x7e00, 1)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0xc, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_next, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_next, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
hashtab_next, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
hashtab_next, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x804a2e7, 4) , (register, 0x206, 1)
hashtab_next,  ---  BRANCH (ram, 0x804a2f8, 4)
hashtab_next, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
hashtab_next, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
hashtab_next, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_next,  ---  CBRANCH (ram, 0x804a2f8, 4) , (unique, 0x7f00, 1)
hashtab_next, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
hashtab_next, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x804a2e0, 4) , (register, 0x200, 1)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  RETURN (register, 0x284, 4)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x14, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_next, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0xc, 4) , (const, 0x1, 4)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 4) , (const, 0x1, 4)
hashtab_next, (unique, 0x1e080, 4) INT_SUB (register, 0xc, 4) , (const, 0x1, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_next, (unique, 0x7980, 4) COPY (register, 0xc, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_next, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
hashtab_next, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xcf80, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
hashtab_next, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
hashtab_next, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
hashtab_next, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
hashtab_next, (register, 0x8, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_next, (register, 0x0, 4) COPY (register, 0x4, 4)
hashtab_next, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  RETURN (register, 0x284, 4)
hashtab_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
hashtab_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
hashtab_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
hashtab_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_init, (unique, 0x2f200, 4) COPY (const, 0x14, 4)
hashtab_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a31a, 4)
hashtab_init,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_init, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_init, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7a00, 4)
hashtab_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
hashtab_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
hashtab_init, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_init, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
hashtab_init, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_init,  ---  RETURN (register, 0x284, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x14, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a5a3, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a366, 4)
hashtab_create,  ---  CALL (ram, 0x804a220, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x18, 4) COPY (register, 0x0, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
hashtab_create, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_create,  ---  CBRANCH (ram, 0x804a595, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x14, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3e580, 4) INT_AND (const, 0x5, 4) , (const, 0x1f, 4)
hashtab_create, (unique, 0x3e600, 4) COPY (register, 0x14, 4)
hashtab_create, (register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x3e580, 4)
hashtab_create, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
hashtab_create, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
hashtab_create, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
hashtab_create, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x10280, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
hashtab_create, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
hashtab_create, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
hashtab_create, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdc80, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
hashtab_create, (unique, 0xdf80, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
hashtab_create, (unique, 0xe200, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
hashtab_create, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x14, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x14, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) COPY (register, 0x14, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
hashtab_create, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x14, 4) INT_SEXT (unique, 0x7800, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x1c, 4)
hashtab_create, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a380, 4) , (unique, 0x7f00, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x22f80, 8) INT_ZEXT (register, 0x4, 4)
hashtab_create, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
hashtab_create, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
hashtab_create, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
hashtab_create, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_create, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
hashtab_create, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_create, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
hashtab_create, (unique, 0x2080, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
hashtab_create, (register, 0x1c, 4) COPY (unique, 0x2180, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
hashtab_create, (register, 0x14, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a3f5, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0xc, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_create,  ---  BRANCH (ram, 0x804a3c7, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x14, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a3f1, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x18, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x18, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x18, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a3c0, 4) , (unique, 0x7f00, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
hashtab_create, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a3d9, 4)
hashtab_create,  ---  CALL (ram, 0x80488e0, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a3c0, 4) , (unique, 0x7f00, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) COPY (register, 0x14, 4)
hashtab_create, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  RETURN (register, 0x284, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2f200, 4) COPY (const, 0x1c, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a3ff, 4)
hashtab_create,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_create, (register, 0x14, 4) COPY (register, 0x0, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x18, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a413, 4)
hashtab_create,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) COPY (register, 0x0, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x8, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a42a, 4)
hashtab_create,  ---  CALL (ram, 0x80488b0, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0xc, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x2000, 4) INT_ADD (register, 0x8, 4) , (unique, 0x1f00, 4)
hashtab_create, (unique, 0x7800, 1) COPY (const, 0x0, 1)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2000, 4) , (unique, 0x7800, 1)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a45a, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x14, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x3c00, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x3c00, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (unique, 0x1e780, 4) INT_SUB (register, 0x8, 4) , (unique, 0x3c00, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x1c, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a476, 4) , (unique, 0x8180, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  RETURN (register, 0x284, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
hashtab_create, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x2080, 4) INT_MULT (register, 0x18, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
hashtab_create, (register, 0x1c, 4) COPY (unique, 0x2180, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x14, 4) COPY (register, 0x0, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0xc, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x26, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x3b80, 2) COPY (register, 0x1090, 2)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x3b80, 2)
hashtab_create, (unique, 0x12180, 10) COPY (register, 0x1046, 10)
hashtab_create, (register, 0x1046, 10) COPY (register, 0x103c, 10)
hashtab_create, (register, 0x103c, 10) COPY (register, 0x1032, 10)
hashtab_create, (register, 0x1032, 10) COPY (register, 0x1028, 10)
hashtab_create, (register, 0x1028, 10) COPY (register, 0x101e, 10)
hashtab_create, (register, 0x101e, 10) COPY (register, 0x1014, 10)
hashtab_create, (register, 0x1014, 10) COPY (register, 0x100a, 10)
hashtab_create, (register, 0x100a, 10) COPY (register, 0x1000, 10)
hashtab_create, (register, 0x1000, 10) COPY (unique, 0x12180, 10)
hashtab_create, (unique, 0x3f00, 8) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
hashtab_create, (register, 0x1000, 10) INT2FLOAT (unique, 0x3f00, 8)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x26, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) INT_ZEXT (unique, 0x7900, 2)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x48100, 10) FLOAT2FLOAT (ram, 0x804d218, 8)
hashtab_create, (register, 0x1000, 10) FLOAT_MULT (register, 0x1000, 10) , (unique, 0x48100, 10)
hashtab_create, (register, 0x1, 1) COPY (const, 0xc, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7880, 2) COPY (register, 0x0, 2)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7880, 2)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x3b80, 2) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x1090, 2) COPY (unique, 0x3b80, 2)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x46c00, 10) ROUND (register, 0x1000, 10)
hashtab_create, (register, 0x1000, 10) COPY (register, 0x100a, 10)
hashtab_create, (register, 0x100a, 10) COPY (register, 0x1014, 10)
hashtab_create, (register, 0x1014, 10) COPY (register, 0x101e, 10)
hashtab_create, (register, 0x101e, 10) COPY (register, 0x1028, 10)
hashtab_create, (register, 0x1028, 10) COPY (register, 0x1032, 10)
hashtab_create, (register, 0x1032, 10) COPY (register, 0x103c, 10)
hashtab_create, (register, 0x103c, 10) COPY (register, 0x1046, 10)
hashtab_create, (unique, 0x3f00, 8) TRUNC (unique, 0x46c00, 10)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x3f00, 8)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x26, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x3b80, 2) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x1090, 2) COPY (unique, 0x3b80, 2)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x0, 4) COPY (register, 0x18, 4)
hashtab_create, (unique, 0x3e580, 4) INT_AND (const, 0x4, 4) , (const, 0x1f, 4)
hashtab_create, (unique, 0x3e600, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x3e580, 4)
hashtab_create, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
hashtab_create, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
hashtab_create, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
hashtab_create, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x10280, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
hashtab_create, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
hashtab_create, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
hashtab_create, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
hashtab_create, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
hashtab_create, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
hashtab_create, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a4d1, 4)
hashtab_create,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
hashtab_create, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x2080, 4) INT_MULT (register, 0x4, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x2180, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x8, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a4ed, 4)
hashtab_create,  ---  CALL (ram, 0x8048a20, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x14, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_create,  ---  CBRANCH (ram, 0x804a574, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a565, 4) , (register, 0x206, 1)
hashtab_create, (register, 0x18, 4) COPY (register, 0x18, 4)
hashtab_create, (register, 0x1c, 4) COPY (register, 0x1c, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x14, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x14, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
hashtab_create, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a58f, 4) , (register, 0x206, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3e580, 4) INT_AND (const, 0x5, 4) , (const, 0x1f, 4)
hashtab_create, (unique, 0x3e600, 4) COPY (register, 0x8, 4)
hashtab_create, (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x3e580, 4)
hashtab_create, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
hashtab_create, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
hashtab_create, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
hashtab_create, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x10280, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
hashtab_create, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
hashtab_create, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
hashtab_create, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
hashtab_create, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
hashtab_create, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
hashtab_create, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_create, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) COPY (register, 0x8, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
hashtab_create, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x8, 4) INT_SEXT (unique, 0x7800, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x14, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a520, 4) , (unique, 0x7f00, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x22f80, 8) INT_ZEXT (unique, 0x7980, 4)
hashtab_create, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
hashtab_create, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
hashtab_create, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
hashtab_create, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_create, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
hashtab_create, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_create, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
hashtab_create, (unique, 0x2080, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x2180, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_create, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x10, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x8, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x14, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a55d, 4) , (register, 0x206, 1)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_create, (register, 0x4, 4) COPY (register, 0x18, 4)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a510, 4) , (unique, 0x7f00, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
hashtab_create, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x804a4fc, 4) , (unique, 0x7f00, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a580, 4)
hashtab_create,  ---  CALL (ram, 0x80488a0, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_create, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  RETURN (register, 0x284, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  BRANCH (ram, 0x804a542, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (register, 0x1c, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  BRANCH (ram, 0x804a3a4, 4)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x7, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (register, 0xc, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
hashtab_create, (unique, 0x7a00, 4) COPY (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_create, (unique, 0x2f200, 4) COPY (const, 0x1c, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a5c1, 4)
hashtab_create,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_create, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
hashtab_create, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_create, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_create, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_create, (unique, 0x2f200, 4) COPY (const, 0x1c, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_create, (unique, 0x2080, 4) INT_MULT (register, 0x18, 4) , (const, 0x4, 4)
hashtab_create, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
hashtab_create, (register, 0x8, 4) COPY (unique, 0x2180, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x8, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_create, (unique, 0x9780, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_create, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_create,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a5d8, 4)
hashtab_create,  ---  CALL (ram, 0x8048a60, 4)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
hashtab_create, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_create, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_create,  ---  BRANCH (ram, 0x804a356, 4)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0x14, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_find, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_find, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_find, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a680, 4) , (register, 0x206, 1)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_find, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_find, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x0, 4) COPY (register, 0xc, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a608, 4)
hashtab_find,  ---  CALL (ram, 0x804a220, 4)
hashtab_find, (register, 0x1c, 4) COPY (register, 0x0, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
hashtab_find, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_find,  ---  CBRANCH (ram, 0x804a68a, 4) , (register, 0x206, 1)
hashtab_find, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x2000, 4) INT_ADD (register, 0xc, 4) , (unique, 0x1f00, 4)
hashtab_find, (register, 0x8, 4) COPY (unique, 0x2000, 4)
hashtab_find, (register, 0x14, 4) COPY (register, 0xc, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (register, 0x4, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x18, 4) COPY (register, 0x18, 4)
hashtab_find, (register, 0x0, 4) COPY (register, 0x4, 4)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (const, 0x1, 4)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (const, 0x1, 4)
hashtab_find, (register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x3e580, 4) INT_AND (const, 0x5, 4) , (const, 0x1f, 4)
hashtab_find, (unique, 0x3e600, 4) COPY (register, 0x0, 4)
hashtab_find, (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x3e580, 4)
hashtab_find, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
hashtab_find, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
hashtab_find, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
hashtab_find, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
hashtab_find, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
hashtab_find, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x10280, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
hashtab_find, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
hashtab_find, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
hashtab_find, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
hashtab_find, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
hashtab_find, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
hashtab_find, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
hashtab_find, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
hashtab_find, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
hashtab_find, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
hashtab_find, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
hashtab_find, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
hashtab_find, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
hashtab_find, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
hashtab_find, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
hashtab_find, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
hashtab_find, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x4, 4) COPY (register, 0x0, 4)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)
hashtab_find, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x4, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x4, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x4, 4) INT_ADD (register, 0x4, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x14, 4) , (register, 0x8, 4)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x14, 4) , (register, 0x8, 4)
hashtab_find, (unique, 0x1e380, 4) INT_SUB (register, 0x14, 4) , (register, 0x8, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a620, 4) , (unique, 0x7f00, 1)
hashtab_find, (register, 0x0, 4) COPY (register, 0x4, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_find, (unique, 0x22f80, 8) INT_ZEXT (unique, 0x7980, 4)
hashtab_find, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
hashtab_find, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
hashtab_find, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
hashtab_find, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
hashtab_find, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_find, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
hashtab_find, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
hashtab_find, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
hashtab_find, (unique, 0x3e580, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
hashtab_find, (unique, 0x3e600, 4) COPY (register, 0x8, 4)
hashtab_find, (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x3e580, 4)
hashtab_find, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
hashtab_find, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
hashtab_find, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
hashtab_find, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
hashtab_find, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
hashtab_find, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x10280, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
hashtab_find, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
hashtab_find, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
hashtab_find, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
hashtab_find, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
hashtab_find, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
hashtab_find, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
hashtab_find, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
hashtab_find, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
hashtab_find, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
hashtab_find, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
hashtab_find, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
hashtab_find, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
hashtab_find, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
hashtab_find, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
hashtab_find, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
hashtab_find, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_find, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
hashtab_find, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a657, 4) , (unique, 0x7f00, 1)
hashtab_find,  ---  BRANCH (ram, 0x804a680, 4)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x14, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a680, 4) , (register, 0x206, 1)
hashtab_find, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_find, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a650, 4) , (unique, 0x7f00, 1)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
hashtab_find, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_find, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a668, 4)
hashtab_find,  ---  CALL (ram, 0x80488e0, 4)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x804a650, 4) , (unique, 0x7f00, 1)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x0, 4) COPY (register, 0x18, 4)
hashtab_find, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  RETURN (register, 0x284, 4)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_find,  ---  RETURN (register, 0x284, 4)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_find, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_find,  ---  BRANCH (ram, 0x804a641, 4)
hashtab_get_key, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_get_key, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_get_key, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_get_key, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_get_key, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_get_key, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_get_key, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_get_key,  ---  RETURN (register, 0x284, 4)
hashtab_get_value, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_get_value, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_get_value, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_get_value, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
hashtab_get_value, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_get_value, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_get_value, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_get_value, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_get_value,  ---  RETURN (register, 0x284, 4)
hashtab_set_value, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_set_value, (unique, 0x9780, 4) COPY (register, 0x18, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_set_value, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_set_value, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_set_value, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_set_value, (register, 0x18, 4) COPY (unique, 0x7980, 4)
hashtab_set_value, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_set_value, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_set_value, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_set_value, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_set_value, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_set_value, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_set_value, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_set_value, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_set_value, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_set_value, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a6c8, 4)
hashtab_set_value,  ---  CALL (ram, 0x804c2f0, 4)
hashtab_set_value, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_set_value, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_set_value, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_set_value, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_set_value, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_set_value, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_set_value, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_set_value, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_set_value, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_set_value, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0xc, 4)
hashtab_set_value, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) COPY (register, 0xc, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) COPY (register, 0x18, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_set_value, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_set_value, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_set_value,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_set_value, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_set_value, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_set_value, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_set_value, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_set_value,  ---  BRANCH (ram, 0x80488b0, 4)
hashtab_first, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
hashtab_first, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_first, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_first, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_first, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_first, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_first, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_first,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7a00, 4)
hashtab_first, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_first, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_first,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_first, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
hashtab_first, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_first,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_first,  ---  BRANCH (ram, 0x804a2c0, 4)
hashtab_next, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_next, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_next, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x804a738, 4) , (register, 0x206, 1)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x14, 4)
hashtab_next, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_next, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
hashtab_next, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_next,  ---  CBRANCH (ram, 0x804a730, 4) , (register, 0x206, 1)
hashtab_next, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  RETURN (register, 0x284, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_next,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7a00, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
hashtab_next, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_next, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_next, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_next,  ---  RETURN (register, 0x284, 4)
hashtab_next, (register, 0x0, 4) COPY (register, 0x8, 4)
hashtab_next,  ---  BRANCH (ram, 0x804a2c0, 4)
hashtab_dump_keys, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_dump_keys, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
hashtab_dump_keys, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
hashtab_dump_keys, (register, 0x0, 4) COPY (unique, 0x5000, 4)
hashtab_dump_keys, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_dump_keys, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_dump_keys, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
hashtab_dump_keys, (register, 0xc, 4) COPY (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
hashtab_dump_keys, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_dump_keys, (register, 0x0, 4) COPY (register, 0x10, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a770, 4)
hashtab_dump_keys,  ---  CALL (ram, 0x804a2c0, 4)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x804a7a2, 4) , (register, 0x206, 1)
hashtab_dump_keys, (register, 0x18, 4) COPY (register, 0x18, 4)
hashtab_dump_keys, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_dump_keys, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_dump_keys, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_dump_keys, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_dump_keys, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
hashtab_dump_keys, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_dump_keys, (unique, 0x2f400, 4) COPY (const, 0x804d20b, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
hashtab_dump_keys, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
hashtab_dump_keys, (unique, 0x9780, 4) COPY (ram, 0x8050260, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a792, 4)
hashtab_dump_keys,  ---  CALL (ram, 0x8048a70, 4)
hashtab_dump_keys, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
hashtab_dump_keys, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a79b, 4)
hashtab_dump_keys,  ---  CALL (ram, 0x804a710, 4)
hashtab_dump_keys, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_dump_keys, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x804a778, 4) , (unique, 0x7f00, 1)
hashtab_dump_keys, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
hashtab_dump_keys, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_dump_keys, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_dump_keys, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
hashtab_dump_keys, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x804a7b4, 4) , (unique, 0x7f00, 1)
hashtab_dump_keys, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_dump_keys, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  RETURN (register, 0x284, 4)
hashtab_dump_keys, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a7b9, 4)
hashtab_dump_keys,  ---  CALL (ram, 0x8048900, 4)
hashtab_delete, (unique, 0x9780, 4) COPY (register, 0xc, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_delete, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
hashtab_delete, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
hashtab_delete, (register, 0xc, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (unique, 0x7a00, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x1, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x804a818, 4) , (register, 0x206, 1)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
hashtab_delete, (unique, 0x7980, 4) COPY (register, 0x0, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x804a7e9, 4) , (register, 0x206, 1)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)
hashtab_delete, (unique, 0x7980, 4) COPY (register, 0x8, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x804a7fc, 4) , (register, 0x206, 1)
hashtab_delete, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (unique, 0x9780, 4) COPY (register, 0x0, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a7f9, 4)
hashtab_delete,  ---  CALL (ram, 0x80488a0, 4)
hashtab_delete, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_delete, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
hashtab_delete, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
hashtab_delete, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
hashtab_delete, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a806, 4)
hashtab_delete,  ---  CALL (ram, 0x80488a0, 4)
hashtab_delete, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
hashtab_delete, (unique, 0x7980, 4) COPY (register, 0xc, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
hashtab_delete, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x18, 4)
hashtab_delete, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x18, 4)
hashtab_delete, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
hashtab_delete, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_delete, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_delete, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
hashtab_delete, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
hashtab_delete, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
hashtab_delete, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
hashtab_delete,  ---  BRANCH (ram, 0x80488a0, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x4, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x8, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
hashtab_delete, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
hashtab_delete, (register, 0x0, 4) COPY (unique, 0x7980, 4)
hashtab_delete, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
hashtab_delete, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
hashtab_delete, (unique, 0x7980, 4) COPY (register, 0x4, 4)
hashtab_delete,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2000, 4) , (unique, 0x7980, 4)
hashtab_delete,  ---  BRANCH (ram, 0x804a7dc, 4)
utmp_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
utmp_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
utmp_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
utmp_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_init, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
utmp_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
utmp_init, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
utmp_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
utmp_init, (unique, 0x2f400, 4) COPY (const, 0x100, 4)
utmp_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
utmp_init, (unique, 0x2f400, 4) COPY (const, 0x180, 4)
utmp_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
utmp_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a846, 4)
utmp_init,  ---  CALL (ram, 0x8049e90, 4)
utmp_init, (ram, 0x805029c, 4) COPY (register, 0x0, 4)
utmp_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
utmp_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
utmp_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
utmp_init,  ---  RETURN (register, 0x284, 4)
add_utmp_file, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
add_utmp_file, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
add_utmp_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
add_utmp_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
add_utmp_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
add_utmp_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
add_utmp_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
add_utmp_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
add_utmp_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
add_utmp_file, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
add_utmp_file, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
add_utmp_file, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
add_utmp_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
add_utmp_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
add_utmp_file, (unique, 0x9780, 4) COPY (ram, 0x805029c, 4)
add_utmp_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
add_utmp_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
add_utmp_file, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
add_utmp_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a862, 4)
add_utmp_file,  ---  CALL (ram, 0x8049ef0, 4)
add_utmp_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
add_utmp_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
add_utmp_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
add_utmp_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
add_utmp_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
add_utmp_file, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
add_utmp_file, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
add_utmp_file, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
add_utmp_file, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
add_utmp_file, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
add_utmp_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
add_utmp_file,  ---  RETURN (register, 0x284, 4)
utmp_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
utmp_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
utmp_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
utmp_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_get_entry, (unique, 0x9780, 4) COPY (ram, 0x805029c, 4)
utmp_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
utmp_get_entry, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_get_entry,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a87e, 4)
utmp_get_entry,  ---  CALL (ram, 0x8049f40, 4)
utmp_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
utmp_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_get_entry, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_get_entry, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_get_entry, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_get_entry, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
utmp_get_entry, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
utmp_get_entry,  ---  RETURN (register, 0x284, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x18, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0xc, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
print_utmp_record, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
print_utmp_record, (register, 0x14, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
print_utmp_record, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x5000, 4)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
print_utmp_record, (unique, 0x7980, 4) COPY (register, 0x0, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x804a97d, 4) , (register, 0x206, 1)
print_utmp_record, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2c, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x20, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804d220, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a8d5, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a70, 4)
print_utmp_record, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
print_utmp_record, (register, 0x0, 4) INT_SEXT (unique, 0x7900, 2)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x30, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x30, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804d22f, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a8e9, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a70, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x2280, 4) INT_ADD (const, 0x28, 4) , (register, 0x1c, 4)
print_utmp_record, (unique, 0x2300, 4) INT_MULT (register, 0x18, 4) , (const, 0x1, 4)
print_utmp_record, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
print_utmp_record, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2400, 4)
print_utmp_record, (register, 0xc, 4) INT_SEXT (unique, 0x7800, 1)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x42380, 1) INT_AND (register, 0xc, 1) , (register, 0xc, 1)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x804a9b0, 4) , (register, 0x206, 1)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a8fe, 4)
print_utmp_record,  ---  CALL (ram, 0x8048ac0, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (unique, 0x2280, 4) INT_ADD (const, 0x1, 4) , (register, 0x0, 4)
print_utmp_record, (unique, 0x2300, 4) INT_MULT (register, 0xc, 4) , (const, 0x2, 4)
print_utmp_record, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2400, 4)
print_utmp_record, (unique, 0x42080, 1) INT_AND (unique, 0x7800, 1) , (const, 0x40, 1)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x42080, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x42080, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0xd900, 1) INT_AND (unique, 0x42080, 1) , (const, 0xff, 1)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x804a998, 4) , (unique, 0x7f00, 1)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x3f, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a916, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a50, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
print_utmp_record, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x4, 4)
print_utmp_record, (unique, 0x1e080, 4) INT_SUB (register, 0x18, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x804a8ec, 4) , (unique, 0x7f00, 1)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x7c, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a92c, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a50, 4)
print_utmp_record, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804d23b, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a93c, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a70, 4)
print_utmp_record, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4c, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x18, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x18, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x100, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x100, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804d227, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a95a, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a70, 4)
print_utmp_record, (unique, 0x1e00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x154, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
print_utmp_record, (unique, 0x7980, 4) COPY (register, 0x0, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x2500, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a971, 4)
print_utmp_record,  ---  CALL (ram, 0x80488f0, 4)
print_utmp_record, (register, 0x8, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x4, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a97a, 4)
print_utmp_record,  ---  CALL (ram, 0x8048ab0, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
print_utmp_record, (register, 0x0, 4) COPY (unique, 0x7980, 4)
print_utmp_record, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x7980, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x804a9d6, 4) , (unique, 0x7f00, 1)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  RETURN (register, 0x284, 4)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0xc, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a9a2, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a50, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  BRANCH (ram, 0x804a919, 4)
print_utmp_record, (register, 0x0, 4) COPY (const, 0x4, 4)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804cb36, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x0, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (unique, 0x2f400, 4) COPY (const, 0x804d234, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
print_utmp_record, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
print_utmp_record, (unique, 0x9780, 4) COPY (register, 0x14, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a9ce, 4)
print_utmp_record,  ---  CALL (ram, 0x8048a70, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
print_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
print_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  BRANCH (ram, 0x804a921, 4)
print_utmp_record, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
print_utmp_record,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a9db, 4)
print_utmp_record,  ---  CALL (ram, 0x8048900, 4)
utmp_print_file_and_line, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
utmp_print_file_and_line, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
utmp_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_print_file_and_line, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_print_file_and_line, (unique, 0x9780, 4) COPY (ram, 0x805029c, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
utmp_print_file_and_line, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
utmp_print_file_and_line, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
utmp_print_file_and_line, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
utmp_print_file_and_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804a9f2, 4)
utmp_print_file_and_line,  ---  CALL (ram, 0x804a1e0, 4)
utmp_print_file_and_line, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_print_file_and_line, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
utmp_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
utmp_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
utmp_print_file_and_line, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
utmp_print_file_and_line, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
utmp_print_file_and_line, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
utmp_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
utmp_print_file_and_line, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
utmp_print_file_and_line, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
utmp_print_file_and_line,  ---  RETURN (register, 0x284, 4)
fix_ut_type_field, (unique, 0x9780, 4) COPY (register, 0x14, 4)
fix_ut_type_field, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fix_ut_type_field, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fix_ut_type_field, (unique, 0x9780, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fix_ut_type_field, (unique, 0x9780, 4) COPY (register, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x8, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0xc, 4) INT_ZEXT (unique, 0x7800, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0xc, 1) , (const, 0x7c, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 1) , (const, 0x7c, 1)
fix_ut_type_field, (unique, 0x1dc80, 1) INT_SUB (register, 0xc, 1) , (const, 0x7c, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aab8, 4) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0xc, 1) , (const, 0x7b, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 1) , (const, 0x7b, 1)
fix_ut_type_field, (unique, 0x1dc80, 1) INT_SUB (register, 0xc, 1) , (const, 0x7b, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab38, 4) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0xc, 1) , (const, 0x7e, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0xc, 1) , (const, 0x7e, 1)
fix_ut_type_field, (unique, 0x1dc80, 1) INT_SUB (register, 0xc, 1) , (const, 0x7e, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab50, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x4, 4) INT_ZEXT (unique, 0x7900, 2)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804abb0, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x2c, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x7, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x804cbf0, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) COPY (register, 0x18, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa51, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa4f, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x14, 4) INT_SEXT (register, 0x4, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aba0, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (register, 0x18, 4) COPY (const, 0x2, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (register, 0x14, 4) COPY (const, 0x804cbe7, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x18, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x9, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (register, 0x14, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa85, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa83, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x18, 4) COPY (register, 0x4, 4)
fix_ut_type_field, (register, 0x4, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x0, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (register, 0x4, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (register, 0x4, 1)
fix_ut_type_field, (unique, 0x1e180, 1) INT_SUB (register, 0x0, 1) , (register, 0x4, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e180, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e180, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e180, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac00, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (register, 0xc, 4) COPY (const, 0x1, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0xc, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  RETURN (register, 0x284, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (const, 0x4, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x4, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x0, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804abc1, 4) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab20, 4) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x42380, 1) INT_AND (register, 0xc, 1) , (register, 0xc, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x18, 4) COPY (register, 0x4, 4)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x7f00, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x4, 4) INT_AND (register, 0x4, 4) , (register, 0x18, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x42380, 1) INT_AND (register, 0x4, 1) , (register, 0x4, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab0c, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x2c, 4)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804abe0, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (register, 0x0, 4) COPY (const, 0x8, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x0, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  RETURN (register, 0x284, 4)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x2c, 4)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
fix_ut_type_field, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aafd, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  RETURN (register, 0x284, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (const, 0x3, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x3, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x0, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aac5, 4)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x2c, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x7, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x804cbf0, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) COPY (register, 0x18, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) COPY (register, 0x18, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab67, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ab65, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x14, 4) INT_SEXT (register, 0x4, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac20, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x7900, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x7900, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (unique, 0x7900, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac80, 4) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x14, 4) COPY (const, 0x2, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x2, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x14, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aac5, 4)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x4, 4) INT_ZEXT (unique, 0x7900, 2)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aad6, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aad6, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x2c, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x14, 4) COPY (const, 0x804cbe7, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) COPY (register, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) COPY (register, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aa78, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x7, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x0, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x4, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
fix_ut_type_field, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
fix_ut_type_field,  ---  RETURN (register, 0x284, 4)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x0, 4) INT_ZEXT (unique, 0x7900, 2)
fix_ut_type_field, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (unique, 0x1d00, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (register, 0x4, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x42380, 1) INT_AND (register, 0xc, 1) , (register, 0xc, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x18, 4) COPY (register, 0x0, 4)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x7f00, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x4, 4) INT_AND (register, 0x4, 4) , (register, 0x18, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aaef, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x804cbe7, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x9, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac30, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac2e, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa2a, 4) , (unique, 0x7f00, 1)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x7900, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x7900, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
fix_ut_type_field, (unique, 0x1df80, 2) INT_SUB (unique, 0x7900, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1df80, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0xd900, 2) INT_AND (unique, 0x1df80, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 2)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804aa5c, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x1, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x7, 4)
fix_ut_type_field, (unique, 0x7880, 2) COPY (register, 0x1c, 2)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7880, 2)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x804cbf0, 4)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac66, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac64, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
fix_ut_type_field, (register, 0x4, 1) COPY (unique, 0x8180, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x14, 4) INT_SEXT (register, 0x4, 1)
fix_ut_type_field,  ---  BRANCH (ram, 0x804aa5c, 4)
fix_ut_type_field, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
fix_ut_type_field, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
fix_ut_type_field, (register, 0x18, 4) COPY (unique, 0x7980, 4)
fix_ut_type_field, (register, 0x1c, 4) COPY (const, 0x804cbe7, 4)
fix_ut_type_field, (register, 0x4, 4) COPY (const, 0x9, 4)
fix_ut_type_field, (register, 0x14, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x8c80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac92, 4) , (unique, 0x8c80, 1)
fix_ut_type_field, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
fix_ut_type_field, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
fix_ut_type_field, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
fix_ut_type_field, (unique, 0x5400, 4) COPY (register, 0x18, 4)
fix_ut_type_field, (unique, 0x5480, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
fix_ut_type_field, (unique, 0x5500, 4) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0x5580, 4) INT_MULT (const, 0x2, 4) , (unique, 0x5500, 4)
fix_ut_type_field, (register, 0x18, 4) INT_SUB (unique, 0x5480, 4) , (unique, 0x5580, 4)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (unique, 0x5680, 1) LOAD (const, 0x1a1, 4) , (unique, 0x5400, 4)
fix_ut_type_field, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
fix_ut_type_field, (unique, 0x1e880, 1) INT_SUB (unique, 0x5680, 1) , (unique, 0x6a00, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x1e880, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xd900, 1) INT_AND (unique, 0x1e880, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
fix_ut_type_field, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac90, 4) , (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x804ac47, 4) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
fix_ut_type_field,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
fix_ut_type_field,  ---  BRANCH (ram, 0x804abcd, 4)
bad_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
bad_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
bad_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
bad_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
bad_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
bad_utmp_record, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
bad_utmp_record, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
bad_utmp_record, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
bad_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
bad_utmp_record, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
bad_utmp_record, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
bad_utmp_record,  ---  RETURN (register, 0x284, 4)
exchange, (unique, 0x9780, 4) COPY (register, 0x14, 4)
exchange, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
exchange, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
exchange, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
exchange, (unique, 0x9780, 4) COPY (register, 0x18, 4)
exchange, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x20, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
exchange, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x24, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x0, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x8, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x4, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x0, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x0, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
exchange, (register, 0x18, 4) COPY (register, 0x18, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x7980, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
exchange,  ---  CBRANCH (ram, 0x804ad29, 4) , (unique, 0x8700, 1)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x0, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x0, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
exchange,  ---  CBRANCH (ram, 0x804ad29, 4) , (unique, 0x8700, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x7980, 4)
exchange, (register, 0x8, 4) COPY (register, 0x0, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
exchange, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x1c, 4)
exchange, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
exchange,  ---  CBRANCH (ram, 0x804ad50, 4) , (unique, 0x8900, 1)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
exchange,  ---  CBRANCH (ram, 0x804ad8d, 4) , (unique, 0x8700, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x18, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x2000, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x2000, 4)
exchange, (register, 0x18, 4) COPY (register, 0x18, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
exchange, (register, 0x18, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
exchange, (register, 0x14, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x14, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x18, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2000, 4) , (unique, 0x7980, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange,  ---  CBRANCH (ram, 0x804ad10, 4) , (unique, 0x7f00, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x7980, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x1c, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
exchange,  ---  CBRANCH (ram, 0x804ace0, 4) , (unique, 0x8900, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x7980, 4)
exchange, (register, 0x0, 4) COPY (register, 0x1c, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x24, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x1d00, 4) INT_ADD (register, 0x4, 4) , (const, 0x20, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x0, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
exchange, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
exchange, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
exchange, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
exchange, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
exchange, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
exchange, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
exchange, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
exchange,  ---  RETURN (register, 0x284, 4)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
exchange,  ---  CBRANCH (ram, 0x804ad85, 4) , (unique, 0x8700, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x18, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x1, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x8, 4) , (unique, 0x1f00, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x2000, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x8, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
exchange, (register, 0x14, 4) COPY (unique, 0x2000, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x4, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (unique, 0x7980, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
exchange, (register, 0x0, 4) COPY (unique, 0x2000, 4)
exchange, (register, 0x18, 4) COPY (register, 0x18, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
exchange, (register, 0x18, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
exchange, (register, 0x8, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x8, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x4, 4)
exchange, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
exchange, (unique, 0x7980, 4) COPY (register, 0x18, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2000, 4) , (unique, 0x7980, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x14, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x14, 4)
exchange, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x14, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange,  ---  CBRANCH (ram, 0x804ad70, 4) , (unique, 0x7f00, 1)
exchange, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
exchange, (register, 0x8, 4) COPY (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x8, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x8, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (unique, 0x7980, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x8, 4)
exchange,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
exchange, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
exchange, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange,  ---  BRANCH (ram, 0x804acd8, 4)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x4, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
exchange, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
exchange, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
exchange, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
exchange,  ---  BRANCH (ram, 0x804acd8, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x14, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804ada9, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048e40, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x5257, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x5257, 4)
_getopt_internal_r, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x5257, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x14, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b03e, 4) , (unique, 0x8700, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804af60, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x6c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b070, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b09d, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x2b, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x2b, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x2b, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b320, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 1) COPY (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (register, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x7980, 4) INT_AND (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afc0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afc0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804aec4, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2080, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2180, 4) INT_ADD (const, 0x0, 4) , (unique, 0x2080, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x2180, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x1c, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7780, 1) COPY (register, 0x0, 1)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7780, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b120, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804aec4, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b120, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804aeb9, 4)
_getopt_internal_r,  ---  CALL (ram, 0x80489f0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b120, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x18, 4) INT_SEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x8, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7780, 1) COPY (register, 0x8, 1)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7780, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804aee4, 4)
_getopt_internal_r,  ---  CALL (ram, 0x80489f0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b0b0, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x3a, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x3a, 4)
_getopt_internal_r, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x3a, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x1, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afa0, 4) , (unique, 0x8000, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afa0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x57, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x57, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x57, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b433, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afb4, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b60b, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5f7, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b77f, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804ade7, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffd5, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xfd, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804ae35, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804ae35, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b0f0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3f, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  RETURN (register, 0x284, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afcb, 4) , (unique, 0x8700, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e780, 4) INT_SUB (register, 0x8, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804afd3, 4) , (unique, 0x8580, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b2b0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b300, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b050, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b0c0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b0c0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b550, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b02d, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (register, 0x14, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b02a, 4)
_getopt_internal_r,  ---  CALL (ram, 0x804acb0, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b03e, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0xffffffff, 4)
_getopt_internal_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  RETURN (register, 0x284, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b03e, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  RETURN (register, 0x284, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd240, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b07f, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048970, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (register, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804ae18, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x2, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804ae27, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804aef4, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42380, 1) INT_AND (register, 0x4, 1) , (register, 0x4, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b050, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x4, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x4, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x8, 1) COPY (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r, (register, 0x4, 1) COPY (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0x1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804ae5c, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd26e, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b110, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afac, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x2f, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7780, 1) COPY (register, 0x0, 1)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7780, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b55a, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42380, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b55a, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x4, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b144, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42380, 1) INT_AND (register, 0x8, 1) , (register, 0x8, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b14f, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x8, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x3d, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b140, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b567, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0xffffffff, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x14, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b1c4, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b1b0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b290, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b210, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b1d5, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a80, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b1b8, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b1e5, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b3e0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b198, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b1c4, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x14, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b338, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b25c, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd250, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b24f, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b265, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3f, 4)
_getopt_internal_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  RETURN (register, 0x284, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b1b0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b1b0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b1b8, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b538, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b2ce, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (register, 0x14, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b2cb, 4)
_getopt_internal_r,  ---  CALL (ram, 0x804acb0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b310, 4) , (unique, 0x8700, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b2ea, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b310, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b2e0, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b2e0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b312, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b037, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afdd, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804ae27, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b567, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x4, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b3ec, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5c6, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b3bb, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b65a, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd2bc, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b3b5, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b3c4, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3f, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x14, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b34d, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5d3, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b403, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b41c, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b603, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x3b, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x3b, 1)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (register, 0x8, 1) , (const, 0x3b, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804af15, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b735, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7780, 1) COPY (register, 0x0, 1)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7780, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b8b8, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42380, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b474, 4) , (unique, 0x7f00, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b8b8, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42380, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b47e, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (unique, 0x7800, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (unique, 0x1d980, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1d980, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1d980, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b470, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7780, 1) COPY (register, 0x0, 1)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7780, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b87f, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x14, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b4f3, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b4db, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b6b0, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b6d0, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b504, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a80, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b4e3, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b514, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b7a4, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b4c3, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b4e3, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b2ce, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b2ce, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b02d, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b153, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b670, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5bb, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b767, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd334, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b5b1, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffcb36, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b26a, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b3f6, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b61c, 4) , (unique, 0x8700, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0x4, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2400, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b3f6, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804af4e, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5f7, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804af4e, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b7f8, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b635, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b27e, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3a, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd28c, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b3a5, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x2d, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b75b, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x37, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b68d, 4)
_getopt_internal_r,  ---  CALL (ram, 0x80489f0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804aec4, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b586, 4) , (unique, 0x7f00, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b5bb, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b4db, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b4db, 4) , (unique, 0x7f00, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b4e3, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x14, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b824, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b716, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd380, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b710, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3f, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b724, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b83c, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b450, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b5bb, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd314, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b5a1, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b890, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
_getopt_internal_r, (register, 0x0, 4) INT_ZEXT (register, 0x0, 1)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0x3a, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804af4e, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x14, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x14, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b8c1, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b9b8, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b98b, 4) , (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0xffffffff, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x3f, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (register, 0x8, 4)
_getopt_internal_r, (unique, 0x8e80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b7e8, 4) , (unique, 0x8e80, 1)
_getopt_internal_r, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
_getopt_internal_r, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
_getopt_internal_r, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (unique, 0x3d180, 1) INT_SUB (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x3d180, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8f80, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b7e6, 4) , (unique, 0x8f80, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x4, 4)
_getopt_internal_r, (register, 0x0, 4) INT_NEGATE (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0xffffffff, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd2ec, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b819, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b62c, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b87f, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x4, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b7b3, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b866, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd354, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b863, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0x3a, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r, (register, 0x18, 4) INT_SEXT (register, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (const, 0x57, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd354, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b8b0, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b78b, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b482, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b90c, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7a00, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0xffffffff, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8e80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b8d9, 4) , (unique, 0x8e80, 1)
_getopt_internal_r, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
_getopt_internal_r, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
_getopt_internal_r, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (unique, 0x3d180, 1) INT_SUB (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x3d180, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8f80, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b8d7, 4) , (unique, 0x8f80, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) COPY (register, 0x4, 4)
_getopt_internal_r, (register, 0x0, 4) INT_NEGATE (register, 0x0, 4)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0xffffffff, 4) , (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b8f8, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x0, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b927, 4) , (register, 0x206, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b427, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal_r, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b933, 4) , (unique, 0x8700, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x8, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
_getopt_internal_r, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b8ce, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x18, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804afb4, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (unique, 0x1e080, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b962, 4) , (register, 0x206, 1)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd3d4, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b95f, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
_getopt_internal_r, (register, 0x8, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal_r, (register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0xffffffff, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x1c, 4) COPY (register, 0x8, 4)
_getopt_internal_r, (unique, 0x8e80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b96e, 4) , (unique, 0x8e80, 1)
_getopt_internal_r, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6780, 4) COPY (register, 0x1c, 4)
_getopt_internal_r, (unique, 0x6800, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x6880, 4) INT_ZEXT (register, 0x20a, 1)
_getopt_internal_r, (unique, 0x6900, 4) INT_MULT (const, 0x2, 4) , (unique, 0x6880, 4)
_getopt_internal_r, (register, 0x1c, 4) INT_SUB (unique, 0x6800, 4) , (unique, 0x6900, 4)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (unique, 0x6a00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x6780, 4)
_getopt_internal_r, (unique, 0x3d180, 1) INT_SUB (register, 0x0, 1) , (unique, 0x6a00, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x3d180, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x3d180, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x8f80, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b96c, 4) , (unique, 0x8f80, 1)
_getopt_internal_r, (register, 0x18, 4) COPY (register, 0x4, 4)
_getopt_internal_r, (register, 0x18, 4) INT_NEGATE (register, 0x18, 4)
_getopt_internal_r, (unique, 0x2280, 4) INT_ADD (const, 0xffffffff, 4) , (register, 0x8, 4)
_getopt_internal_r, (unique, 0x2300, 4) INT_MULT (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x2400, 4)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x0, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x1dc80, 1) INT_SUB (unique, 0x7800, 1) , (const, 0x3a, 1)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal_r,  ---  CBRANCH (ram, 0x804b27e, 4) , (unique, 0x7f00, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b650, 4)
_getopt_internal_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd3a4, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff4, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_getopt_internal_r, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_internal_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
_getopt_internal_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_internal_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b9b0, 4)
_getopt_internal_r,  ---  CALL (ram, 0x8048a70, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b7d7, 4)
_getopt_internal_r, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
_getopt_internal_r, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
_getopt_internal_r, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
_getopt_internal_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_internal_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_internal_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_internal_r, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
_getopt_internal_r, (unique, 0x7980, 4) COPY (register, 0x18, 4)
_getopt_internal_r,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
_getopt_internal_r,  ---  BRANCH (ram, 0x804b8ce, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (register, 0xc, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804b9d7, 4)
rpl_getopt_internal,  ---  CALL (ram, 0x8048e40, 4)
rpl_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x4629, 4)
rpl_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x4629, 4)
rpl_getopt_internal, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4629, 4)
rpl_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_internal, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
rpl_getopt_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x220, 4)
rpl_getopt_internal, (register, 0x18, 4) COPY (unique, 0x1e00, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
rpl_getopt_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2a0, 4)
rpl_getopt_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1e00, 4) , (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x21c, 4)
rpl_getopt_internal, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
rpl_getopt_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2a4, 4)
rpl_getopt_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1e00, 4) , (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2a0, 4)
rpl_getopt_internal, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (register, 0x0, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804ba24, 4)
rpl_getopt_internal,  ---  CALL (ram, 0x804ada0, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2a0, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
rpl_getopt_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2ac, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
rpl_getopt_internal, (register, 0x4, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x7980, 4) COPY (register, 0x8, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2d8, 4)
rpl_getopt_internal, (register, 0x8, 4) COPY (unique, 0x1e00, 4)
rpl_getopt_internal, (unique, 0x7980, 4) COPY (register, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2a8, 4)
rpl_getopt_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
rpl_getopt_internal, (register, 0x4, 4) COPY (unique, 0x7980, 4)
rpl_getopt_internal, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x218, 4)
rpl_getopt_internal, (register, 0x8, 4) COPY (unique, 0x1e00, 4)
rpl_getopt_internal, (unique, 0x7980, 4) COPY (register, 0x4, 4)
rpl_getopt_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7980, 4)
rpl_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x24, 4)
rpl_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x24, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
rpl_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_internal, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_internal,  ---  RETURN (register, 0x284, 4)
rpl_getopt, (unique, 0x9780, 4) COPY (register, 0xc, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804ba56, 4)
rpl_getopt,  ---  CALL (ram, 0x8048e40, 4)
rpl_getopt, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x45aa, 4)
rpl_getopt, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x45aa, 4)
rpl_getopt, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x45aa, 4)
rpl_getopt, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
rpl_getopt, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804ba78, 4)
rpl_getopt,  ---  CALL (ram, 0x804b9d0, 4)
rpl_getopt, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt,  ---  RETURN (register, 0x284, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (register, 0xc, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804ba86, 4)
rpl_getopt_long,  ---  CALL (ram, 0x8048e40, 4)
rpl_getopt_long, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x457a, 4)
rpl_getopt_long, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x457a, 4)
rpl_getopt_long, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x457a, 4)
rpl_getopt_long, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_long, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_long, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
rpl_getopt_long, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_long, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt_long, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt_long, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804baac, 4)
rpl_getopt_long,  ---  CALL (ram, 0x804b9d0, 4)
rpl_getopt_long, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_long, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_long, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_long, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long,  ---  RETURN (register, 0x284, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bac6, 4)
_getopt_long_r,  ---  CALL (ram, 0x8048e40, 4)
_getopt_long_r, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x453a, 4)
_getopt_long_r, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x453a, 4)
_getopt_long_r, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x453a, 4)
_getopt_long_r, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_getopt_long_r, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_getopt_long_r, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_getopt_long_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_long_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_r, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804baf0, 4)
_getopt_long_r,  ---  CALL (ram, 0x804ada0, 4)
_getopt_long_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_long_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_long_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_long_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_r,  ---  RETURN (register, 0x284, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (register, 0xc, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bb06, 4)
rpl_getopt_long_only,  ---  CALL (ram, 0x8048e40, 4)
rpl_getopt_long_only, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x44fa, 4)
rpl_getopt_long_only, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x44fa, 4)
rpl_getopt_long_only, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x44fa, 4)
rpl_getopt_long_only, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
rpl_getopt_long_only, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long_only, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long_only, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long_only, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long_only, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
rpl_getopt_long_only, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_long_only, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long_only, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long_only, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long_only, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt_long_only, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
rpl_getopt_long_only, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long_only, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long_only, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long_only, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long_only, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
rpl_getopt_long_only, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_getopt_long_only, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bb2c, 4)
rpl_getopt_long_only,  ---  CALL (ram, 0x804b9d0, 4)
rpl_getopt_long_only, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long_only, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
rpl_getopt_long_only, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_getopt_long_only, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_getopt_long_only, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_getopt_long_only, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_getopt_long_only, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_getopt_long_only, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_getopt_long_only, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_getopt_long_only,  ---  RETURN (register, 0x284, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bb46, 4)
_getopt_long_only_r,  ---  CALL (ram, 0x8048e40, 4)
_getopt_long_only_r, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x44ba, 4)
_getopt_long_only_r, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x44ba, 4)
_getopt_long_only_r, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x44ba, 4)
_getopt_long_only_r, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_getopt_long_only_r, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_getopt_long_only_r, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_getopt_long_only_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_only_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_only_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_only_r, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_only_r, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_getopt_long_only_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_only_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_only_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_long_only_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_only_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_only_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_only_r, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (unique, 0x2f200, 4) COPY (const, 0x1, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
_getopt_long_only_r, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
_getopt_long_only_r, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bb70, 4)
_getopt_long_only_r,  ---  CALL (ram, 0x804ada0, 4)
_getopt_long_only_r, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_only_r, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
_getopt_long_only_r, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_only_r, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_long_only_r, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_long_only_r, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_getopt_long_only_r, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_getopt_long_only_r, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_getopt_long_only_r, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_getopt_long_only_r, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_getopt_long_only_r,  ---  RETURN (register, 0x284, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x14, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (register, 0x14, 4) COPY (register, 0x8, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x18, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x18, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x18, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x18, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) COPY (register, 0x0, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x8, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bb93, 4)
ranged_convert,  ---  CALLIND (register, 0x0, 4)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x18, 4) COPY (register, 0x0, 4)
ranged_convert,  ---  CBRANCH (ram, 0x804bba8, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x0, 4) COPY (register, 0x18, 4)
ranged_convert, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  RETURN (register, 0x284, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x4, 4) COPY (unique, 0x7980, 4)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bb9c, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x8, 4) COPY (register, 0x14, 4)
ranged_convert, (register, 0x14, 4) COPY (register, 0x4, 4)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bbf4, 4) , (register, 0x207, 1)
ranged_convert, (register, 0x18, 4) COPY (register, 0x18, 4)
ranged_convert, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
ranged_convert, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (unique, 0x1e380, 4) INT_SUB (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bc10, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x18, 4) COPY (register, 0x14, 4)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
ranged_convert, (unique, 0x3cb80, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)
ranged_convert, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x18, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x1, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x7980, 4) COPY (register, 0x18, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x7980, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x8, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (register, 0x0, 4) COPY (unique, 0x7980, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) COPY (register, 0x8, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bbe3, 4)
ranged_convert,  ---  CALLIND (register, 0x0, 4)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (register, 0x8, 4) COPY (unique, 0x7980, 4)
ranged_convert,  ---  CBRANCH (ram, 0x804bc08, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x1c, 4) COPY (register, 0x18, 4)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x8280, 1) BOOL_NEGATE (register, 0x207, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bbc0, 4) , (unique, 0x8280, 1)
ranged_convert, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
ranged_convert, (register, 0x18, 4) COPY (unique, 0x1d00, 4)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (unique, 0x1e380, 4) INT_SUB (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bc10, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x18, 4) COPY (register, 0x1c, 4)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
ranged_convert, (unique, 0x3cb80, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)
ranged_convert, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x18, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x1, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x14, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert,  ---  BRANCH (ram, 0x804bbcf, 4)
ranged_convert, (register, 0x14, 4) COPY (register, 0x18, 4)
ranged_convert, (register, 0x18, 4) COPY (register, 0x1c, 4)
ranged_convert, (register, 0x1c, 4) COPY (register, 0x18, 4)
ranged_convert,  ---  BRANCH (ram, 0x804bbf0, 4)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x14, 4) COPY (register, 0x8, 4)
ranged_convert, (register, 0x18, 4) COPY (register, 0x0, 4)
ranged_convert,  ---  CBRANCH (ram, 0x804bb9c, 4) , (register, 0x206, 1)
ranged_convert, (register, 0x200, 1) COPY (const, 0x0, 1)
ranged_convert, (register, 0x20b, 1) COPY (const, 0x0, 1)
ranged_convert, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
ranged_convert,  ---  CBRANCH (ram, 0x804bb9c, 4) , (unique, 0x7f00, 1)
ranged_convert, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x9780, 4) COPY (register, 0x14, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
ranged_convert, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
ranged_convert, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
ranged_convert, (register, 0x0, 4) COPY (unique, 0x7980, 4)
ranged_convert, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
ranged_convert,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bc2d, 4)
ranged_convert,  ---  CALLIND (register, 0x0, 4)
ranged_convert, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
ranged_convert, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
ranged_convert, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
ranged_convert, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
ranged_convert, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
ranged_convert, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
ranged_convert, (register, 0x18, 4) COPY (register, 0x0, 4)
ranged_convert,  ---  BRANCH (ram, 0x804bb9c, 4)
guess_time_tm, (unique, 0x9780, 4) COPY (register, 0x14, 4)
guess_time_tm, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
guess_time_tm, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
guess_time_tm, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
guess_time_tm, (unique, 0x9780, 4) COPY (register, 0x18, 4)
guess_time_tm, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x14, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) COPY (register, 0x8, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm,  ---  CBRANCH (ram, 0x804bd40, 4) , (register, 0x206, 1)
guess_time_tm, (register, 0x18, 4) COPY (register, 0x0, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) COPY (register, 0x18, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x8, 1) COPY (register, 0x206, 1)
guess_time_tm, (register, 0x1c, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x18, 4) COPY (register, 0x1c, 4)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x1c, 4)
guess_time_tm, (register, 0x1c, 4) INT_SRIGHT (register, 0x1c, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1db, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (unique, 0x42080, 1) INT_AND (unique, 0x7800, 1) , (const, 0x3, 1)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x42080, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x42080, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xd900, 1) INT_AND (unique, 0x42080, 1) , (const, 0xff, 1)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 1) COPY (register, 0x206, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (const, 0x51eb851f, 4)
guess_time_tm, (unique, 0x27580, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (unique, 0x27600, 8) INT_SEXT (register, 0x18, 4)
guess_time_tm, (unique, 0x27700, 8) INT_MULT (unique, 0x27580, 8) , (unique, 0x27600, 8)
guess_time_tm, (register, 0x8, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x4, 4)
guess_time_tm, (register, 0x0, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27700, 8)
guess_time_tm, (register, 0x20b, 1) COPY (register, 0x200, 1)
guess_time_tm, (register, 0x0, 4) COPY (register, 0x18, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x4, 4) COPY (register, 0x8, 4)
guess_time_tm, (register, 0x8, 4) COPY (register, 0x18, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x3, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x4, 4)
guess_time_tm, (register, 0x4, 4) INT_SRIGHT (register, 0x4, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x4, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (register, 0x8, 4)
guess_time_tm, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x41200, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x41180, 4)
guess_time_tm, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
guess_time_tm, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
guess_time_tm, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
guess_time_tm, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
guess_time_tm, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
guess_time_tm, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (const, 0x51eb851f, 4)
guess_time_tm, (unique, 0x27580, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (unique, 0x27600, 8) INT_SEXT (register, 0x1c, 4)
guess_time_tm, (unique, 0x27700, 8) INT_MULT (unique, 0x27580, 8) , (unique, 0x27600, 8)
guess_time_tm, (register, 0x8, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x4, 4)
guess_time_tm, (register, 0x0, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27700, 8)
guess_time_tm, (register, 0x20b, 1) COPY (register, 0x200, 1)
guess_time_tm, (register, 0x0, 4) COPY (register, 0x1c, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) COPY (register, 0x4, 4)
guess_time_tm,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x4, 4) COPY (register, 0x1c, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x3, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
guess_time_tm, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x8, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (register, 0x4, 4)
guess_time_tm, (register, 0x4, 4) COPY (register, 0x18, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x41200, 4) COPY (register, 0x0, 4)
guess_time_tm, (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x41180, 4)
guess_time_tm, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
guess_time_tm, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
guess_time_tm, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
guess_time_tm, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
guess_time_tm, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
guess_time_tm, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (register, 0x4, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x4, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (register, 0x1c, 4) COPY (register, 0x8, 4)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
guess_time_tm, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x4, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x4, 4)
guess_time_tm, (register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x4, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x3d000, 4) COPY (register, 0x4, 4)
guess_time_tm, (register, 0x4, 4) INT_SRIGHT (register, 0x4, 4) , (unique, 0x3cf80, 4)
guess_time_tm, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
guess_time_tm, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
guess_time_tm, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
guess_time_tm, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
guess_time_tm, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x18, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x28a00, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (unique, 0x28a80, 8) INT_SEXT (const, 0x16d, 4)
guess_time_tm, (unique, 0x28b80, 8) INT_MULT (unique, 0x28a00, 8) , (unique, 0x28a80, 8)
guess_time_tm, (register, 0x0, 4) SUBPIECE (unique, 0x28b80, 8) , (const, 0x0, 4)
guess_time_tm, (unique, 0x28d00, 4) SUBPIECE (unique, 0x28b80, 8) , (const, 0x4, 4)
guess_time_tm, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
guess_time_tm, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28b80, 8)
guess_time_tm, (register, 0x20b, 1) COPY (register, 0x200, 1)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
guess_time_tm, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x1c, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x8, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x8, 4)
guess_time_tm, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
guess_time_tm, (register, 0x8, 4) COPY (unique, 0x2000, 4)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (unique, 0x28300, 8) INT_SEXT (register, 0x8, 4)
guess_time_tm, (unique, 0x28380, 8) INT_SEXT (const, 0x3c, 4)
guess_time_tm, (unique, 0x28480, 8) INT_MULT (unique, 0x28300, 8) , (unique, 0x28380, 8)
guess_time_tm, (register, 0x8, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x0, 4)
guess_time_tm, (unique, 0x28600, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x4, 4)
guess_time_tm, (unique, 0xe880, 8) INT_SEXT (register, 0x8, 4)
guess_time_tm, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28480, 8)
guess_time_tm, (register, 0x20b, 1) COPY (register, 0x200, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x28300, 8) INT_SEXT (register, 0x8, 4)
guess_time_tm, (unique, 0x28380, 8) INT_SEXT (const, 0x3c, 4)
guess_time_tm, (unique, 0x28480, 8) INT_MULT (unique, 0x28300, 8) , (unique, 0x28380, 8)
guess_time_tm, (register, 0x8, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x0, 4)
guess_time_tm, (unique, 0x28600, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x4, 4)
guess_time_tm, (unique, 0xe880, 8) INT_SEXT (register, 0x8, 4)
guess_time_tm, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28480, 8)
guess_time_tm, (register, 0x20b, 1) COPY (register, 0x200, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
guess_time_tm, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (unique, 0x7980, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x3c00, 4)
guess_time_tm, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x3c00, 4)
guess_time_tm, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (unique, 0x1e780, 4) INT_SUB (register, 0x0, 4) , (unique, 0x3c00, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
guess_time_tm, (register, 0x4, 1) COPY (unique, 0x8580, 1)
guess_time_tm, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
guess_time_tm, (unique, 0x41200, 4) COPY (register, 0x8, 4)
guess_time_tm, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x41180, 4)
guess_time_tm, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
guess_time_tm, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
guess_time_tm, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
guess_time_tm, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
guess_time_tm, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
guess_time_tm, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
guess_time_tm, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
guess_time_tm, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
guess_time_tm, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
guess_time_tm, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
guess_time_tm, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
guess_time_tm, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
guess_time_tm, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
guess_time_tm, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
guess_time_tm, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
guess_time_tm, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
guess_time_tm, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
guess_time_tm, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
guess_time_tm, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
guess_time_tm, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
guess_time_tm, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x4, 1) , (register, 0x8, 1)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 1) , (register, 0x8, 1)
guess_time_tm, (unique, 0x1e180, 1) INT_SUB (register, 0x4, 1) , (register, 0x8, 1)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x1e180, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x1e180, 1) , (const, 0x0, 1)
guess_time_tm, (unique, 0xd900, 1) INT_AND (unique, 0x1e180, 1) , (const, 0xff, 1)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm,  ---  CBRANCH (ram, 0x804bd40, 4) , (register, 0x206, 1)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm,  ---  RETURN (register, 0x284, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (register, 0x200, 1) COPY (const, 0x0, 1)
guess_time_tm, (register, 0x20b, 1) COPY (const, 0x0, 1)
guess_time_tm, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm,  ---  CBRANCH (ram, 0x804bd68, 4) , (register, 0x207, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x7ffffffd, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x7ffffffd, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (unique, 0x1de80, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x7ffffffd, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x1de80, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x1de80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (unique, 0x1de80, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (const, 0x7fffffff, 4)
guess_time_tm, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
guess_time_tm, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
guess_time_tm,  ---  CBRANCH (ram, 0x804bd38, 4) , (unique, 0x8700, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
guess_time_tm, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
guess_time_tm,  ---  RETURN (register, 0x284, 4)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x200, 1) INT_LESS (unique, 0x7a00, 4) , (const, 0x80000002, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x20b, 1) INT_SBORROW (unique, 0x7a00, 4) , (const, 0x80000002, 4)
guess_time_tm, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (unique, 0x1de80, 4) INT_SUB (unique, 0x7a00, 4) , (const, 0x80000002, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (unique, 0x1de80, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (unique, 0x1de80, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (unique, 0x1de80, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm, (register, 0x0, 4) COPY (const, 0x80000000, 4)
guess_time_tm, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
guess_time_tm,  ---  CBRANCH (ram, 0x804bd38, 4) , (unique, 0x8580, 1)
guess_time_tm, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
guess_time_tm, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
guess_time_tm, (register, 0x0, 4) COPY (unique, 0x7980, 4)
guess_time_tm, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
guess_time_tm, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
guess_time_tm, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
guess_time_tm, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
guess_time_tm, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
guess_time_tm, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
guess_time_tm,  ---  BRANCH (ram, 0x804bd38, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x14, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0xc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804bd8b, 4)
mktime_internal,  ---  CALL (ram, 0x8048e40, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x4275, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x4275, 4)
mktime_internal, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4275, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xd4, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xd0, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xd8, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x4f80, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
mktime_internal, (unique, 0x5000, 4) LOAD (const, 0x1a1, 4) , (unique, 0x4f80, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x5000, 4)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xac, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2980, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x1c, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1d00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x8, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x4, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) COPY (const, 0x2aaaaaab, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x4, 4) INT_OR (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x27580, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x27600, 8) INT_SEXT (register, 0x8, 4)
mktime_internal, (unique, 0x27700, 8) INT_MULT (unique, 0x27580, 8) , (unique, 0x27600, 8)
mktime_internal, (register, 0x8, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x4, 4)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27700, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
mktime_internal, (unique, 0x3cb80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x4, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x4, 4) , (const, 0x2, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x0, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x4, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x3e580, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3e600, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x3e580, 4)
mktime_internal, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xfd80, 4) INT_SUB (unique, 0x3e580, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e600, 4) , (unique, 0xfd80, 4)
mktime_internal, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
mktime_internal, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
mktime_internal, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e580, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10280, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
mktime_internal, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
mktime_internal, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x18, 4) COPY (register, 0x4, 4)
mktime_internal, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x41200, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x18, 4) INT_RIGHT (register, 0x18, 4) , (unique, 0x41180, 4)
mktime_internal, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
mktime_internal, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
mktime_internal, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
mktime_internal, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
mktime_internal, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x8, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804be66, 4) , (unique, 0x7f00, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x8, 4) COPY (const, 0x51eb851f, 4)
mktime_internal, (unique, 0x27580, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x27600, 8) INT_SEXT (register, 0x8, 4)
mktime_internal, (unique, 0x27700, 8) INT_MULT (unique, 0x27580, 8) , (unique, 0x27600, 8)
mktime_internal, (register, 0x8, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x4, 4)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27700, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x1c, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x5, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x28300, 8) INT_SEXT (register, 0x8, 4)
mktime_internal, (unique, 0x28380, 8) INT_SEXT (const, 0x64, 4)
mktime_internal, (unique, 0x28480, 8) INT_MULT (unique, 0x28300, 8) , (unique, 0x28380, 8)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0x28600, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x4, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28480, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x8, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x8, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) COPY (const, 0x1, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c090, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2000, 4)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x18, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x18, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2700, 4) INT_ADD (const, 0xffffd400, 4) , (register, 0xc, 4)
mktime_internal, (unique, 0x2780, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)
mktime_internal, (unique, 0x2880, 4) INT_ADD (unique, 0x2700, 4) , (unique, 0x2780, 4)
mktime_internal, (unique, 0x7900, 2) LOAD (const, 0x1a1, 4) , (unique, 0x2880, 4)
mktime_internal, (register, 0x0, 4) INT_ZEXT (unique, 0x7900, 2)
mktime_internal, (unique, 0x2280, 4) INT_ADD (const, 0xffffffff, 4) , (register, 0x1c, 4)
mktime_internal, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2400, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804beb5, 4) , (register, 0x207, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3b, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3b, 4)
mktime_internal, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x3b, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7a00, 4) COPY (const, 0x3b, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7a00, 4)
mktime_internal, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c0c0, 4) , (unique, 0x8700, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (const, 0x51eb851f, 4)
mktime_internal, (register, 0x4, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x4, 4) INT_SRIGHT (register, 0x4, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x4, 4) , (const, 0x1db, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x4, 4) , (const, 0x1db, 4)
mktime_internal, (register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x1db, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x1c, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 1) COPY (register, 0x206, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x1c, 4) COPY (register, 0x4, 4)
mktime_internal, (unique, 0x27580, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x27600, 8) INT_SEXT (register, 0x8, 4)
mktime_internal, (unique, 0x27700, 8) INT_MULT (unique, 0x27580, 8) , (unique, 0x27600, 8)
mktime_internal, (register, 0x8, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x4, 4)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x27700, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x27700, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x4, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x3, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x8, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2000, 4)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x1c, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x41200, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x41180, 4)
mktime_internal, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
mktime_internal, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
mktime_internal, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
mktime_internal, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
mktime_internal, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffba, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x1d00, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x4, 4) INT_SUB (register, 0x4, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x28a00, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x28a80, 8) INT_SEXT (const, 0x16d, 4)
mktime_internal, (unique, 0x28b80, 8) INT_MULT (unique, 0x28a00, 8) , (unique, 0x28a80, 8)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x28b80, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0x28d00, 4) SUBPIECE (unique, 0x28b80, 8) , (const, 0x4, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28b80, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2700, 4) INT_ADD (const, 0xfffffe23, 4) , (register, 0x4, 4)
mktime_internal, (unique, 0x2780, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2880, 4) INT_ADD (unique, 0x2700, 4) , (unique, 0x2780, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2880, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2000, 4)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x8, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2000, 4)
mktime_internal, (unique, 0x28300, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x28380, 8) INT_SEXT (const, 0x3c, 4)
mktime_internal, (unique, 0x28480, 8) INT_MULT (unique, 0x28300, 8) , (unique, 0x28380, 8)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0x28600, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x4, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28480, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x28300, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (unique, 0x28380, 8) INT_SEXT (const, 0x3c, 4)
mktime_internal, (unique, 0x28480, 8) INT_MULT (unique, 0x28300, 8) , (unique, 0x28380, 8)
mktime_internal, (register, 0x0, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x0, 4)
mktime_internal, (unique, 0x28600, 4) SUBPIECE (unique, 0x28480, 8) , (const, 0x4, 4)
mktime_internal, (unique, 0xe880, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0xe880, 8) , (unique, 0x28480, 8)
mktime_internal, (register, 0x20b, 1) COPY (register, 0x200, 1)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x4, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
mktime_internal, (unique, 0x3cb80, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0xa, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x2280, 4) INT_ADD (const, 0xffffffdd, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x2300, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2400, 4) INT_ADD (unique, 0x2280, 4) , (unique, 0x2300, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2400, 4)
mktime_internal, (register, 0x0, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0xe, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x1c, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x14, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x4, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1a, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x4, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x4, 4) INT_SRIGHT (register, 0x4, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x8600, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0x8700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0x8600, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804bf92, 4) , (unique, 0x8700, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x4, 4) COPY (register, 0x1c, 4)
mktime_internal, (register, 0x4, 4) INT_NEGATE (register, 0x4, 4)
mktime_internal, (register, 0x0, 4) COPY (register, 0x4, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x3cf80, 4) INT_AND (const, 0x1a, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
mktime_internal, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
mktime_internal, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
mktime_internal, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
mktime_internal, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
mktime_internal, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1d680, 8) INT_SEXT (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) SUBPIECE (unique, 0x1d680, 8) , (const, 0x4, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x7980, 4) INT_ADD (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x15, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c068, 4) , (unique, 0x8900, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x18, 4) COPY (const, 0x6, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x14, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
mktime_internal, (register, 0x14, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x1c, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2500, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2500, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804bfec, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x14, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x14, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x14, 4) INT_SUB (register, 0x14, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c068, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x74, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x18, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c000, 4)
mktime_internal,  ---  CALL (ram, 0x804bb80, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c021, 4)
mktime_internal,  ---  CALL (ram, 0x804bc40, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c0d0, 4) , (register, 0x206, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x18, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804bfc8, 4) , (unique, 0x7f00, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (unique, 0x3c00, 4)
mktime_internal, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (unique, 0x3c00, 4)
mktime_internal, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x1e780, 4) INT_SUB (register, 0x1c, 4) , (unique, 0x3c00, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804bfc8, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x74, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c056, 4) , (register, 0x207, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x4, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c0a8, 4) , (register, 0x207, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x4, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x8, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x4, 1) , (register, 0x8, 1)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x4, 1) , (register, 0x8, 1)
mktime_internal, (unique, 0x1e180, 1) INT_SUB (register, 0x4, 1) , (register, 0x8, 1)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e180, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e180, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xd900, 1) INT_AND (unique, 0x1e180, 1) , (const, 0xff, 1)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804bfc8, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x18, 4) COPY (register, 0x1c, 4)
mktime_internal,  ---  BRANCH (ram, 0x804c1d5, 4)
mktime_internal, (register, 0x18, 4) COPY (const, 0xffffffff, 4)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xac, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x3900, 4) INT_ADD (register, 0x114, 4) , (const, 0x14, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x3900, 4)
mktime_internal, (register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c2bb, 4) , (unique, 0x7f00, 1)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xbc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  RETURN (register, 0x284, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x1e080, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 1) COPY (register, 0x206, 1)
mktime_internal,  ---  BRANCH (ram, 0x804be66, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x8, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (register, 0x8, 4) INT_ZEXT (register, 0x8, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804bfc8, 4) , (unique, 0x8900, 1)
mktime_internal,  ---  BRANCH (ram, 0x804c056, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804beb5, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x3c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x74, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x4, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x8, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x8, 4) INT_NEGATE (register, 0x8, 4)
mktime_internal, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x41200, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x41180, 4)
mktime_internal, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
mktime_internal, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
mktime_internal, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
mktime_internal, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
mktime_internal, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42380, 1) INT_AND (register, 0x0, 1) , (register, 0x8, 1)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c2a7, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x1c, 4) COPY (const, 0x92c70, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal,  ---  CBRANCH (ram, 0x804c2a7, 4) , (register, 0x207, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x14, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x0, 4) COPY (register, 0x18, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804c161, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x1c, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x8, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x8480, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c14f, 4) , (unique, 0x8480, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0x8c, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x2980, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c13f, 4)
mktime_internal,  ---  CALL (ram, 0x804bb80, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xa0, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c191, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x48, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0x92c70, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0x92c70, 4)
mktime_internal, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x92c70, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (const, 0x100dc400, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (const, 0x100dc400, 4)
mktime_internal, (unique, 0x1de80, 4) INT_SUB (register, 0x1c, 4) , (const, 0x100dc400, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1de80, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1de80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1de80, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c2b0, 4) , (register, 0x206, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x50, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x8, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x8580, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c11c, 4) , (unique, 0x8580, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0x8c, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x2980, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c185, 4)
mktime_internal,  ---  CALL (ram, 0x804bb80, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2980, 4) INT_ADD (const, 0xa0, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2980, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x14, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c118, 4) , (unique, 0x7f00, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c1b6, 4)
mktime_internal,  ---  CALL (ram, 0x804bc40, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c1ce, 4)
mktime_internal,  ---  CALL (ram, 0x804bb80, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x28, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0x7980, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x1c, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x2c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c255, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x4, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x0, 1) COPY (register, 0x206, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x3c, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x3c, 4)
mktime_internal, (unique, 0x1e080, 4) INT_SUB (register, 0x8, 4) , (const, 0x3c, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 1) COPY (register, 0x206, 1)
mktime_internal, (register, 0x8, 4) INT_ZEXT (register, 0x8, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x18, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x1c, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x8, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x1f00, 4) INT_MULT (register, 0x0, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x2000, 4) INT_ADD (register, 0x8, 4) , (unique, 0x1f00, 4)
mktime_internal, (register, 0x4, 4) COPY (unique, 0x2000, 4)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x4, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x8780, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal, (unique, 0x8800, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0x8900, 1) BOOL_AND (unique, 0x8780, 1) , (unique, 0x8800, 1)
mktime_internal, (register, 0x4, 1) COPY (unique, 0x8900, 1)
mktime_internal, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x41200, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x41180, 4)
mktime_internal, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
mktime_internal, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
mktime_internal, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
mktime_internal, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
mktime_internal, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x4, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x18, 4)
mktime_internal, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x8, 4) COPY (register, 0x1c, 4)
mktime_internal, (unique, 0x8480, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
mktime_internal, (register, 0x4, 1) COPY (unique, 0x8480, 1)
mktime_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
mktime_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
mktime_internal, (unique, 0x41200, 4) COPY (register, 0x8, 4)
mktime_internal, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x41180, 4)
mktime_internal, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
mktime_internal, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
mktime_internal, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
mktime_internal, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
mktime_internal, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
mktime_internal, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
mktime_internal, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
mktime_internal, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
mktime_internal, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
mktime_internal, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
mktime_internal, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
mktime_internal, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
mktime_internal, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
mktime_internal, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
mktime_internal, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
mktime_internal, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
mktime_internal, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
mktime_internal, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
mktime_internal, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
mktime_internal, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
mktime_internal, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
mktime_internal, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (register, 0x18, 4) COPY (register, 0x4, 4)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x8, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x2500, 4)
mktime_internal, (unique, 0x9780, 4) COPY (register, 0x0, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x24, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c23c, 4)
mktime_internal,  ---  CALLIND (register, 0x0, 4)
mktime_internal, (register, 0x4, 4) COPY (register, 0x18, 4)
mktime_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42380, 1) INT_AND (register, 0x4, 1) , (register, 0x4, 1)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42380, 1) , (const, 0x0, 1)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42380, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0xd900, 1) INT_AND (unique, 0x42380, 1) , (const, 0xff, 1)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c068, 4) , (unique, 0x7f00, 1)
mktime_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
mktime_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
mktime_internal, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
mktime_internal, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
mktime_internal, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
mktime_internal, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
mktime_internal, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
mktime_internal, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
mktime_internal,  ---  CBRANCH (ram, 0x804c068, 4) , (register, 0x206, 1)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x4c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x54, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (register, 0x14, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x58, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x5c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x60, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x64, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x68, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x14, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x6c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x70, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x1c, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x74, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x20, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x78, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x24, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x7c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x0, 4) COPY (unique, 0x7980, 4)
mktime_internal, (unique, 0x1d00, 4) INT_ADD (register, 0x14, 4) , (const, 0x28, 4)
mktime_internal, (unique, 0x7980, 4) COPY (register, 0x0, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 4) , (unique, 0x1d00, 4) , (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804c06d, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x3c, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x18, 4) COPY (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804c1d5, 4)
mktime_internal, (register, 0x18, 4) COPY (register, 0x0, 4)
mktime_internal, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
mktime_internal, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
mktime_internal, (register, 0x14, 4) COPY (unique, 0x7980, 4)
mktime_internal,  ---  BRANCH (ram, 0x804c1d5, 4)
mktime_internal, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
mktime_internal,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c2c0, 4)
mktime_internal,  ---  CALL (ram, 0x804c700, 4)
rpl_mktime, (unique, 0x9780, 4) COPY (register, 0xc, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c2c6, 4)
rpl_mktime,  ---  CALL (ram, 0x8048e40, 4)
rpl_mktime, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3d3a, 4)
rpl_mktime, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3d3a, 4)
rpl_mktime, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3d3a, 4)
rpl_mktime, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
rpl_mktime, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
rpl_mktime, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
rpl_mktime, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_mktime, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_mktime, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_mktime, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
rpl_mktime, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
rpl_mktime, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_mktime, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_mktime, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_mktime, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_mktime, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_mktime, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_mktime, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c8, 4)
rpl_mktime, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
rpl_mktime, (unique, 0x9780, 4) COPY (register, 0x0, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_mktime, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff8, 4)
rpl_mktime, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
rpl_mktime, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_mktime, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
rpl_mktime, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
rpl_mktime, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
rpl_mktime, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c2e5, 4)
rpl_mktime,  ---  CALL (ram, 0x804bd80, 4)
rpl_mktime, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x18, 4)
rpl_mktime, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x18, 4)
rpl_mktime, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
rpl_mktime, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
rpl_mktime, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
rpl_mktime, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
rpl_mktime, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
rpl_mktime, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
rpl_mktime, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
rpl_mktime, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_mktime, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
rpl_mktime, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
rpl_mktime,  ---  RETURN (register, 0x284, 4)
xmalloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmalloc, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c2f7, 4)
xmalloc,  ---  CALL (ram, 0x8048e40, 4)
xmalloc, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3d09, 4)
xmalloc, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3d09, 4)
xmalloc, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3d09, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xmalloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xmalloc, (register, 0x18, 4) COPY (unique, 0x7980, 4)
xmalloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c30a, 4)
xmalloc,  ---  CALL (ram, 0x8048990, 4)
xmalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xmalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xmalloc, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
xmalloc,  ---  CBRANCH (ram, 0x804c315, 4) , (unique, 0x7f00, 1)
xmalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xmalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xmalloc, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
xmalloc,  ---  CBRANCH (ram, 0x804c31b, 4) , (unique, 0x7f00, 1)
xmalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x4, 4)
xmalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x4, 4)
xmalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmalloc, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmalloc, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmalloc, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  RETURN (register, 0x284, 4)
xmalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c320, 4)
xmalloc,  ---  CALL (ram, 0x804c470, 4)
xrealloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xrealloc, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c327, 4)
xrealloc,  ---  CALL (ram, 0x8048e40, 4)
xrealloc, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3cd9, 4)
xrealloc, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3cd9, 4)
xrealloc, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3cd9, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xc, 4)
xrealloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xc, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xc, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xrealloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xrealloc, (register, 0x18, 4) COPY (unique, 0x7980, 4)
xrealloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xrealloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xrealloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xrealloc, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c33e, 4)
xrealloc,  ---  CALL (ram, 0x8048980, 4)
xrealloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
xrealloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
xrealloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xrealloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xrealloc, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
xrealloc,  ---  CBRANCH (ram, 0x804c349, 4) , (unique, 0x7f00, 1)
xrealloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xrealloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xrealloc, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
xrealloc,  ---  CBRANCH (ram, 0x804c34f, 4) , (unique, 0x7f00, 1)
xrealloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x4, 4)
xrealloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x4, 4)
xrealloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xrealloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xrealloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xrealloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xrealloc, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xrealloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xrealloc, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xrealloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xrealloc, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xrealloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  RETURN (register, 0x284, 4)
xrealloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xrealloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c354, 4)
xrealloc,  ---  CALL (ram, 0x804c470, 4)
x2realloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
x2realloc, (unique, 0x9780, 4) COPY (register, 0xc, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c367, 4)
x2realloc,  ---  CALL (ram, 0x8048e40, 4)
x2realloc, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3c99, 4)
x2realloc, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3c99, 4)
x2realloc, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3c99, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
x2realloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0x2500, 4) INT_ADD (const, 0x10, 4) , (register, 0x10, 4)
x2realloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
x2realloc, (register, 0x4, 4) COPY (unique, 0x7980, 4)
x2realloc, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
x2realloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
x2realloc, (register, 0x18, 4) COPY (unique, 0x7980, 4)
x2realloc, (register, 0x200, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (unique, 0x42580, 4) INT_AND (register, 0x4, 4) , (register, 0x4, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x18, 4)
x2realloc, (register, 0x0, 4) COPY (unique, 0x7980, 4)
x2realloc,  ---  CBRANCH (ram, 0x804c3a0, 4) , (register, 0x206, 1)
x2realloc, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xaaaaaaa9, 4)
x2realloc, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xaaaaaaa9, 4)
x2realloc, (unique, 0x1db80, 4) INT_SUB (register, 0x0, 4) , (const, 0xaaaaaaa9, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x1db80, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x1db80, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (unique, 0x1db80, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0x8080, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
x2realloc, (unique, 0x8180, 1) BOOL_NEGATE (unique, 0x8080, 1)
x2realloc,  ---  CBRANCH (ram, 0x804c3a8, 4) , (unique, 0x8180, 1)
x2realloc, (unique, 0x1d00, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
x2realloc, (register, 0x8, 4) COPY (unique, 0x1d00, 4)
x2realloc, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
x2realloc, (unique, 0x40d80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
x2realloc, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x40d80, 4) , (const, 0x0, 4)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
x2realloc, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
x2realloc, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
x2realloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0x7980, 4) COPY (register, 0x0, 4)
x2realloc,  ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (unique, 0x7980, 4)
x2realloc, (unique, 0x9780, 4) COPY (register, 0x0, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
x2realloc, (unique, 0x9780, 4) COPY (register, 0x4, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c398, 4)
x2realloc,  ---  CALL (ram, 0x804c320, 4)
x2realloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
x2realloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
x2realloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
x2realloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
x2realloc, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
x2realloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
x2realloc, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
x2realloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  RETURN (register, 0x284, 4)
x2realloc, (register, 0x200, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
x2realloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
x2realloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
x2realloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
x2realloc,  ---  CBRANCH (ram, 0x804c38c, 4) , (unique, 0x7f00, 1)
x2realloc, (register, 0x0, 1) COPY (const, 0x40, 1)
x2realloc,  ---  BRANCH (ram, 0x804c38c, 4)
x2realloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
x2realloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3ad, 4)
x2realloc,  ---  CALL (ram, 0x804c470, 4)
xzalloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xzalloc, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3b7, 4)
xzalloc,  ---  CALL (ram, 0x8048e40, 4)
xzalloc, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3c49, 4)
xzalloc, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3c49, 4)
xzalloc, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3c49, 4)
xzalloc, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xzalloc, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xzalloc, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xzalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xzalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xzalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xzalloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
xzalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
xzalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xzalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xzalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xzalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xzalloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xzalloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xzalloc, (register, 0x18, 4) COPY (unique, 0x7980, 4)
xzalloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3ca, 4)
xzalloc,  ---  CALL (ram, 0x804c2f0, 4)
xzalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
xzalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
xzalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
xzalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xzalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xzalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xzalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xzalloc, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xzalloc, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
xzalloc, (unique, 0x9780, 4) COPY (register, 0x0, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xzalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3d6, 4)
xzalloc,  ---  CALL (ram, 0x8048a20, 4)
xzalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
xzalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
xzalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
xzalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xzalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xzalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xzalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xzalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xzalloc, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xzalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xzalloc, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xzalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xzalloc, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xzalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xzalloc,  ---  RETURN (register, 0x284, 4)
xcalloc, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3e6, 4)
xcalloc,  ---  CALL (ram, 0x8048e40, 4)
xcalloc, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3c1a, 4)
xcalloc, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3c1a, 4)
xcalloc, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3c1a, 4)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xcalloc, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xcalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xcalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xcalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xcalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xcalloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xcalloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xcalloc, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xcalloc, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xcalloc, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xcalloc, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c3fc, 4)
xcalloc,  ---  CALL (ram, 0x8048ad0, 4)
xcalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xcalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xcalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xcalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xcalloc, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
xcalloc, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
xcalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
xcalloc, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
xcalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xcalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xcalloc,  ---  CBRANCH (ram, 0x804c408, 4) , (register, 0x206, 1)
xcalloc, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
xcalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
xcalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xcalloc, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xcalloc, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xcalloc, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xcalloc, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xcalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xcalloc, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xcalloc, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  RETURN (register, 0x284, 4)
xcalloc, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xcalloc,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c40d, 4)
xcalloc,  ---  CALL (ram, 0x804c470, 4)
xmemdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c417, 4)
xmemdup,  ---  CALL (ram, 0x8048e40, 4)
xmemdup, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3be9, 4)
xmemdup, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3be9, 4)
xmemdup, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3be9, 4)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xmemdup, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xmemdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmemdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmemdup, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
xmemdup, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmemdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmemdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmemdup, (unique, 0x2500, 4) INT_ADD (const, 0x20, 4) , (register, 0x10, 4)
xmemdup, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xmemdup, (register, 0x18, 4) COPY (unique, 0x7980, 4)
xmemdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c42a, 4)
xmemdup,  ---  CALL (ram, 0x804c2f0, 4)
xmemdup, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0xc, 4)
xmemdup, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0xc, 4)
xmemdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmemdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmemdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmemdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
xmemdup, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xmemdup, (unique, 0x9780, 4) COPY (unique, 0x7980, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (unique, 0x9780, 4) COPY (register, 0x0, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xmemdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c438, 4)
xmemdup,  ---  CALL (ram, 0x80488b0, 4)
xmemdup, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
xmemdup, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
xmemdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xmemdup, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xmemdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xmemdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xmemdup, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmemdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmemdup, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmemdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmemdup, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xmemdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xmemdup,  ---  RETURN (register, 0x284, 4)
xstrdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xstrdup, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c447, 4)
xstrdup,  ---  CALL (ram, 0x8048e40, 4)
xstrdup, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3bb9, 4)
xstrdup, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3bb9, 4)
xstrdup, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3bb9, 4)
xstrdup, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xstrdup, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xstrdup, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xstrdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xstrdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xstrdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xstrdup, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
xstrdup, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
xstrdup, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xstrdup, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xstrdup, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xstrdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xstrdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xstrdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xstrdup, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
xstrdup, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
xstrdup, (register, 0x18, 4) COPY (unique, 0x7980, 4)
xstrdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c45a, 4)
xstrdup,  ---  CALL (ram, 0x8048a00, 4)
xstrdup, (register, 0x8, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xstrdup, (register, 0x4, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xstrdup, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
xstrdup, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
xstrdup, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
xstrdup, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
xstrdup, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
xstrdup, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
xstrdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xstrdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xstrdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xstrdup, (unique, 0x9780, 4) COPY (register, 0x0, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xstrdup, (unique, 0x9780, 4) COPY (register, 0x18, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xstrdup, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c466, 4)
xstrdup,  ---  CALL (ram, 0x804c410, 4)
xstrdup, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x14, 4)
xstrdup, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x14, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
xstrdup, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xstrdup, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xstrdup, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xstrdup, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xstrdup, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xstrdup, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xstrdup, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xstrdup, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xstrdup, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
xstrdup, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
xstrdup,  ---  RETURN (register, 0x284, 4)
xalloc_die, (unique, 0x9780, 4) COPY (register, 0xc, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c476, 4)
xalloc_die,  ---  CALL (ram, 0x8048e40, 4)
xalloc_die, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3b8a, 4)
xalloc_die, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3b8a, 4)
xalloc_die, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3b8a, 4)
xalloc_die, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
xalloc_die, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
xalloc_die, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
xalloc_die, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xalloc_die, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xalloc_die, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xalloc_die, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
xalloc_die, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
xalloc_die, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
xalloc_die, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
xalloc_die, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
xalloc_die, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
xalloc_die, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
xalloc_die, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
xalloc_die, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0x224, 4)
xalloc_die, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
xalloc_die, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffd434, 4)
xalloc_die, (register, 0x8, 4) COPY (unique, 0x1e00, 4)
xalloc_die, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
xalloc_die, (register, 0x0, 4) COPY (unique, 0x7980, 4)
xalloc_die, (unique, 0x9780, 4) COPY (register, 0x8, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xalloc_die, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffcc21, 4)
xalloc_die, (register, 0x8, 4) COPY (unique, 0x1e00, 4)
xalloc_die, (unique, 0x9780, 4) COPY (register, 0x8, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xalloc_die, (unique, 0x2f200, 4) COPY (const, 0x0, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f200, 4)
xalloc_die, (unique, 0x9780, 4) COPY (register, 0x0, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c49d, 4)
xalloc_die,  ---  CALL (ram, 0x8048960, 4)
xalloc_die, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
xalloc_die,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c4a2, 4)
xalloc_die,  ---  CALL (ram, 0x8048a90, 4)
__divdi3, (unique, 0x9780, 4) COPY (register, 0x14, 4)
__divdi3, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__divdi3,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__divdi3, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
__divdi3, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__divdi3,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__divdi3, (unique, 0x9780, 4) COPY (register, 0x18, 4)
__divdi3, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__divdi3,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x0, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x14, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x3c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x14, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x14, 4) INT_XOR (register, 0x14, 4) , (register, 0x14, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x18, 4) COPY (register, 0x4, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3,  ---  CBRANCH (ram, 0x804c5d0, 4) , (register, 0x207, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x0, 4) COPY (register, 0x1c, 4)
__divdi3, (register, 0x8, 4) COPY (register, 0x4, 4)
__divdi3,  ---  CBRANCH (ram, 0x804c5c0, 4) , (register, 0x207, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x18, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x18, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x18, 4) COPY (register, 0x1c, 4)
__divdi3, (register, 0x1c, 4) COPY (register, 0x0, 4)
__divdi3, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c520, 4) , (unique, 0x7f00, 1)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c590, 4) , (unique, 0x8000, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) COPY (unique, 0x7980, 4)
__divdi3, (register, 0x8, 4) COPY (register, 0x18, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
__divdi3, (register, 0x0, 4) COPY (register, 0x4, 4)
__divdi3, (unique, 0x22f80, 8) INT_ZEXT (register, 0x1c, 4)
__divdi3, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
__divdi3, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
__divdi3, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
__divdi3, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
__divdi3, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
__divdi3, (register, 0x4, 4) COPY (register, 0x0, 4)
__divdi3,  ---  BRANCH (ram, 0x804c52e, 4)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c568, 4) , (unique, 0x8000, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (register, 0x4, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x42580, 4) INT_AND (register, 0x14, 4) , (register, 0x14, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__divdi3, (register, 0x0, 1) COPY (unique, 0x7f00, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x1c, 4) COPY (register, 0x0, 4)
__divdi3, (register, 0x14, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x1c, 4)
__divdi3, (register, 0x1c, 4) INT_2COMP (register, 0x1c, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
__divdi3, (register, 0x200, 1) INT_CARRY (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xcf80, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
__divdi3, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
__divdi3, (register, 0x14, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x1c, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x14, 4)
__divdi3, (register, 0x14, 4) INT_2COMP (register, 0x14, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x14, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x18, 4) COPY (register, 0x4, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x18, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
__divdi3, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x4, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x4, 4)
__divdi3, (unique, 0xcf80, 4) INT_ADD (register, 0x8, 4) , (register, 0x4, 4)
__divdi3, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
__divdi3, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
__divdi3, (register, 0x8, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__divdi3, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__divdi3, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__divdi3, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__divdi3, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__divdi3, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__divdi3, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__divdi3, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__divdi3,  ---  RETURN (register, 0x284, 4)
__divdi3, (unique, 0x15a00, 4) COPY (const, 0x1f, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x15b00, 1) INT_EQUAL (register, 0x206, 1) , (const, 0x1, 1)
__divdi3,  ---  CBRANCH (const, 0x6, 4) , (unique, 0x15b00, 1)
__divdi3, (unique, 0x15b80, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x15a00, 4)
__divdi3, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b80, 4) , (const, 0x0, 4)
__divdi3,  ---  CBRANCH (const, 0x3, 4) , (unique, 0x15c00, 1)
__divdi3, (unique, 0x15a00, 4) INT_SUB (unique, 0x15a00, 4) , (const, 0x1, 4)
__divdi3,  ---  BRANCH (const, 0xfffffffc, 4)
__divdi3, (register, 0x0, 4) COPY (unique, 0x15a00, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (const, 0x1f, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c5f0, 4) , (unique, 0x7f00, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x200, 1) INT_LESS (unique, 0x7980, 4) , (register, 0x1c, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (unique, 0x7980, 4) , (register, 0x1c, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (unique, 0x7980, 4) , (register, 0x1c, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c584, 4) , (unique, 0x8000, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x4, 4) INT_XOR (register, 0x4, 4) , (register, 0x4, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x7e00, 1) BOOL_NEGATE (register, 0x200, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c52e, 4) , (unique, 0x7e00, 1)
__divdi3, (register, 0x4, 4) COPY (const, 0x1, 4)
__divdi3,  ---  BRANCH (ram, 0x804c52e, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c59f, 4) , (unique, 0x7f00, 1)
__divdi3, (register, 0x0, 4) COPY (const, 0x1, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x22f80, 8) INT_ZEXT (register, 0x1c, 4)
__divdi3, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
__divdi3, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
__divdi3, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
__divdi3, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
__divdi3, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
__divdi3, (register, 0x1c, 4) COPY (register, 0x0, 4)
__divdi3, (register, 0x0, 4) COPY (register, 0x18, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x22f80, 8) INT_ZEXT (register, 0x1c, 4)
__divdi3, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
__divdi3, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
__divdi3, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
__divdi3, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
__divdi3, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
__divdi3, (register, 0x18, 4) COPY (register, 0x0, 4)
__divdi3, (register, 0x0, 4) COPY (register, 0x4, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x18, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x22f80, 8) INT_ZEXT (register, 0x1c, 4)
__divdi3, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
__divdi3, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
__divdi3, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
__divdi3, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
__divdi3, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
__divdi3, (register, 0x4, 4) COPY (register, 0x0, 4)
__divdi3,  ---  BRANCH (ram, 0x804c52e, 4)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x0, 4)
__divdi3, (register, 0x0, 4) INT_2COMP (register, 0x0, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x14, 4) INT_NEGATE (register, 0x14, 4)
__divdi3, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
__divdi3, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xcf80, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
__divdi3, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
__divdi3, (register, 0x8, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x8, 4)
__divdi3, (register, 0x8, 4) INT_2COMP (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3,  ---  BRANCH (ram, 0x804c4e6, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x7980, 4) INT_2COMP (unique, 0x7980, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x14, 4) COPY (const, 0xffffffff, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0xcd80, 4) INT_ZEXT (register, 0x200, 1)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x200, 1) INT_CARRY (unique, 0x7a00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x20b, 1) INT_SCARRY (unique, 0x7a00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0xcf80, 4) INT_ADD (unique, 0x7a00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd000, 1) INT_CARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xd000, 1)
__divdi3, (unique, 0xd100, 1) INT_SCARRY (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0xd100, 1)
__divdi3, (unique, 0x7a00, 4) INT_ADD (unique, 0xcf80, 4) , (unique, 0xcd80, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x7a00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x7a00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7a00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x7a00, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0xc, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x7980, 4) INT_2COMP (unique, 0x7980, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x7980, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x7980, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3,  ---  BRANCH (ram, 0x804c4da, 4)
__divdi3, (register, 0x1c, 4) COPY (register, 0x8, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x8, 4) COPY (unique, 0x7980, 4)
__divdi3, (register, 0x0, 4) COPY (const, 0x20, 4)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
__divdi3, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x8, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x8, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x3e380, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x3e400, 4) COPY (register, 0x1c, 4)
__divdi3, (register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x3e380, 1)
__divdi3, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xfd80, 1) INT_SUB (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e400, 4) , (unique, 0xfd80, 1)
__divdi3, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
__divdi3, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
__divdi3, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10280, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
__divdi3, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
__divdi3, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x0, 4)
__divdi3, (unique, 0x40f80, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x41000, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x40f80, 1)
__divdi3, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x10e80, 1) INT_SUB (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41000, 4) , (unique, 0x10e80, 1)
__divdi3, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
__divdi3, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
__divdi3, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
__divdi3, (unique, 0x11380, 1) INT_EQUAL (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x11480, 1) INT_SLESS (unique, 0x41000, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
__divdi3, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x8, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x8, 4) COPY (unique, 0x7980, 4)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x4, 4) INT_OR (register, 0x4, 4) , (register, 0x1c, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x4, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x4, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x4, 4) COPY (register, 0x1c, 4)
__divdi3, (unique, 0x3e380, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x3e400, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x3e380, 1)
__divdi3, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xfd80, 1) INT_SUB (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e400, 4) , (unique, 0xfd80, 1)
__divdi3, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
__divdi3, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
__divdi3, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10280, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
__divdi3, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
__divdi3, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x0, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x8, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3, (register, 0x8, 4) COPY (register, 0x18, 4)
__divdi3, (unique, 0x40f80, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x41000, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x40f80, 1)
__divdi3, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x10e80, 1) INT_SUB (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41000, 4) , (unique, 0x10e80, 1)
__divdi3, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
__divdi3, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
__divdi3, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
__divdi3, (unique, 0x11380, 1) INT_EQUAL (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x11480, 1) INT_SLESS (unique, 0x41000, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
__divdi3, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x1c, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x1c, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x3e380, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x3e400, 4) COPY (register, 0x18, 4)
__divdi3, (register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (unique, 0x3e380, 1)
__divdi3, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xfd80, 1) INT_SUB (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e400, 4) , (unique, 0xfd80, 1)
__divdi3, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
__divdi3, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
__divdi3, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10280, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
__divdi3, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
__divdi3, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x0, 4)
__divdi3, (unique, 0x40f80, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x41000, 4) COPY (register, 0x1c, 4)
__divdi3, (register, 0x1c, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x40f80, 1)
__divdi3, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x10e80, 1) INT_SUB (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41000, 4) , (unique, 0x10e80, 1)
__divdi3, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
__divdi3, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
__divdi3, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
__divdi3, (unique, 0x11380, 1) INT_EQUAL (unique, 0x40f80, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x11480, 1) INT_SLESS (unique, 0x41000, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
__divdi3, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x40f80, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x200, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x20b, 1) COPY (const, 0x0, 1)
__divdi3, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (register, 0x1c, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (register, 0x0, 4) COPY (register, 0x18, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x22f80, 8) INT_ZEXT (unique, 0x7980, 4)
__divdi3, (unique, 0x23000, 8) INT_ZEXT (register, 0x8, 4)
__divdi3, (unique, 0x23080, 8) INT_LEFT (unique, 0x23000, 8) , (const, 0x20, 4)
__divdi3, (unique, 0x23100, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x23200, 8) INT_OR (unique, 0x23080, 8) , (unique, 0x23100, 8)
__divdi3, (unique, 0x23300, 8) INT_DIV (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x23300, 8) , (const, 0x0, 4)
__divdi3, (unique, 0x23480, 8) INT_REM (unique, 0x23200, 8) , (unique, 0x22f80, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x23480, 8) , (const, 0x0, 4)
__divdi3, (register, 0x18, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x1c, 4) COPY (register, 0x0, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x18, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x2e000, 8) INT_ZEXT (register, 0x0, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x2e080, 8) INT_ZEXT (unique, 0x7980, 4)
__divdi3, (unique, 0x2e180, 8) INT_MULT (unique, 0x2e000, 8) , (unique, 0x2e080, 8)
__divdi3, (register, 0x8, 4) SUBPIECE (unique, 0x2e180, 8) , (const, 0x4, 4)
__divdi3, (register, 0x200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (register, 0x20b, 1) COPY (register, 0x200, 1)
__divdi3, (register, 0x0, 4) SUBPIECE (unique, 0x2e180, 8) , (const, 0x0, 4)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x8, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x8, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (register, 0x18, 4) , (register, 0x8, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) COPY (register, 0x8, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__divdi3,  ---  CBRANCH (ram, 0x804c670, 4) , (register, 0x200, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x4, 4) INT_ZEXT (unique, 0x7800, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x1c, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x8, 4) COPY (unique, 0x7980, 4)
__divdi3, (unique, 0x3e380, 1) INT_AND (register, 0x4, 1) , (const, 0x1f, 1)
__divdi3, (unique, 0x3e400, 4) COPY (register, 0x8, 4)
__divdi3, (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x3e380, 1)
__divdi3, (unique, 0xfd00, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xfd80, 1) INT_SUB (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xfe00, 4) INT_LEFT (unique, 0x3e400, 4) , (unique, 0xfd80, 1)
__divdi3, (unique, 0xff00, 1) INT_SLESS (unique, 0xfe00, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xff80, 1) BOOL_NEGATE (unique, 0xfd00, 1)
__divdi3, (unique, 0x10000, 1) INT_AND (unique, 0xff80, 1) , (register, 0x200, 1)
__divdi3, (unique, 0x10080, 1) INT_AND (unique, 0xfd00, 1) , (unique, 0xff00, 1)
__divdi3, (register, 0x200, 1) INT_OR (unique, 0x10000, 1) , (unique, 0x10080, 1)
__divdi3, (unique, 0x10200, 1) INT_EQUAL (unique, 0x3e380, 1) , (const, 0x1, 1)
__divdi3, (unique, 0x10280, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0x10380, 1) INT_XOR (register, 0x200, 1) , (unique, 0x10280, 1)
__divdi3, (unique, 0x10400, 1) BOOL_NEGATE (unique, 0x10200, 1)
__divdi3, (unique, 0x10480, 1) INT_AND (unique, 0x10400, 1) , (register, 0x20b, 1)
__divdi3, (unique, 0x10500, 1) INT_AND (unique, 0x10200, 1) , (unique, 0x10380, 1)
__divdi3, (register, 0x20b, 1) INT_OR (unique, 0x10480, 1) , (unique, 0x10500, 1)
__divdi3, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3e380, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__divdi3, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__divdi3, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__divdi3, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__divdi3, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__divdi3, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__divdi3, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__divdi3, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__divdi3, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__divdi3, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__divdi3, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__divdi3, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__divdi3, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
__divdi3, (unique, 0x1e380, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3, (unique, 0x7e00, 1) BOOL_NEGATE (register, 0x200, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c660, 4) , (unique, 0x7e00, 1)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (unique, 0x3c00, 4)
__divdi3, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (unique, 0x3c00, 4)
__divdi3, (unique, 0x3c00, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__divdi3, (unique, 0x1e780, 4) INT_SUB (register, 0x18, 4) , (unique, 0x3c00, 4)
__divdi3, (register, 0x207, 1) INT_SLESS (unique, 0x1e780, 4) , (const, 0x0, 4)
__divdi3, (register, 0x206, 1) INT_EQUAL (unique, 0x1e780, 4) , (const, 0x0, 4)
__divdi3, (unique, 0xd900, 4) INT_AND (unique, 0x1e780, 4) , (const, 0xff, 4)
__divdi3, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__divdi3, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__divdi3, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__divdi3,  ---  CBRANCH (ram, 0x804c670, 4) , (register, 0x206, 1)
__divdi3, (register, 0x4, 4) COPY (register, 0x1c, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
__divdi3,  ---  BRANCH (ram, 0x804c52e, 4)
__divdi3, (unique, 0x1d00, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
__divdi3, (register, 0x4, 4) COPY (unique, 0x1d00, 4)
__divdi3, (unique, 0x2500, 4) INT_ADD (const, 0x14, 4) , (register, 0x10, 4)
__divdi3, (unique, 0x7a00, 4) COPY (const, 0x0, 4)
__divdi3,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7a00, 4)
__divdi3,  ---  BRANCH (ram, 0x804c52e, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x14, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (register, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x18, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0xc, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c68b, 4)
__libc_csu_init,  ---  CALL (ram, 0x8048e40, 4)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x3975, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x3975, 4)
__libc_csu_init, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x3975, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x14, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffff04, 4)
__libc_csu_init, (register, 0x18, 4) COPY (unique, 0x1e00, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c6a3, 4)
__libc_csu_init,  ---  CALL (ram, 0x804885c, 4)
__libc_csu_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffff00, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x3d000, 4) COPY (register, 0x18, 4)
__libc_csu_init, (register, 0x18, 4) INT_SRIGHT (register, 0x18, 4) , (unique, 0x3cf80, 4)
__libc_csu_init, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
__libc_csu_init, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
__libc_csu_init, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
__libc_csu_init, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
__libc_csu_init, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
__libc_csu_init, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
__libc_csu_init, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
__libc_csu_init, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xdc80, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__libc_csu_init, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__libc_csu_init, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__libc_csu_init, (unique, 0xdf80, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__libc_csu_init, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__libc_csu_init, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__libc_csu_init, (unique, 0xe200, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__libc_csu_init, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__libc_csu_init, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__libc_csu_init, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__libc_csu_init, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x804c6d9, 4) , (register, 0x206, 1)
__libc_csu_init, (register, 0x18, 4) COPY (register, 0x18, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x14, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2700, 4) INT_ADD (const, 0xffffff00, 4) , (register, 0xc, 4)
__libc_csu_init, (unique, 0x2780, 4) INT_MULT (register, 0x1c, 4) , (const, 0x4, 4)
__libc_csu_init, (unique, 0x2880, 4) INT_ADD (unique, 0x2700, 4) , (unique, 0x2780, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c6d2, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2880, 4)
__libc_csu_init,  ---  CALLIND (unique, 0x7980, 4)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x804c6b8, 4) , (unique, 0x7f00, 1)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  RETURN (register, 0x284, 4)
__libc_csu_fini, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_fini,  ---  RETURN (register, 0x284, 4)
__stack_chk_fail_local, (unique, 0x9780, 4) COPY (register, 0xc, 4)
__stack_chk_fail_local, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__stack_chk_fail_local,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__stack_chk_fail_local, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__stack_chk_fail_local,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c706, 4)
__stack_chk_fail_local,  ---  CALL (ram, 0x8048e40, 4)
__stack_chk_fail_local, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x38fa, 4)
__stack_chk_fail_local, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x38fa, 4)
__stack_chk_fail_local, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x38fa, 4)
__stack_chk_fail_local, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
__stack_chk_fail_local, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
__stack_chk_fail_local, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
__stack_chk_fail_local, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__stack_chk_fail_local, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__stack_chk_fail_local, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__stack_chk_fail_local, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
__stack_chk_fail_local, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
__stack_chk_fail_local, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
__stack_chk_fail_local, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__stack_chk_fail_local, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__stack_chk_fail_local, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__stack_chk_fail_local, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__stack_chk_fail_local, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__stack_chk_fail_local, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__stack_chk_fail_local, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__stack_chk_fail_local,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c714, 4)
__stack_chk_fail_local,  ---  CALL (ram, 0x8048900, 4)
_fini, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_fini, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804c71d, 4)
_fini,  ---  CALL (ram, 0x8048e40, 4)
_fini, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x38e3, 4)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x38e3, 4)
_fini, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x38e3, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_fini, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  RETURN (register, 0x284, 4)
