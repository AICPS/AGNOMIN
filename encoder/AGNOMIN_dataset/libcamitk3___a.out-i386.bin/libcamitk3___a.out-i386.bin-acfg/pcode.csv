_init, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804827d, 4)
_init,  ---  CALL (ram, 0x8048330, 4)
_init, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x147f, 4)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x147f, 4)
_init, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x147f, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)
_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
_init, (register, 0x200, 1) COPY (const, 0x0, 1)
_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
_init, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_init, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init,  ---  CBRANCH (ram, 0x8048292, 4) , (register, 0x206, 1)
_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048292, 4)
_init,  ---  CALL (ram, 0x80482b0, 4)
_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_init, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_init,  ---  RETURN (register, 0x284, 4)
FUN_080482a0, (unique, 0x9780, 4) COPY (ram, 0x8049700, 4)
FUN_080482a0, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
FUN_080482a0,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
FUN_080482a0,  ---  BRANCHIND (ram, 0x8049704, 4)
__gmon_start__,  ---  BRANCHIND (ram, 0x8049708, 4)
__libc_start_main,  ---  BRANCHIND (ram, 0x804970c, 4)
main, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
main, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
main, (register, 0x8, 4) COPY (unique, 0x7980, 4)
main, (register, 0x0, 4) COPY (ram, 0x8049724, 4)
main, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
main, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
main, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
main, (register, 0x4, 4) INT_SEXT (unique, 0x7800, 1)
main, (register, 0x0, 4) COPY (ram, 0x8049720, 4)
main, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
main, (unique, 0x2000, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1f00, 4)
main, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
main, (register, 0x0, 4) INT_SEXT (unique, 0x7800, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x4, 4) COPY (ram, 0x804971c, 4)
main, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
main, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
main, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
main, (register, 0x4, 4) INT_SEXT (unique, 0x7800, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (unique, 0x1e00, 4) INT_ADD (register, 0x8, 4) , (const, 0x8048500, 4)
main, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1e00, 4)
main, (register, 0x4, 4) INT_SEXT (unique, 0x7800, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x4, 4) COPY (ram, 0x8049718, 4)
main, (unique, 0x1f00, 4) INT_MULT (register, 0x8, 4) , (const, 0x1, 4)
main, (unique, 0x2000, 4) INT_ADD (register, 0x4, 4) , (unique, 0x1f00, 4)
main, (unique, 0x7800, 1) LOAD (const, 0x1a1, 4) , (unique, 0x2000, 4)
main, (register, 0x8, 4) INT_SEXT (unique, 0x7800, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
main, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
main, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
main,  ---  RETURN (register, 0x284, 4)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x14, 4) INT_XOR (register, 0x14, 4) , (register, 0x14, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
_start, (unique, 0xd900, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
_start, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_start, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_start, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_start, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_start, (register, 0x4, 4) COPY (register, 0x10, 4)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffff0, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_start, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_start, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_start, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_start, (unique, 0x9780, 4) COPY (register, 0x0, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x10, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x8, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x8048470, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x8048400, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x4, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x9780, 4) COPY (register, 0x18, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_start, (unique, 0x2f400, 4) COPY (const, 0x80482d0, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
_start, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804832b, 4)
_start,  ---  CALL (ram, 0x80482c0, 4)
_start,  ---  BRANCH (ram, 0x804832b, 4)
__x86.get_pc_thunk.bx, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
__x86.get_pc_thunk.bx, (register, 0xc, 4) COPY (unique, 0x7980, 4)
__x86.get_pc_thunk.bx, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__x86.get_pc_thunk.bx, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__x86.get_pc_thunk.bx,  ---  RETURN (register, 0x284, 4)
deregister_tm_clones, (register, 0x0, 4) COPY (const, 0x804972b, 4)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8049728, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x8049728, 4)
deregister_tm_clones, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x8049728, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (unique, 0x1e080, 4) INT_SUB (register, 0x0, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x1e080, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x1e080, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x1e080, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x8000, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x8048369, 4) , (unique, 0x8000, 1)
deregister_tm_clones, (register, 0x0, 4) COPY (const, 0x0, 4)
deregister_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (unique, 0x42580, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x8048369, 4) , (register, 0x206, 1)
deregister_tm_clones, (unique, 0x9780, 4) COPY (register, 0x14, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
deregister_tm_clones, (register, 0x14, 4) COPY (register, 0x10, 4)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f400, 4) COPY (const, 0x8049728, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
deregister_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048365, 4)
deregister_tm_clones,  ---  CALLIND (register, 0x0, 4)
deregister_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
deregister_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
deregister_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x10, 4) COPY (register, 0x14, 4)
deregister_tm_clones, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
deregister_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  RETURN (register, 0x284, 4)
register_tm_clones, (register, 0x0, 4) COPY (const, 0x8049728, 4)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8049728, 4)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x8049728, 4)
register_tm_clones, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x8049728, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x3d000, 4) COPY (register, 0x0, 4)
register_tm_clones, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x3cf80, 4)
register_tm_clones, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
register_tm_clones, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
register_tm_clones, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
register_tm_clones, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
register_tm_clones, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdc80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
register_tm_clones, (unique, 0xdf80, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
register_tm_clones, (unique, 0xe200, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
register_tm_clones, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
register_tm_clones, (register, 0x8, 4) COPY (register, 0x0, 4)
register_tm_clones, (unique, 0x41180, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x41200, 4) COPY (register, 0x8, 4)
register_tm_clones, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x41180, 4)
register_tm_clones, (unique, 0x10e00, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x10e80, 4) INT_SUB (unique, 0x41180, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x10f00, 4) INT_RIGHT (unique, 0x41200, 4) , (unique, 0x10e80, 4)
register_tm_clones, (unique, 0x10f80, 4) INT_AND (unique, 0x10f00, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x11080, 1) INT_NOTEQUAL (unique, 0x10f80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x11100, 1) BOOL_NEGATE (unique, 0x10e00, 1)
register_tm_clones, (unique, 0x11180, 1) INT_AND (unique, 0x11100, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x11200, 1) INT_AND (unique, 0x10e00, 1) , (unique, 0x11080, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x11180, 1) , (unique, 0x11200, 1)
register_tm_clones, (unique, 0x11380, 1) INT_EQUAL (unique, 0x41180, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x11480, 1) INT_SLESS (unique, 0x41200, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x11500, 1) BOOL_NEGATE (unique, 0x11380, 1)
register_tm_clones, (unique, 0x11580, 1) INT_AND (unique, 0x11500, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x11600, 1) INT_AND (unique, 0x11380, 1) , (unique, 0x11480, 1)
register_tm_clones, (register, 0x20b, 1) INT_OR (unique, 0x11580, 1) , (unique, 0x11600, 1)
register_tm_clones, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x41180, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdc80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
register_tm_clones, (unique, 0xdf80, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
register_tm_clones, (unique, 0xe200, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
register_tm_clones, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
register_tm_clones, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x7a80, 1) COPY (const, 0x1, 1)
register_tm_clones, (unique, 0x3cb80, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x3cb80, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x80483a3, 4) , (register, 0x206, 1)
register_tm_clones, (register, 0x8, 4) COPY (const, 0x0, 4)
register_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x80483a3, 4) , (register, 0x206, 1)
register_tm_clones, (unique, 0x9780, 4) COPY (register, 0x14, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
register_tm_clones, (register, 0x14, 4) COPY (register, 0x10, 4)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x9780, 4) COPY (register, 0x0, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
register_tm_clones, (unique, 0x2f400, 4) COPY (const, 0x8049728, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x2f400, 4)
register_tm_clones, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804839f, 4)
register_tm_clones,  ---  CALLIND (register, 0x8, 4)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
register_tm_clones, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
register_tm_clones, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
register_tm_clones, (register, 0x10, 4) COPY (register, 0x14, 4)
register_tm_clones, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
register_tm_clones, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
register_tm_clones,  ---  RETURN (register, 0x284, 4)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x8049728, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x8049728, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x1dc80, 1) INT_SUB (ram, 0x8049728, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x1dc80, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x1dc80, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xd900, 1) INT_AND (unique, 0x1dc80, 1) , (const, 0xff, 1)
__do_global_dtors_aux, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 1)
__do_global_dtors_aux, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x80483cc, 4) , (unique, 0x7f00, 1)
__do_global_dtors_aux, (unique, 0x9780, 4) COPY (register, 0x14, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__do_global_dtors_aux, (register, 0x14, 4) COPY (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__do_global_dtors_aux, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__do_global_dtors_aux, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80483c4, 4)
__do_global_dtors_aux,  ---  CALL (ram, 0x8048340, 4)
__do_global_dtors_aux, (ram, 0x8049728, 1) COPY (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x10, 4) COPY (register, 0x14, 4)
__do_global_dtors_aux, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__do_global_dtors_aux, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x284, 4)
frame_dummy, (register, 0x0, 4) COPY (const, 0x804960c, 4)
frame_dummy, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (register, 0x0, 4)
frame_dummy, (register, 0x8, 4) COPY (unique, 0x7980, 4)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
frame_dummy,  ---  CBRANCH (ram, 0x80483e0, 4) , (unique, 0x7f00, 1)
frame_dummy,  ---  BRANCH (ram, 0x8048370, 4)
frame_dummy, (register, 0x8, 4) COPY (const, 0x0, 4)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x42580, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy,  ---  CBRANCH (ram, 0x80483db, 4) , (register, 0x206, 1)
frame_dummy, (unique, 0x9780, 4) COPY (register, 0x14, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
frame_dummy, (register, 0x14, 4) COPY (register, 0x10, 4)
frame_dummy, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x14, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x9780, 4) COPY (register, 0x0, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
frame_dummy, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x80483f2, 4)
frame_dummy,  ---  CALLIND (register, 0x8, 4)
frame_dummy, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
frame_dummy, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
frame_dummy, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
frame_dummy, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
frame_dummy, (register, 0x10, 4) COPY (register, 0x14, 4)
frame_dummy, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
frame_dummy, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
frame_dummy,  ---  BRANCH (ram, 0x8048370, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x14, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (register, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0x18, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (unique, 0x9780, 4) COPY (register, 0xc, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804840b, 4)
__libc_csu_init,  ---  CALL (ram, 0x8048330, 4)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x12f1, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x12f1, 4)
__libc_csu_init, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x12f1, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x30, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x14, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffff0c, 4)
__libc_csu_init, (register, 0x18, 4) COPY (unique, 0x1e00, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048423, 4)
__libc_csu_init,  ---  CALL (ram, 0x8048274, 4)
__libc_csu_init, (unique, 0x1e00, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffff08, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x1e00, 4)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3cf80, 4) INT_AND (const, 0x2, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x3d000, 4) COPY (register, 0x18, 4)
__libc_csu_init, (register, 0x18, 4) INT_SRIGHT (register, 0x18, 4) , (unique, 0x3cf80, 4)
__libc_csu_init, (unique, 0x10680, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x10700, 4) INT_SUB (unique, 0x3cf80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10780, 4) INT_SRIGHT (unique, 0x3d000, 4) , (unique, 0x10700, 4)
__libc_csu_init, (unique, 0x10800, 4) INT_AND (unique, 0x10780, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10900, 1) INT_NOTEQUAL (unique, 0x10800, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x10980, 1) BOOL_NEGATE (unique, 0x10680, 1)
__libc_csu_init, (unique, 0x10a00, 1) INT_AND (unique, 0x10980, 1) , (register, 0x200, 1)
__libc_csu_init, (unique, 0x10a80, 1) INT_AND (unique, 0x10680, 1) , (unique, 0x10900, 1)
__libc_csu_init, (register, 0x200, 1) INT_OR (unique, 0x10a00, 1) , (unique, 0x10a80, 1)
__libc_csu_init, (unique, 0x10c00, 1) INT_EQUAL (unique, 0x3cf80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x10c80, 1) BOOL_NEGATE (unique, 0x10c00, 1)
__libc_csu_init, (register, 0x20b, 1) INT_AND (unique, 0x10c80, 1) , (register, 0x20b, 1)
__libc_csu_init, (unique, 0xdb80, 1) INT_NOTEQUAL (unique, 0x3cf80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xdc80, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xdd00, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xdd80, 1) INT_AND (unique, 0xdd00, 1) , (register, 0x207, 1)
__libc_csu_init, (unique, 0xde00, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdc80, 1)
__libc_csu_init, (register, 0x207, 1) INT_OR (unique, 0xdd80, 1) , (unique, 0xde00, 1)
__libc_csu_init, (unique, 0xdf80, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xe000, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xe080, 1) INT_AND (unique, 0xe000, 1) , (register, 0x206, 1)
__libc_csu_init, (unique, 0xe100, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xdf80, 1)
__libc_csu_init, (register, 0x206, 1) INT_OR (unique, 0xe080, 1) , (unique, 0xe100, 1)
__libc_csu_init, (unique, 0xe200, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xe280, 1) POPCOUNT (unique, 0xe200, 4)
__libc_csu_init, (unique, 0xe300, 1) INT_AND (unique, 0xe280, 1) , (const, 0x1, 1)
__libc_csu_init, (unique, 0xe400, 1) INT_EQUAL (unique, 0xe300, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0xe480, 1) BOOL_NEGATE (unique, 0xdb80, 1)
__libc_csu_init, (unique, 0xe500, 1) INT_AND (unique, 0xe480, 1) , (register, 0x202, 1)
__libc_csu_init, (unique, 0xe580, 1) INT_AND (unique, 0xdb80, 1) , (unique, 0xe400, 1)
__libc_csu_init, (register, 0x202, 1) INT_OR (unique, 0xe500, 1) , (unique, 0xe580, 1)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (unique, 0x42580, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x42580, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x42580, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (unique, 0x42580, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x8048459, 4) , (register, 0x206, 1)
__libc_csu_init, (register, 0x18, 4) COPY (register, 0x18, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x38, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x14, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x8, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x34, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2500, 4)
__libc_csu_init, (register, 0x0, 4) COPY (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2500, 4) INT_ADD (const, 0x4, 4) , (register, 0x10, 4)
__libc_csu_init, (unique, 0x7980, 4) COPY (register, 0x0, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 4) , (unique, 0x2500, 4) , (unique, 0x7980, 4)
__libc_csu_init, (unique, 0x2700, 4) INT_ADD (const, 0xffffff08, 4) , (register, 0xc, 4)
__libc_csu_init, (unique, 0x2780, 4) INT_MULT (register, 0x1c, 4) , (const, 0x4, 4)
__libc_csu_init, (unique, 0x2880, 4) INT_ADD (unique, 0x2700, 4) , (unique, 0x2780, 4)
__libc_csu_init, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x8048452, 4)
__libc_csu_init, (unique, 0x7980, 4) LOAD (const, 0x1a1, 4) , (unique, 0x2880, 4)
__libc_csu_init,  ---  CALLIND (unique, 0x7980, 4)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (unique, 0x1e380, 4) INT_SUB (register, 0x1c, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x1e380, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x1e380, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (unique, 0x1e380, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x7f00, 1) BOOL_NEGATE (register, 0x206, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x8048438, 4) , (unique, 0x7f00, 1)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
__libc_csu_init, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x18, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x14, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_init, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  RETURN (register, 0x284, 4)
__libc_csu_fini, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
__libc_csu_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
__libc_csu_fini,  ---  RETURN (register, 0x284, 4)
_fini, (unique, 0x9780, 4) COPY (register, 0xc, 4)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (unique, 0x9780, 4)
_fini, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x10, 4) , (const, 0x804847d, 4)
_fini,  ---  CALL (ram, 0x8048330, 4)
_fini, (register, 0x200, 1) INT_CARRY (register, 0xc, 4) , (const, 0x127f, 4)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0xc, 4) , (const, 0x127f, 4)
_fini, (register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x127f, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_fini, (unique, 0xd900, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_fini, (unique, 0xd980, 1) POPCOUNT (unique, 0xd900, 4)
_fini, (unique, 0xda00, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0xda00, 1) , (const, 0x0, 1)
_fini, (register, 0xc, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_fini, (register, 0x284, 4) LOAD (const, 0x1a1, 8) , (register, 0x10, 4)
_fini, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
_fini,  ---  RETURN (register, 0x284, 4)
