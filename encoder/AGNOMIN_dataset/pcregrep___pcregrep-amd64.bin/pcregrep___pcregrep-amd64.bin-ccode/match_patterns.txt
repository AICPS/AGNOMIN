
BOOL match_patterns(char *matchptr,size_t length,uint options,int startoffset,int *offsets,int *mrc)

{
  int iVar1;
  char *__s;
  size_t __n;
  int iVar2;
  patstr *ppVar3;
  
  __s = "text that starts:\n\n";
  if (length < 0xc9) {
    __s = "this text:\n\n";
  }
  iVar2 = 1;
  __n = 200;
  if (length < 0xc9) {
    __n = length;
  }
  ppVar3 = patterns;
  if (patterns != (patstr *)0x0) {
    do {
      iVar1 = pcre_exec(ppVar3->compiled,ppVar3->hint,matchptr,(int)length,startoffset,options,
                        offsets,99);
      *mrc = iVar1;
      if (-1 < iVar1) {
        return 1;
      }
      if (iVar1 != -1) {
        __fprintf_chk(stderr,1,"pcregrep: pcre_exec() gave error %d while matching ",iVar1);
        if (patterns->next != (patstr *)0x0) {
          __fprintf_chk(stderr,1,"pattern number %d to ",iVar2);
        }
        fputs(__s,stderr);
        fwrite(matchptr,1,__n,stderr);
        fwrite("\n\n",1,2,stderr);
        iVar2 = *mrc;
        if ((iVar2 == -0x15 || iVar2 == -8) || (iVar2 == -0x1b)) {
          resource_error = 1;
        }
        if (error_count < 0x15) {
          error_count = error_count + 1;
          return invert;
        }
        error_count = error_count + 1;
        fwrite("pcregrep: Too many errors - abandoned.\n",1,0x27,stderr);
                    /* WARNING: Subroutine does not return */
        pcregrep_exit(2);
      }
      ppVar3 = ppVar3->next;
      iVar2 = iVar2 + 1;
    } while (ppVar3 != (patstr *)0x0);
  }
  return 0;
}

