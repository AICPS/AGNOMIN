_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x0, 8) COPY (ram, 0x308f98, 8)
_init, (register, 0x200, 1) COPY (const, 0x0, 1)
_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
_init, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init,  ---  CBRANCH (ram, 0x1022fd, 8) , (register, 0x206, 1)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1022fd, 8)
_init,  ---  CALL (ram, 0x1024c0, 8)
_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  RETURN (register, 0x288, 8)
FUN_00102310, (unique, 0xe780, 8) COPY (ram, 0x308de8, 8)
FUN_00102310, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
FUN_00102310,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
FUN_00102310,  ---  BRANCHIND (ram, 0x308df0, 8)
__ctype_toupper_loc,  ---  BRANCHIND (ram, 0x308df8, 8)
getenv,  ---  BRANCHIND (ram, 0x308e00, 8)
free,  ---  BRANCHIND (ram, 0x308e08, 8)
__errno_location,  ---  BRANCHIND (ram, 0x308e10, 8)
strncmp,  ---  BRANCHIND (ram, 0x308e18, 8)
puts,  ---  BRANCHIND (ram, 0x308e20, 8)
pcre_maketables,  ---  BRANCHIND (ram, 0x308e28, 8)
isatty,  ---  BRANCHIND (ram, 0x308e30, 8)
fread,  ---  BRANCHIND (ram, 0x308e38, 8)
pcre_version,  ---  BRANCHIND (ram, 0x308e40, 8)
fclose,  ---  BRANCHIND (ram, 0x308e48, 8)
opendir,  ---  BRANCHIND (ram, 0x308e50, 8)
strlen,  ---  BRANCHIND (ram, 0x308e58, 8)
__stack_chk_fail,  ---  BRANCHIND (ram, 0x308e60, 8)
strchr,  ---  BRANCHIND (ram, 0x308e68, 8)
strrchr,  ---  BRANCHIND (ram, 0x308e70, 8)
fputs,  ---  BRANCHIND (ram, 0x308e78, 8)
pcre_exec,  ---  BRANCHIND (ram, 0x308e80, 8)
fgetc,  ---  BRANCHIND (ram, 0x308e88, 8)
closedir,  ---  BRANCHIND (ram, 0x308e90, 8)
fputc,  ---  BRANCHIND (ram, 0x308e98, 8)
memchr,  ---  BRANCHIND (ram, 0x308ea0, 8)
__libc_start_main,  ---  BRANCHIND (ram, 0x308ea8, 8)
fgets,  ---  BRANCHIND (ram, 0x308eb0, 8)
strcmp,  ---  BRANCHIND (ram, 0x308eb8, 8)
pcre_config,  ---  BRANCHIND (ram, 0x308ec0, 8)
__gmon_start__,  ---  BRANCHIND (ram, 0x308ec8, 8)
fileno,  ---  BRANCHIND (ram, 0x308ed0, 8)
__xstat,  ---  BRANCHIND (ram, 0x308ed8, 8)
readdir,  ---  BRANCHIND (ram, 0x308ee0, 8)
pcre_compile,  ---  BRANCHIND (ram, 0x308ee8, 8)
pcre_jit_stack_alloc,  ---  BRANCHIND (ram, 0x308ef0, 8)
malloc,  ---  BRANCHIND (ram, 0x308ef8, 8)
fflush,  ---  BRANCHIND (ram, 0x308f00, 8)
pcre_free_study,  ---  BRANCHIND (ram, 0x308f08, 8)
setlocale,  ---  BRANCHIND (ram, 0x308f10, 8)
__printf_chk,  ---  BRANCHIND (ram, 0x308f18, 8)
memmove,  ---  BRANCHIND (ram, 0x308f20, 8)
pcre_study,  ---  BRANCHIND (ram, 0x308f28, 8)
fopen,  ---  BRANCHIND (ram, 0x308f30, 8)
exit,  ---  BRANCHIND (ram, 0x308f38, 8)
fwrite,  ---  BRANCHIND (ram, 0x308f40, 8)
__fprintf_chk,  ---  BRANCHIND (ram, 0x308f48, 8)
strerror,  ---  BRANCHIND (ram, 0x308f50, 8)
pcre_assign_jit_stack,  ---  BRANCHIND (ram, 0x308f58, 8)
__cxa_finalize,  ---  BRANCHIND (ram, 0x308f60, 8)
__ctype_b_loc,  ---  BRANCHIND (ram, 0x308f68, 8)
__sprintf_chk,  ---  BRANCHIND (ram, 0x308f70, 8)
pcre_jit_stack_free,  ---  BRANCHIND (ram, 0x308f78, 8)
free_pattern_chain, (unique, 0xe780, 8) COPY (register, 0x28, 8)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
free_pattern_chain, (unique, 0xe780, 8) COPY (register, 0x18, 8)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
free_pattern_chain, (register, 0x18, 8) COPY (register, 0x38, 8)
free_pattern_chain, (unique, 0xe780, 8) COPY (register, 0x10, 8)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
free_pattern_chain, (register, 0x200, 1) COPY (const, 0x0, 1)
free_pattern_chain, (register, 0x20b, 1) COPY (const, 0x0, 1)
free_pattern_chain, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
free_pattern_chain, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
free_pattern_chain, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
free_pattern_chain, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
free_pattern_chain, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x10266b, 8) , (register, 0x206, 1)
free_pattern_chain, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
free_pattern_chain, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
free_pattern_chain, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
free_pattern_chain, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
free_pattern_chain, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
free_pattern_chain, (register, 0x200, 1) COPY (const, 0x0, 1)
free_pattern_chain, (register, 0x20b, 1) COPY (const, 0x0, 1)
free_pattern_chain, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
free_pattern_chain, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
free_pattern_chain, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
free_pattern_chain, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
free_pattern_chain, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x10264c, 8) , (register, 0x206, 1)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10264c, 8)
free_pattern_chain,  ---  CALL (ram, 0x102540, 8)
free_pattern_chain, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
free_pattern_chain, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
free_pattern_chain, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
free_pattern_chain, (register, 0x200, 1) COPY (const, 0x0, 1)
free_pattern_chain, (register, 0x20b, 1) COPY (const, 0x0, 1)
free_pattern_chain, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
free_pattern_chain, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
free_pattern_chain, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
free_pattern_chain, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
free_pattern_chain, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
free_pattern_chain, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x10265e, 8) , (register, 0x206, 1)
free_pattern_chain, (register, 0x0, 8) COPY (ram, 0x308fb0, 8)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10265e, 8)
free_pattern_chain, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
free_pattern_chain,  ---  CALLIND (unique, 0xbd80, 8)
free_pattern_chain, (register, 0x38, 8) COPY (register, 0x18, 8)
free_pattern_chain, (register, 0x18, 8) COPY (register, 0x28, 8)
free_pattern_chain, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102669, 8)
free_pattern_chain,  ---  CALL (ram, 0x102340, 8)
free_pattern_chain,  ---  BRANCH (ram, 0x102636, 8)
free_pattern_chain, (register, 0x0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
free_pattern_chain, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
free_pattern_chain, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
free_pattern_chain, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
free_pattern_chain, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
free_pattern_chain,  ---  RETURN (register, 0x288, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0xa0, 4) COPY (register, 0x88, 4)
compile_pattern, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x28, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x18, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0xa8, 4) COPY (register, 0x8, 4)
compile_pattern, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
compile_pattern, (register, 0x18, 8) COPY (register, 0x38, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x8, 8) INT_OR (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compile_pattern, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
compile_pattern, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (unique, 0x3c80, 8) INT_ADD (const, 0x2038, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x38, 8) COPY (register, 0x88, 8)
compile_pattern, (unique, 0xd900, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern,  ---  CBRANCH (ram, 0x1026a9, 8) , (unique, 0xd900, 1)
compile_pattern, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0xae80, 8) COPY (register, 0x38, 8)
compile_pattern, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
compile_pattern, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
compile_pattern, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (unique, 0x51d80, 1) INT_SUB (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x51d80, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x51d80, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x12c00, 1) INT_AND (unique, 0x51d80, 1) , (const, 0xff, 1)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xda00, 1) BOOL_NEGATE (register, 0x206, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1026a7, 8) , (unique, 0xda00, 1)
compile_pattern, (register, 0x8, 8) INT_NEGATE (register, 0x8, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
compile_pattern, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compile_pattern, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1026c0, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x0, 8) COPY (const, 0x1, 8)
compile_pattern,  ---  BRANCH (ram, 0x1028d1, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0x58c00, 1) INT_AND (register, 0x10, 1) , (const, 0x4, 1)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x28, 4) COPY (register, 0x30, 4)
compile_pattern, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
compile_pattern, (register, 0xb8, 4) COPY (register, 0x10, 4)
compile_pattern, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
compile_pattern, (register, 0xb0, 8) COPY (register, 0x80, 8)
compile_pattern, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbc80, 4)
compile_pattern,  ---  CBRANCH (ram, 0x102723, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x8, 8) INT_SEXT (register, 0x8, 4)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x10, 8) COPY (unique, 0x3800, 8)
compile_pattern, (register, 0x38, 8) COPY (register, 0x88, 8)
compile_pattern, (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8)
compile_pattern, (register, 0x30, 8) COPY (unique, 0x3400, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) COPY (register, 0x88, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1026e9, 8)
compile_pattern,  ---  CALL (ram, 0x103e60, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
compile_pattern,  ---  CBRANCH (ram, 0x102723, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x30, 8) COPY (register, 0x18, 8)
compile_pattern, (register, 0x38, 8) COPY (register, 0x0, 8)
compile_pattern, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102704, 8)
compile_pattern,  ---  CALL (ram, 0x1045d0, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
compile_pattern, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
compile_pattern,  ---  CBRANCH (ram, 0x1028d1, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x88, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x88, 8)
compile_pattern, (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (register, 0x88, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) COPY (register, 0x80, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0xbc80, 4)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0xbc80, 4)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbc80, 4)
compile_pattern, (register, 0x10, 8) COPY (const, 0x308b40, 8)
compile_pattern, (register, 0x0, 8) INT_SEXT (register, 0xb8, 4)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
compile_pattern, (register, 0xb8, 8) COPY (unique, 0x3800, 8)
compile_pattern, (register, 0x8, 8) COPY (const, 0x1070b8, 8)
compile_pattern, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
compile_pattern, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
compile_pattern, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x10, 8) COPY (const, 0x308b00, 8)
compile_pattern, (register, 0x38, 8) COPY (register, 0xb8, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
compile_pattern, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
compile_pattern, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
compile_pattern, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x88, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
compile_pattern, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
compile_pattern, (register, 0x10, 8) COPY (const, 0x200a, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10276c, 8)
compile_pattern,  ---  CALL (ram, 0x102610, 8)
compile_pattern, (register, 0x80, 8) COPY (ram, 0x3098c0, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x8, 8) COPY (unique, 0x3800, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x10, 8) COPY (unique, 0x3800, 8)
compile_pattern, (register, 0x30, 4) COPY (register, 0x28, 4)
compile_pattern, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
compile_pattern, (register, 0x38, 8) COPY (register, 0xb8, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102787, 8)
compile_pattern,  ---  CALL (ram, 0x102500, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
compile_pattern, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
compile_pattern, (register, 0x88, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x90, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1026b6, 8) , (unique, 0xc680, 1)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x8, 8) INT_OR (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xd900, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern,  ---  CBRANCH (ram, 0x1027a3, 8) , (unique, 0xd900, 1)
compile_pattern, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0xae80, 8) COPY (register, 0x38, 8)
compile_pattern, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
compile_pattern, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
compile_pattern, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
compile_pattern, (unique, 0x51d80, 1) INT_SUB (register, 0x0, 1) , (unique, 0xb100, 1)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x51d80, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x51d80, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x12c00, 1) INT_AND (unique, 0x51d80, 1) , (const, 0xff, 1)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xda00, 1) BOOL_NEGATE (register, 0x206, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1027a1, 8) , (unique, 0xda00, 1)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (unique, 0x3880, 8) INT_ADD (const, 0x2, 8) , (register, 0x0, 8)
compile_pattern, (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
compile_pattern, (register, 0x80, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
compile_pattern, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x80, 4)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x80, 4)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
compile_pattern, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x80, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
compile_pattern, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
compile_pattern, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xcc00, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1027b5, 8) , (unique, 0x27780, 1)
compile_pattern, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
compile_pattern, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbc80, 4) COPY (register, 0x80, 4)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
compile_pattern, (register, 0x28, 4) COPY (register, 0x80, 4)
compile_pattern, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
compile_pattern,  ---  CBRANCH (ram, 0x1027f7, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x30, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0x10, 8) COPY (const, 0x106420, 8)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0x88, 4) COPY (register, 0x80, 4)
compile_pattern, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
compile_pattern, (register, 0x8, 4) COPY (register, 0xa0, 4)
compile_pattern, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
compile_pattern, (register, 0x80, 8) COPY (register, 0xb0, 8)
compile_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
compile_pattern, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1027ed, 8)
compile_pattern,  ---  CALL (ram, 0x1025c0, 8)
compile_pattern, (register, 0x38, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x80, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  BRANCH (ram, 0x1028d1, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
compile_pattern, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
compile_pattern,  ---  CBRANCH (ram, 0x10282b, 8) , (unique, 0xc680, 1)
compile_pattern, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
compile_pattern, (register, 0x10, 8) COPY (const, 0x106460, 8)
compile_pattern, (register, 0x88, 8) COPY (register, 0x18, 8)
compile_pattern, (register, 0x8, 8) COPY (register, 0xb0, 8)
compile_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
compile_pattern, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102824, 8)
compile_pattern,  ---  CALL (ram, 0x1025c0, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  BRANCH (ram, 0x1028d1, 8)
compile_pattern, (register, 0x8, 8) COPY (const, 0x107259, 8)
compile_pattern, (register, 0x38, 8) COPY (const, 0x3097a0, 8)
compile_pattern, (register, 0x80, 4) COPY (register, 0xa0, 4)
compile_pattern, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
compile_pattern, (register, 0x10, 8) COPY (const, 0x8, 8)
compile_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10284d, 8)
compile_pattern,  ---  CALL (ram, 0x102610, 8)
compile_pattern, (register, 0x8, 8) COPY (const, 0x3097a0, 8)
compile_pattern, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
compile_pattern, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
compile_pattern, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  CBRANCH (ram, 0x10285e, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  BRANCH (ram, 0x102854, 8)
compile_pattern, (register, 0x0, 4) COPY (register, 0xa0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x30, 8) COPY (const, 0xa, 8)
compile_pattern, (unique, 0x27400, 8) INT_SEXT (register, 0x0, 4)
compile_pattern, (register, 0x10, 4) SUBPIECE (unique, 0x27400, 8) , (const, 0x4, 4)
compile_pattern, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
compile_pattern, (unique, 0x34080, 8) INT_SEXT (register, 0x30, 4)
compile_pattern, (unique, 0x34100, 8) INT_ZEXT (register, 0x10, 4)
compile_pattern, (unique, 0x34180, 8) INT_LEFT (unique, 0x34100, 8) , (const, 0x20, 4)
compile_pattern, (unique, 0x34200, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (unique, 0x34300, 8) INT_OR (unique, 0x34180, 8) , (unique, 0x34200, 8)
compile_pattern, (unique, 0x34400, 8) INT_SDIV (unique, 0x34300, 8) , (unique, 0x34080, 8)
compile_pattern, (register, 0x0, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (unique, 0x34580, 8) INT_SREM (unique, 0x34300, 8) , (unique, 0x34080, 8)
compile_pattern, (register, 0x10, 4) SUBPIECE (unique, 0x34580, 8) , (const, 0x0, 4)
compile_pattern, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x2, 4)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  CBRANCH (ram, 0x102882, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x3, 4)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x3, 4)
compile_pattern, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x3, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  CBRANCH (ram, 0x10288d, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1, 4)
compile_pattern, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)
compile_pattern, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
compile_pattern,  ---  CBRANCH (ram, 0x102898, 8) , (unique, 0xc680, 1)
compile_pattern, (unique, 0xbc00, 2) COPY (const, 0x7473, 2)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc00, 2)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)
compile_pattern, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1)
compile_pattern,  ---  BRANCH (ram, 0x1028a1, 8)
compile_pattern, (unique, 0xbc00, 2) COPY (const, 0x646e, 2)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc00, 2)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)
compile_pattern, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1)
compile_pattern,  ---  BRANCH (ram, 0x1028a1, 8)
compile_pattern, (unique, 0xbc00, 2) COPY (const, 0x6472, 2)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc00, 2)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)
compile_pattern, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1)
compile_pattern,  ---  BRANCH (ram, 0x1028a1, 8)
compile_pattern, (unique, 0xbc00, 2) COPY (const, 0x6874, 2)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc00, 2)
compile_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)
compile_pattern, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
compile_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x0, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
compile_pattern, (register, 0x8, 8) COPY (const, 0x3097a0, 8)
compile_pattern, (unique, 0xe780, 8) COPY (register, 0x18, 8)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
compile_pattern, (register, 0x10, 8) COPY (const, 0x106490, 8)
compile_pattern, (register, 0x88, 4) COPY (register, 0x28, 4)
compile_pattern, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
compile_pattern, (register, 0x80, 8) COPY (register, 0xb0, 8)
compile_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
compile_pattern, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1028cd, 8)
compile_pattern,  ---  CALL (ram, 0x1025c0, 8)
compile_pattern, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compile_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3c80, 8) INT_ADD (const, 0x2038, 8) , (register, 0x20, 8)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
compile_pattern, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
compile_pattern, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
compile_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
compile_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
compile_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
compile_pattern, (register, 0x30, 8) INT_XOR (register, 0x30, 8) , (unique, 0xbd80, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1028e9, 8) , (register, 0x206, 1)
compile_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1028e9, 8)
compile_pattern,  ---  CALL (ram, 0x1023f0, 8)
compile_pattern, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x2048, 8)
compile_pattern, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
compile_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
compile_pattern, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
compile_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
compile_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compile_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compile_pattern, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compile_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compile_pattern,  ---  RETURN (register, 0x288, 8)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (register, 0xb0, 4) COPY (register, 0x8, 4)
read_pattern_file, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (register, 0xa8, 8) COPY (register, 0x38, 8)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0x28, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (unique, 0xe780, 8) COPY (register, 0x18, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_pattern_file, (register, 0x28, 8) COPY (register, 0x10, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0x3c80, 8) INT_ADD (const, 0x2028, 8) , (register, 0x20, 8)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
read_pattern_file, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102957, 8) , (unique, 0xc680, 1)
read_pattern_file, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_pattern_file, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102957, 8) , (unique, 0xc680, 1)
read_pattern_file, (register, 0x0, 8) COPY (ram, 0x308f90, 8)
read_pattern_file, (register, 0xa8, 8) COPY (ram, 0x309780, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
read_pattern_file, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x18, 8) COPY (unique, 0x3800, 8)
read_pattern_file,  ---  BRANCH (ram, 0x1029cf, 8)
read_pattern_file, (register, 0x30, 8) COPY (const, 0x1071b9, 8)
read_pattern_file, (register, 0x38, 8) COPY (register, 0xa8, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102966, 8)
read_pattern_file,  ---  CALL (ram, 0x102590, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x10294d, 8) , (unique, 0xc680, 1)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102974, 8)
read_pattern_file,  ---  CALL (ram, 0x102350, 8)
read_pattern_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_pattern_file, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
read_pattern_file, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10297b, 8)
read_pattern_file,  ---  CALL (ram, 0x1025d0, 8)
read_pattern_file, (register, 0x80, 8) COPY (register, 0x0, 8)
read_pattern_file, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
read_pattern_file, (register, 0x10, 8) COPY (const, 0x1064c8, 8)
read_pattern_file, (register, 0x8, 8) COPY (register, 0xa8, 8)
read_pattern_file, (register, 0x30, 8) COPY (const, 0x1, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_pattern_file, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10299e, 8)
read_pattern_file,  ---  CALL (ram, 0x1025c0, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  BRANCH (ram, 0x102a8d, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1029aa, 8)
read_pattern_file,  ---  CALL (ram, 0x102600, 8)
read_pattern_file, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_pattern_file, (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)
read_pattern_file, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)
read_pattern_file, (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)
read_pattern_file, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
read_pattern_file, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x1029c1, 8) , (register, 0x206, 1)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (const, 0x1, 8)
read_pattern_file, (register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (const, 0x1, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x18, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x18, 8)
read_pattern_file, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0x18, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_pattern_file, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x1029a5, 8) , (unique, 0xc900, 1)
read_pattern_file, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbb00, 1)
read_pattern_file, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_pattern_file, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a04, 8) , (unique, 0xc680, 1)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
read_pattern_file, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x30, 8) COPY (const, 0x200a, 8)
read_pattern_file, (register, 0x38, 8) COPY (register, 0x18, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1029e0, 8)
read_pattern_file,  ---  CALL (ram, 0x102490, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a6e, 8) , (register, 0x206, 1)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x8, 8) INT_OR (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x38, 8) COPY (register, 0x18, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xd900, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
read_pattern_file,  ---  CBRANCH (ram, 0x1029f4, 8) , (unique, 0xd900, 1)
read_pattern_file, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
read_pattern_file, (unique, 0xae80, 8) COPY (register, 0x38, 8)
read_pattern_file, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
read_pattern_file, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
read_pattern_file, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
read_pattern_file, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
read_pattern_file, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0xb100, 1)
read_pattern_file, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0xb100, 1)
read_pattern_file, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
read_pattern_file, (unique, 0x51d80, 1) INT_SUB (register, 0x0, 1) , (unique, 0xb100, 1)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x51d80, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x51d80, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x12c00, 1) INT_AND (unique, 0x51d80, 1) , (const, 0xff, 1)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xda00, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x1029f2, 8) , (unique, 0xda00, 1)
read_pattern_file, (register, 0x8, 8) INT_NEGATE (register, 0x8, 8)
read_pattern_file, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
read_pattern_file, (register, 0x10, 8) COPY (unique, 0x3100, 8)
read_pattern_file, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
read_pattern_file, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
read_pattern_file, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
read_pattern_file, (register, 0xb8, 8) COPY (unique, 0x3400, 8)
read_pattern_file,  ---  BRANCH (ram, 0x1029bc, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
read_pattern_file, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x38, 8) COPY (register, 0x18, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102a10, 8)
read_pattern_file,  ---  CALL (ram, 0x1045d0, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a1d, 8) , (unique, 0xc680, 1)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  BRANCH (ram, 0x102a8d, 8)
read_pattern_file, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_pattern_file, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
read_pattern_file, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a2b, 8) , (unique, 0xc680, 1)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8)
read_pattern_file, (register, 0x30, 4) COPY (ram, 0x30989c, 4)
read_pattern_file, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
read_pattern_file, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x88, 4) COPY (register, 0xa0, 4)
read_pattern_file, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
read_pattern_file, (register, 0x80, 8) COPY (register, 0xa8, 8)
read_pattern_file, (register, 0x8, 8) COPY (const, 0x1, 8)
read_pattern_file, (register, 0x10, 4) COPY (register, 0xb0, 4)
read_pattern_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102a48, 8)
read_pattern_file,  ---  CALL (ram, 0x10266f, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a19, 8) , (register, 0x206, 1)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
read_pattern_file, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_pattern_file, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x1029cf, 8) , (register, 0x206, 1)
read_pattern_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
read_pattern_file,  ---  BRANCH (ram, 0x102a2b, 8)
read_pattern_file, (register, 0x10, 8) COPY (ram, 0x308f90, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
read_pattern_file, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (register, 0x0, 1) COPY (const, 0x1, 1)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
read_pattern_file, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
read_pattern_file, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (unique, 0xbd80, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
read_pattern_file, (unique, 0x28c00, 8) INT_SUB (register, 0x30, 8) , (unique, 0xbd80, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102a8d, 8) , (register, 0x206, 1)
read_pattern_file, (register, 0x38, 8) COPY (register, 0x30, 8)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102a88, 8)
read_pattern_file,  ---  CALL (ram, 0x1023c0, 8)
read_pattern_file, (register, 0x0, 8) COPY (const, 0x1, 8)
read_pattern_file, (unique, 0x3c80, 8) INT_ADD (const, 0x2028, 8) , (register, 0x20, 8)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
read_pattern_file, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
read_pattern_file, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
read_pattern_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_pattern_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_pattern_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
read_pattern_file, (register, 0x30, 8) INT_XOR (register, 0x30, 8) , (unique, 0xbd80, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x102aa5, 8) , (register, 0x206, 1)
read_pattern_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102aa5, 8)
read_pattern_file,  ---  CALL (ram, 0x1023f0, 8)
read_pattern_file, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x2038, 8)
read_pattern_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_pattern_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_pattern_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_pattern_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_pattern_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_pattern_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_pattern_file, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_pattern_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_pattern_file,  ---  RETURN (register, 0x288, 8)
main, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (register, 0x30, 8) COPY (unique, 0x3800, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (register, 0x38, 8) COPY (const, 0x1, 8)
main, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2088, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102afc, 8)
main,  ---  CALL (ram, 0x1024b0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10348d, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x102b2f, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xd, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xd, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xd, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10347a, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xd0a, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xd0a, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0xd0a, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102e38, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 8) COPY (const, 0x1071c2, 8)
main, (ram, 0x3098c8, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102b46, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xfffffffe, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xfffffffe, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xfffffffe, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102e38, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 8) COPY (const, 0x1071bf, 8)
main, (ram, 0x3098c8, 8) COPY (register, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x102cdb, 8) , (unique, 0xce80, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102cdb, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102ccd, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
main, (register, 0xa8, 8) COPY (unique, 0x3800, 8)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0xa8, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x3c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3800, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x2d, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x2d, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102f11, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 4) INT_SEXT (unique, 0xbb00, 1)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
main, (register, 0xb0, 8) COPY (unique, 0x3100, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x38, 1) , (register, 0x38, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102f08, 8) , (register, 0x206, 1)
main, (register, 0x0, 4) COPY (ram, 0x309044, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102e50, 8) , (register, 0x206, 1)
main, (register, 0x18, 8) COPY (const, 0x309040, 8)
main,  ---  BRANCH (ram, 0x102bdf, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x20, 8)
main, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102e50, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x38, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102bd0, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0xa0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0xa0, 1) , (register, 0xa0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1031c8, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffffb, 8)
main, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102e90, 8) , (unique, 0xc780, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103180, 8) , (unique, 0xc680, 1)
main, (register, 0x30, 4) COPY (ram, 0x30989c, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102c15, 8)
main,  ---  CALL (ram, 0x105df0, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x38, 4) INT_SEXT (unique, 0xbb00, 1)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (ram, 0x30989c, 4) COPY (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x38, 1) , (register, 0x38, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102bb8, 8) , (unique, 0xc680, 1)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10311d, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffffb, 8)
main, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103132, 8) , (unique, 0xc780, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103132, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103560, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x3c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x103560, 8) , (unique, 0xce80, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x7, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x7, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x7, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10318b, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x8, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x8, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103273, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x9, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x9, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x9, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10320e, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x3, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
main, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103253, 8) , (unique, 0xc780, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) COPY (register, 0xb0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x18, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x18, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x18, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x18, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x102cdb, 8) , (unique, 0xce80, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x0, 8) INT_SEXT (register, 0x18, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102cdb, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102b9c, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309800, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309800, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309800, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103cb5, 8) , (register, 0x206, 1)
main, (register, 0x0, 4) COPY (ram, 0x3098ac, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x102d05, 8) , (unique, 0xce80, 1)
main, (register, 0x30, 4) COPY (ram, 0x3098b8, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102cf5, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098b8, 4) COPY (register, 0x0, 4)
main, (register, 0x8, 4) COPY (ram, 0x3098b4, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102d05, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098b4, 4) COPY (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (ram, 0x309840, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309840, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309840, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103541, 8) , (register, 0x206, 1)
main, (register, 0x10, 4) COPY (ram, 0x309878, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103c89, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 4) COPY (ram, 0x309868, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103c89, 8) , (unique, 0xc680, 1)
main, (ram, 0x309850, 4) COPY (const, 0x1, 4)
main, (register, 0x0, 8) COPY (ram, 0x3098d8, 8)
main, (register, 0x18, 8) COPY (const, 0x1071af, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103c31, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102d5a, 8)
main,  ---  CALL (ram, 0x102550, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103449, 8) , (register, 0x206, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102d68, 8)
main,  ---  CALL (ram, 0x102380, 8)
main, (ram, 0x3098c0, 8) COPY (register, 0x0, 8)
main, (register, 0x18, 8) COPY (ram, 0x3098f0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102dd8, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (const, 0x1071fe, 8)
main, (register, 0x8, 8) COPY (const, 0x6, 8)
main, (register, 0x30, 8) COPY (register, 0x18, 8)
main, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x102d8c, 8) , (unique, 0xd600, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xa280, 8) COPY (register, 0x30, 8)
main, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
main, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102d8a, 8) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102dd8, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x107204, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102d9d, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103512, 8) , (unique, 0xc680, 1)
main, (ram, 0x30987c, 4) COPY (const, 0x1, 4)
main, (register, 0x38, 8) COPY (const, 0x10720b, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102dbb, 8)
main,  ---  CALL (ram, 0x102330, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102dd1, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (const, 0x10721b, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102dcc, 8)
main,  ---  CALL (ram, 0x102330, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102dd8, 8) , (register, 0x206, 1)
main, (ram, 0x309790, 8) COPY (register, 0x0, 8)
main, (register, 0x18, 8) COPY (ram, 0x3098c8, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x28, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x63, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x63, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x63, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1032da, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x72, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x72, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x72, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1032ed, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x1071c2, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e04, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102e1f, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x10722d, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e17, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103bc6, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x30989c, 4) INT_OR (ram, 0x30989c, 4) , (const, 0x300000, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x30989c, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098f8, 4) COPY (const, 0x2, 4)
main,  ---  BRANCH (ram, 0x10330b, 8)
main, (register, 0x0, 8) COPY (const, 0x1071c4, 8)
main, (ram, 0x3098c8, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102b46, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x106b08, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x8, 4) COPY (register, 0x38, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e7d, 8)
main,  ---  CALL (ram, 0x1025c0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e82, 8)
main,  ---  CALL (ram, 0x105bf0, 8)
main, (register, 0x38, 4) COPY (register, 0x0, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e89, 8)
main,  ---  CALL (ram, 0x104210, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbc80, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102e98, 8)
main,  ---  CALL (ram, 0x102600, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)
main, (unique, 0x3900, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8)
main, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
main, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102c0a, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x102c32, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x6, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x6, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x6, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c70, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
main, (register, 0x10, 8) COPY (unique, 0x3100, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
main, (register, 0x30, 8) COPY (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102ed1, 8)
main,  ---  CALL (ram, 0x105c90, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 4) COPY (register, 0x0, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102ee4, 8)
main,  ---  CALL (ram, 0x104560, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c9e, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x0, 4) COPY (ram, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main,  ---  CALLOTHER (const, 0x49, 4)
main,  ---  BRANCH (ram, 0x102f0f, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8)
main, (register, 0x0, 8) COPY (unique, 0x3100, 8)
main, (register, 0x30, 8) COPY (const, 0x3d, 8)
main, (register, 0x38, 8) COPY (register, 0x0, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102f26, 8)
main,  ---  CALL (ram, 0x102400, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103c71, 8) , (register, 0x206, 1)
main, (register, 0x98, 4) COPY (ram, 0x309044, 4)
main, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103c06, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb8, 8) COPY (const, 0x309040, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0xb0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x103016, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main,  ---  CBRANCH (ram, 0x103061, 8) , (register, 0x206, 1)
main, (register, 0x88, 8) COPY (register, 0x28, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x8, 8) COPY (const, 0x1071c9, 8)
main, (register, 0x80, 4) COPY (register, 0xa8, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (register, 0x10, 8) COPY (const, 0x18, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (const, 0x1, 8)
main, (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0xa8, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0xa8, 4)
main, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0xa8, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102fa1, 8)
main,  ---  CALL (ram, 0x102610, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8)
main, (register, 0x88, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (register, 0x8, 8) COPY (const, 0x1071c7, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x80, 8) COPY (register, 0x28, 8)
main, (register, 0x10, 8) COPY (const, 0x18, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102fcb, 8)
main,  ---  CALL (ram, 0x102610, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x30, 8) COPY (register, 0x28, 8)
main, (register, 0x10, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102fe0, 8)
main,  ---  CALL (ram, 0x102360, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x88, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x90, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  CBRANCH (ram, 0x1030d0, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x102ffd, 8)
main,  ---  CALL (ram, 0x102360, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1030d0, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x20, 8)
main, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103c06, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x10, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x30, 8) COPY (const, 0x28, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103027, 8)
main,  ---  CALL (ram, 0x102400, 8)
main, (register, 0x30, 8) COPY (const, 0x3d, 8)
main, (register, 0xa0, 8) COPY (register, 0x0, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103037, 8)
main,  ---  CALL (ram, 0x102400, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103073, 8) , (register, 0x206, 1)
main, (register, 0xa8, 8) COPY (register, 0xa0, 8)
main, (register, 0x30, 8) COPY (const, 0x29, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10304f, 8)
main,  ---  CALL (ram, 0x102400, 8)
main, (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (register, 0x28, 8)
main, (register, 0xa8, 8) INT_SUB (register, 0xa8, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x28, 8)
main, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x18, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102f60, 8) , (unique, 0xc680, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10306a, 8)
main,  ---  CALL (ram, 0x1023e0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main,  ---  BRANCH (ram, 0x102f74, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1031d1, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0xb0, 8) , (register, 0x28, 8)
main, (register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main,  ---  CBRANCH (ram, 0x103200, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xb0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xb0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0xb0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103005, 8) , (unique, 0xc680, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x18, 8) INT_SEXT (register, 0x0, 4)
main, (register, 0x30, 8) COPY (register, 0x28, 8)
main, (register, 0x10, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1030aa, 8)
main,  ---  CALL (ram, 0x102360, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103005, 8) , (unique, 0xc680, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (register, 0x18, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (register, 0x18, 8)
main, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103c20, 8) , (register, 0x206, 1)
main, (register, 0x18, 8) COPY (register, 0xb8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x1030fb, 8)
main, (register, 0x0, 8) COPY (register, 0xb0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103234, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103234, 8) , (register, 0x206, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1030f8, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x10, 1) COPY (const, 0x1, 1)
main, (register, 0x18, 8) COPY (register, 0xb8, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103c06, 8) , (register, 0x206, 1)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x8, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102eae, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 4) COPY (ram, 0x30989c, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x30, 4) COPY (register, 0x0, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103127, 8)
main,  ---  CALL (ram, 0x105df0, 8)
main, (ram, 0x30989c, 4) COPY (register, 0x0, 4)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103240, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6f, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6f, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x6f, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c9e, 8) , (unique, 0xc680, 1)
main, (register, 0x30, 8) COPY (ram, 0x309838, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103155, 8)
main,  ---  CALL (ram, 0x104560, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x309840, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309840, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309840, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x309838, 8) COPY (register, 0x0, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c9e, 8) , (unique, 0xc680, 1)
main, (ram, 0x309840, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x7, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x7, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x7, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c79, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (register, 0xb0, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10319f, 8)
main,  ---  CALL (ram, 0x1045d0, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103bbc, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102c9e, 8) , (unique, 0xc680, 1)
main, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x10310f, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x30, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1031dd, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103005, 8) , (unique, 0xc680, 1)
main, (register, 0x18, 8) COPY (register, 0xb8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb0, 8) COPY (const, 0x107080, 8)
main,  ---  BRANCH (ram, 0x1030fb, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103209, 8)
main,  ---  CALL (ram, 0x1023e0, 8)
main,  ---  BRANCH (ram, 0x10308f, 8)
main, (register, 0x38, 8) COPY (const, 0x1071f0, 8)
main, (register, 0x8, 8) COPY (const, 0x7, 8)
main, (register, 0x30, 8) COPY (register, 0xb0, 8)
main, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x10321f, 8) , (unique, 0xd600, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xa280, 8) COPY (register, 0x30, 8)
main, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
main, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10321d, 8) , (register, 0x206, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1032b4, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098b0, 4) COPY (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0xb0, 8) COPY (const, 0x107080, 8)
main,  ---  BRANCH (ram, 0x1030f8, 8)
main, (register, 0x0, 8) COPY (const, 0x1071eb, 8)
main, (ram, 0x3098f0, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
main, (register, 0x10, 8) COPY (unique, 0x3100, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
main, (register, 0x30, 8) COPY (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103263, 8)
main,  ---  CALL (ram, 0x105c90, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main,  ---  CBRANCH (ram, 0x1032ac, 8) , (register, 0x206, 1)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x38, 8) COPY (const, 0x10, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103281, 8)
main,  ---  CALL (ram, 0x102520, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103b9c, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) COPY (register, 0xb0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103535, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x38, 8) COPY (const, 0x1074a1, 8)
main, (register, 0x8, 8) COPY (const, 0xe, 8)
main, (register, 0x30, 8) COPY (register, 0xb0, 8)
main, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x1032c5, 8) , (unique, 0xd600, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xa280, 8) COPY (register, 0x30, 8)
main, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
main, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1032c3, 8) , (register, 0x206, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1033e5, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098b0, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x43, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x43, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x43, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103431, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x52, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x52, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x52, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x30989c, 4) INT_OR (ram, 0x30989c, 4) , (const, 0x100000, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x30989c, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098f8, 4) COPY (const, 0x1, 4)
main, (register, 0x18, 8) COPY (ram, 0x3098e8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103338, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (const, 0x107232, 8)
main, (register, 0x8, 8) COPY (const, 0x5, 8)
main, (register, 0x30, 8) COPY (register, 0x18, 8)
main, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103328, 8) , (unique, 0xd600, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xa280, 8) COPY (register, 0x30, 8)
main, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
main, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103326, 8) , (register, 0x206, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1034a0, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098a8, 4) COPY (const, 0x0, 4)
main, (register, 0x18, 8) COPY (ram, 0x3098e0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103365, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (const, 0x107232, 8)
main, (register, 0x8, 8) COPY (const, 0x5, 8)
main, (register, 0x30, 8) COPY (register, 0x18, 8)
main, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103355, 8) , (unique, 0xd600, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xa280, 8) COPY (register, 0x30, 8)
main, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
main, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103353, 8) , (register, 0x206, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x10340b, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098a4, 4) COPY (const, 0x0, 4)
main, (register, 0x0, 4) COPY (ram, 0x30901c, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
main, (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x38, 8) INT_SEXT (register, 0x0, 4)
main, (ram, 0x309018, 4) COPY (register, 0x0, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10337c, 8)
main,  ---  CALL (ram, 0x102520, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098d0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103b9c, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103642, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309800, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309800, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309800, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103642, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x103614, 8) , (unique, 0xd080, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1033bc, 8)
main,  ---  CALL (ram, 0x105bf0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2088, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
main, (register, 0x8, 8) INT_XOR (register, 0x8, 8) , (unique, 0xbd80, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x10360f, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x2098, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  RETURN (register, 0x288, 8)
main, (register, 0x30, 8) COPY (const, 0x1072d7, 8)
main, (register, 0x38, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1033f4, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103600, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098b0, 4) COPY (const, 0x2, 4)
main,  ---  BRANCH (ram, 0x102c9e, 8)
main, (register, 0x30, 8) COPY (const, 0x10723f, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10341a, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1034c2, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098a4, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x103365, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x6c, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x6c, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x6c, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103592, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x66, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x66, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x66, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main,  ---  BRANCH (ram, 0x1035a5, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x8, 8) COPY (ram, 0x3098d8, 8)
main, (register, 0x10, 8) COPY (const, 0x1069f8, 8)
main, (register, 0x80, 8) COPY (register, 0x18, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103470, 8)
main,  ---  CALL (ram, 0x1025c0, 8)
main, (register, 0x0, 8) COPY (const, 0x2, 8)
main,  ---  BRANCH (ram, 0x1033bc, 8)
main, (register, 0x0, 8) COPY (const, 0x1071b8, 8)
main, (ram, 0x3098c8, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102b46, 8)
main, (register, 0x0, 8) COPY (const, 0x1071bb, 8)
main, (ram, 0x3098c8, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x102b46, 8)
main, (register, 0x30, 8) COPY (const, 0x107237, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1034af, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1034ec, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098a8, 4) COPY (const, 0x2, 4)
main,  ---  BRANCH (ram, 0x103338, 8)
main, (register, 0x10, 8) COPY (const, 0x106ab0, 8)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1034e2, 8)
main,  ---  CALL (ram, 0x1025c0, 8)
main, (register, 0x0, 8) COPY (const, 0x2, 8)
main,  ---  BRANCH (ram, 0x1033bc, 8)
main, (register, 0x30, 8) COPY (const, 0x10723f, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1034fb, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1035f1, 8) , (unique, 0xc680, 1)
main, (ram, 0x3098a8, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x103338, 8)
main, (register, 0x30, 8) COPY (const, 0x1071eb, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103521, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1035c8, 8) , (register, 0x206, 1)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x10, 8) COPY (const, 0x106a30, 8)
main,  ---  BRANCH (ram, 0x1034cc, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x1032ac, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x309878, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309878, 4) , (const, 0x0, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x309878, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102d21, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309868, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309868, 4) , (const, 0x0, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x309868, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102d2f, 8) , (unique, 0xc680, 1)
main,  ---  BRANCH (ram, 0x102d39, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x106950, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103586, 8)
main,  ---  CALL (ram, 0x1025c0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10358b, 8)
main,  ---  CALL (ram, 0x105bf0, 8)
main, (register, 0x38, 4) COPY (register, 0x0, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103592, 8)
main,  ---  CALL (ram, 0x104210, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x4c, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4c, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x4c, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x46, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x46, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x46, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102df5, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x30989c, 4) INT_OR (ram, 0x30989c, 4) , (const, 0x200000, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x30989c, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098f8, 4) COPY (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x10330b, 8)
main, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1035d7, 8)
main,  ---  CALL (ram, 0x1024d0, 8)
main, (register, 0x38, 4) COPY (register, 0x0, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1035de, 8)
main,  ---  CALL (ram, 0x102390, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x30987c, 4) COPY (register, 0x0, 4)
main,  ---  CBRANCH (ram, 0x102dd8, 8) , (register, 0x206, 1)
main,  ---  BRANCH (ram, 0x102daf, 8)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x10, 8) COPY (const, 0x106a88, 8)
main,  ---  BRANCH (ram, 0x1034cc, 8)
main, (register, 0x8, 8) COPY (register, 0xb0, 8)
main, (register, 0x10, 8) COPY (const, 0x106978, 8)
main,  ---  BRANCH (ram, 0x103570, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103614, 8)
main,  ---  CALL (ram, 0x1023f0, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10362b, 8)
main,  ---  CALL (ram, 0x1045d0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3097e8, 8) COPY (register, 0x0, 8)
main, (ram, 0x3097f0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103bbc, 8) , (register, 0x206, 1)
main, (register, 0x28, 8) COPY (ram, 0x3097f0, 8)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10369b, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x88, 4) COPY (register, 0x18, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x10366d, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 8) COPY (ram, 0x3097f0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main, (register, 0x88, 1) COPY (unique, 0xc680, 1)
main, (register, 0x10, 4) COPY (ram, 0x309898, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x30, 4) COPY (ram, 0x30989c, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x80, 8) COPY (const, 0x107244, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10368a, 8)
main,  ---  CALL (ram, 0x10266f, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103bbc, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x10364e, 8)
main, (register, 0x18, 8) COPY (ram, 0x309800, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1036d1, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x8, 4) COPY (ram, 0x309898, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x10, 8) COPY (const, 0x3097e8, 8)
main, (register, 0x30, 8) COPY (const, 0x3097f0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1036c4, 8)
main,  ---  CALL (ram, 0x1028fb, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103bbc, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x1036a2, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x309890, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309890, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309890, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1036e5, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309888, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309888, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309888, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1036ec, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x309010, 4) INT_OR (ram, 0x309010, 4) , (const, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x309010, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x309010, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x309010, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
main, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x58c00, 1) INT_AND (ram, 0x309010, 1) , (const, 0x1, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10370a, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x100000, 8)
main, (register, 0x38, 8) COPY (const, 0x8000, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103707, 8)
main,  ---  CALL (ram, 0x102510, 8)
main, (register, 0xa0, 8) COPY (register, 0x0, 8)
main, (register, 0x18, 8) COPY (ram, 0x3097f0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (register, 0xa8, 8) COPY (unique, 0x3800, 8)
main, (register, 0x28, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103845, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x30, 4) COPY (ram, 0x309010, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x10, 8) COPY (register, 0xa8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103736, 8)
main,  ---  CALL (ram, 0x102580, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x0, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103761, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103759, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103759, 8) , (register, 0x206, 1)
main, (register, 0x10, 8) COPY (register, 0xa0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103759, 8)
main,  ---  CALL (ram, 0x1025e0, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x10371b, 8)
main, (register, 0x0, 8) COPY (ram, 0x3097f0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103836, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (register, 0x18, 8) COPY (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (const, 0x107251, 8)
main, (register, 0x80, 4) COPY (register, 0x28, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (register, 0x10, 8) COPY (const, 0x10, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103795, 8)
main,  ---  CALL (ram, 0x102610, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x106ad8, 8)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1037ba, 8)
main,  ---  CALL (ram, 0x1025c0, 8)
main, (register, 0x18, 8) COPY (const, 0x2, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1037cc, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (register, 0xa0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1037cc, 8)
main,  ---  CALL (ram, 0x102620, 8)
main, (register, 0x38, 8) COPY (ram, 0x3098d0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1037dd, 8) , (register, 0x206, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1037dd, 8)
main,  ---  CALL (ram, 0x102340, 8)
main, (register, 0x38, 8) COPY (ram, 0x3097f0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1037e9, 8)
main,  ---  CALL (ram, 0x102630, 8)
main, (register, 0x38, 8) COPY (ram, 0x3097e0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1037f5, 8)
main,  ---  CALL (ram, 0x102630, 8)
main, (register, 0x38, 8) COPY (ram, 0x3097c0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103801, 8)
main,  ---  CALL (ram, 0x102630, 8)
main, (register, 0x38, 8) COPY (ram, 0x3097d0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10380d, 8)
main,  ---  CALL (ram, 0x102630, 8)
main, (register, 0x38, 8) COPY (ram, 0x3097b0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103819, 8)
main,  ---  CALL (ram, 0x102630, 8)
main, (register, 0x38, 8) COPY (ram, 0x309830, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103921, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103831, 8)
main,  ---  CALL (ram, 0x102340, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main,  ---  BRANCH (ram, 0x103820, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbb00, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (register, 0x18, 8) COPY (unique, 0x3800, 8)
main,  ---  BRANCH (ram, 0x103795, 8)
main, (register, 0x0, 8) COPY (ram, 0x3097f0, 8)
main, (register, 0x30, 8) COPY (ram, 0x309890, 8)
main, (register, 0x8, 8) COPY (ram, 0x309888, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103886, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103870, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x2, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbe00, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103881, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbe00, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x28, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x10385a, 8)
main, (register, 0xb0, 8) COPY (const, 0x308ba0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0xa8, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1038e5, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x88, 4) COPY (register, 0xa8, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1038b6, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main, (register, 0x88, 1) COPY (unique, 0xc680, 1)
main, (register, 0x0, 8) COPY (const, 0x308b80, 8)
main, (register, 0x30, 4) COPY (ram, 0x30989c, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1038d3, 8)
main,  ---  CALL (ram, 0x10266f, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1037ba, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xa8, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xa8, 4) , (const, 0x1, 4)
main, (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)
main, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x10389c, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x8, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x8, 8)
main, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (const, 0x20, 8)
main, (unique, 0x28300, 8) INT_SUB (register, 0x18, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x10388f, 8) , (unique, 0xc680, 1)
main, (register, 0x18, 8) COPY (ram, 0x309820, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10393a, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x3097d8, 8)
main, (register, 0x30, 8) COPY (const, 0x3097e0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103914, 8)
main,  ---  CALL (ram, 0x1028fb, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1037ba, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x1038f6, 8)
main, (register, 0x38, 8) COPY (ram, 0x309820, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x10396c, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103935, 8)
main,  ---  CALL (ram, 0x102340, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main,  ---  BRANCH (ram, 0x103928, 8)
main, (register, 0x18, 8) COPY (ram, 0x309830, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103989, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x3097c8, 8)
main, (register, 0x30, 8) COPY (const, 0x3097d0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10395f, 8)
main,  ---  CALL (ram, 0x1028fb, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1037ba, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x103941, 8)
main, (register, 0x38, 8) COPY (ram, 0x309800, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a28, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103984, 8)
main,  ---  CALL (ram, 0x102340, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main,  ---  BRANCH (ram, 0x103973, 8)
main, (register, 0x28, 8) COPY (ram, 0x309810, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103b2e, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (register, 0xa8, 8) COPY (unique, 0x3800, 8)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103ad9, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103ab5, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103ab5, 8) , (unique, 0xc680, 1)
main, (register, 0xb8, 8) COPY (ram, 0x308f90, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (register, 0xb0, 8)
main, (register, 0x30, 8) COPY (const, 0x200a, 8)
main, (register, 0x38, 8) COPY (register, 0xa8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1039dd, 8)
main,  ---  CALL (ram, 0x102490, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a9f, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 8) INT_OR (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0xa8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xd900, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
main,  ---  CBRANCH (ram, 0x1039f1, 8) , (unique, 0xd900, 1)
main, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xae80, 8) COPY (register, 0x38, 8)
main, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
main, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
main, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (unique, 0xb100, 1)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (unique, 0xb100, 1)
main, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
main, (unique, 0x51d80, 1) INT_SUB (register, 0x0, 1) , (unique, 0xb100, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x51d80, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x51d80, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x51d80, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xda00, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x1039ef, 8) , (unique, 0xda00, 1)
main, (register, 0x10, 8) COPY (register, 0x8, 8)
main, (register, 0x10, 8) INT_NEGATE (register, 0x10, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (register, 0xa8, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0xa8, 8)
main, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0xa8, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0xa8, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0xa8, 8)
main, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0xa8, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103a41, 8) , (unique, 0xc780, 1)
main, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103a0f, 8)
main,  ---  CALL (ram, 0x102600, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1)
main, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)
main, (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)
main, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
main, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a41, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x103a01, 8)
main, (register, 0x38, 8) COPY (ram, 0x309810, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a6e, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103a3c, 8)
main,  ---  CALL (ram, 0x102340, 8)
main, (register, 0x38, 8) COPY (register, 0x28, 8)
main,  ---  BRANCH (ram, 0x103a2f, 8)
main, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb00, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x1039cd, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0xa8, 8)
main, (register, 0x30, 1) COPY (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103a62, 8)
main,  ---  CALL (ram, 0x105ba0, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x103a92, 8) , (unique, 0xce80, 1)
main, (register, 0x18, 4) COPY (register, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main,  ---  BRANCH (ram, 0x1039cd, 8)
main, (register, 0x38, 8) COPY (ram, 0x309840, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a8b, 8) , (register, 0x206, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (ram, 0x309840, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103a89, 8)
main,  ---  CALL (ram, 0x102340, 8)
main,  ---  BRANCH (ram, 0x103a6e, 8)
main, (register, 0x38, 4) COPY (register, 0x18, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103a92, 8)
main,  ---  CALL (ram, 0x104210, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103a9b, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103a67, 8) , (register, 0x206, 1)
main, (register, 0x0, 4) COPY (register, 0x18, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main,  ---  BRANCH (ram, 0x103a67, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0xb0, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (unique, 0x28c00, 8) INT_SUB (register, 0xb0, 8) , (unique, 0xbd80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103aac, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103aac, 8)
main,  ---  CALL (ram, 0x1023c0, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
main, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x1039a3, 8)
main, (register, 0x30, 8) COPY (const, 0x107104, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103ac1, 8)
main,  ---  CALL (ram, 0x102590, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x103b65, 8) , (register, 0x206, 1)
main, (register, 0xb8, 8) COPY (ram, 0x308f90, 8)
main,  ---  BRANCH (ram, 0x1039cd, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x5200, 4)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x5200, 4)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28b00, 4) INT_SUB (register, 0x0, 4) , (unique, 0x5200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103af4, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309810, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309810, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x309810, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x28, 1) COPY (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x1037bf, 8) , (unique, 0xce80, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x3098a8, 4) , (const, 0x2, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x10, 4) COPY (register, 0x28, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x30, 1) COPY (register, 0x206, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103b20, 8)
main,  ---  CALL (ram, 0x105ba0, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x103b84, 8) , (unique, 0xce80, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x18, 4) COPY (register, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main,  ---  BRANCH (ram, 0x103af4, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x5200, 4)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x5200, 4)
main, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28b00, 4) INT_SUB (register, 0x0, 4) , (unique, 0x5200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x103999, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x309014, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x309014, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x309014, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x103b91, 8) , (unique, 0xce80, 1)
main, (register, 0x30, 8) COPY (ram, 0x309780, 8)
main, (register, 0x10, 8) COPY (register, 0x30, 8)
main, (register, 0x0, 8) COPY (ram, 0x308f90, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103b5e, 8)
main,  ---  CALL (ram, 0x104690, 8)
main, (register, 0x18, 4) COPY (register, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main,  ---  BRANCH (ram, 0x1037bf, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103b6a, 8)
main,  ---  CALL (ram, 0x102350, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103b71, 8)
main,  ---  CALL (ram, 0x1025d0, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x80, 8) COPY (register, 0x0, 8)
main, (register, 0x10, 8) COPY (const, 0x1064c8, 8)
main,  ---  BRANCH (ram, 0x1037a4, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103b8d, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103b25, 8) , (register, 0x206, 1)
main, (register, 0x0, 4) COPY (register, 0x18, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main,  ---  BRANCH (ram, 0x103b25, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (ram, 0x309780, 8)
main,  ---  BRANCH (ram, 0x103b4f, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x38, 8) COPY (const, 0x10709f, 8)
main, (register, 0x10, 8) COPY (const, 0x18, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103bbc, 8)
main,  ---  CALL (ram, 0x1025b0, 8)
main, (register, 0x18, 8) COPY (const, 0x2, 8)
main,  ---  BRANCH (ram, 0x1037cc, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x61, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x61, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x61, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cc8, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x6e, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x6e, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x6e, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cdd, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x79, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x79, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x79, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cdd, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x3, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cdd, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x30989c, 4) INT_OR (ram, 0x30989c, 4) , (const, 0x400000, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x30989c, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098f8, 4) COPY (const, 0x3, 4)
main,  ---  BRANCH (ram, 0x10330b, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (const, 0x1071ce, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x103570, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x18, 8) COPY (register, 0xb8, 8)
main, (register, 0x10, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x1030fb, 8)
main, (register, 0x38, 8) COPY (const, 0x1071f7, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103c3d, 8)
main,  ---  CALL (ram, 0x102330, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098d8, 8) COPY (register, 0x0, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103c7d, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (const, 0x10719e, 8)
main, (register, 0x18, 8) COPY (const, 0x10719e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103c5c, 8)
main,  ---  CALL (ram, 0x102330, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098d8, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x102d6f, 8) , (register, 0x206, 1)
main,  ---  BRANCH (ram, 0x102d50, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x18, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main,  ---  BRANCH (ram, 0x102cdb, 8)
main, (register, 0x18, 8) COPY (const, 0x1071a7, 8)
main,  ---  BRANCH (ram, 0x102d50, 8)
main, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
main, (register, 0x38, 8) COPY (const, 0x1069a8, 8)
main, (register, 0x10, 8) COPY (const, 0x4b, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103ca9, 8)
main,  ---  CALL (ram, 0x1025b0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103cae, 8)
main,  ---  CALL (ram, 0x105bf0, 8)
main, (register, 0x38, 4) COPY (register, 0x0, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103cb5, 8)
main,  ---  CALL (ram, 0x104210, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (unique, 0x28300, 8) INT_SUB (ram, 0x3097f0, 8) , (const, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x102cdb, 8) , (unique, 0xc680, 1)
main,  ---  BRANCH (ram, 0x103586, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x41, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x41, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x41, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cdd, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x4e, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x4e, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x4e, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103cdd, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x59, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x59, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x59, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103be3, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x1071bf, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103cec, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x103d03, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (const, 0x10722a, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103cff, 8)
main,  ---  CALL (ram, 0x1024a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x103d1c, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (ram, 0x30989c, 4) INT_OR (ram, 0x30989c, 4) , (const, 0x500000, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x30989c, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x30989c, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x3098f8, 4) COPY (const, 0x4, 4)
main,  ---  BRANCH (ram, 0x10330b, 8)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x10, 8) COPY (const, 0x106a58, 8)
main,  ---  BRANCH (ram, 0x1034cc, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_start, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_start, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (register, 0x88, 8) COPY (register, 0x10, 8)
_start, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_start, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_start, (register, 0x10, 8) COPY (register, 0x20, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x20, 8) INT_AND (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8)
_start, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_start, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (unique, 0xe780, 8) COPY (register, 0x0, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (unique, 0xe780, 8) COPY (register, 0x20, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (register, 0x80, 8) COPY (const, 0x1062d0, 8)
_start, (register, 0x8, 8) COPY (const, 0x106260, 8)
_start, (register, 0x38, 8) COPY (const, 0x102ac0, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103d54, 8)
_start,  ---  CALL (ram, 0x102480, 8)
_start,  ---  BRANCH (ram, 0x103d54, 8)
deregister_tm_clones, (register, 0x38, 8) COPY (const, 0x309798, 8)
deregister_tm_clones, (register, 0x0, 8) COPY (const, 0x30979f, 8)
deregister_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
deregister_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x38, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x38, 8)
deregister_tm_clones, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x38, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (unique, 0x28300, 8) INT_SUB (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x103d90, 8) , (unique, 0xc780, 1)
deregister_tm_clones, (register, 0x0, 8) COPY (ram, 0x308f80, 8)
deregister_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x103d90, 8) , (register, 0x206, 1)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  RETURN (register, 0x288, 8)
register_tm_clones, (register, 0x38, 8) COPY (const, 0x309798, 8)
register_tm_clones, (register, 0x30, 8) COPY (const, 0x309798, 8)
register_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
register_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x38, 8)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x38, 8)
register_tm_clones, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
register_tm_clones, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x51c00, 8) COPY (register, 0x30, 8)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (unique, 0x51b80, 4)
register_tm_clones, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
register_tm_clones, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
register_tm_clones, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
register_tm_clones, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
register_tm_clones, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x0, 8) COPY (register, 0x30, 8)
register_tm_clones, (unique, 0x57880, 4) INT_AND (const, 0x3f, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x57900, 8) COPY (register, 0x0, 8)
register_tm_clones, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57880, 4)
register_tm_clones, (unique, 0x16100, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x16180, 4) INT_SUB (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16200, 8) INT_RIGHT (unique, 0x57900, 8) , (unique, 0x16180, 4)
register_tm_clones, (unique, 0x16280, 8) INT_AND (unique, 0x16200, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x16380, 1) INT_NOTEQUAL (unique, 0x16280, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16400, 1) BOOL_NEGATE (unique, 0x16100, 1)
register_tm_clones, (unique, 0x16480, 1) INT_AND (unique, 0x16400, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x16500, 1) INT_AND (unique, 0x16100, 1) , (unique, 0x16380, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x16480, 1) , (unique, 0x16500, 1)
register_tm_clones, (unique, 0x16680, 1) INT_EQUAL (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16780, 1) INT_SLESS (unique, 0x57900, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16800, 1) BOOL_NEGATE (unique, 0x16680, 1)
register_tm_clones, (unique, 0x16880, 1) INT_AND (unique, 0x16800, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x16900, 1) INT_AND (unique, 0x16680, 1) , (unique, 0x16780, 1)
register_tm_clones, (register, 0x20b, 1) INT_OR (unique, 0x16880, 1) , (unique, 0x16900, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
register_tm_clones, (unique, 0x51780, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)
register_tm_clones, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51780, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (const, 0x1, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x103de0, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x0, 8) COPY (ram, 0x308fa8, 8)
register_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x103de0, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  RETURN (register, 0x288, 8)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x309798, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x309798, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x27d00, 1) INT_SUB (ram, 0x309798, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
__do_global_dtors_aux, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
__do_global_dtors_aux, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x103e20, 8) , (unique, 0xc680, 1)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x308fb8, 8) , (const, 0x0, 8)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x308fb8, 8) , (const, 0x0, 8)
__do_global_dtors_aux, (unique, 0x28300, 8) INT_SUB (ram, 0x308fb8, 8) , (const, 0x0, 8)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
__do_global_dtors_aux, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
__do_global_dtors_aux, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__do_global_dtors_aux, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__do_global_dtors_aux, (register, 0x28, 8) COPY (register, 0x20, 8)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x103e13, 8) , (register, 0x206, 1)
__do_global_dtors_aux, (register, 0x38, 8) COPY (ram, 0x309008, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103e13, 8)
__do_global_dtors_aux,  ---  CALL (ram, 0x1025f0, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103e18, 8)
__do_global_dtors_aux,  ---  CALL (ram, 0x103d60, 8)
__do_global_dtors_aux, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux, (ram, 0x309798, 1) COPY (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  RETURN (register, 0x288, 8)
frame_dummy, (register, 0x38, 8) COPY (const, 0x308ad0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
frame_dummy,  ---  CBRANCH (ram, 0x103e48, 8) , (unique, 0xc680, 1)
frame_dummy,  ---  BRANCH (ram, 0x103da0, 8)
frame_dummy, (register, 0x0, 8) COPY (ram, 0x308fa0, 8)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy,  ---  CBRANCH (ram, 0x103e3d, 8) , (register, 0x206, 1)
frame_dummy, (unique, 0xe780, 8) COPY (register, 0x28, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
frame_dummy, (register, 0x28, 8) COPY (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x103e5a, 8)
frame_dummy,  ---  CALLIND (register, 0x0, 8)
frame_dummy, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  BRANCH (ram, 0x103da0, 8)
end_of_line, (register, 0x0, 4) COPY (ram, 0x3098f8, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x104068, 8) , (register, 0x206, 1)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x104000, 8) , (unique, 0xce80, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f40, 8) , (register, 0x206, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104038, 8) , (unique, 0xc680, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (unique, 0xc580, 1)
end_of_line, (register, 0x8, 4) COPY (ram, 0x309848, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line, (register, 0x98, 1) COPY (unique, 0xc680, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (unique, 0x27f00, 4) INT_SUB (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x0, 4) COPY (register, 0x80, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040c0, 8) , (unique, 0xce80, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040c0, 8) , (register, 0x206, 1)
end_of_line, (register, 0x8, 8) COPY (const, 0x1079c0, 8)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
end_of_line, (register, 0x88, 8) INT_SEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x0, 8) COPY (const, 0x107a00, 8)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
end_of_line, (register, 0x80, 4) INT_AND (register, 0x80, 4) , (unique, 0xbc80, 4)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x2, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8)
end_of_line, (register, 0x8, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x90, 8) COPY (register, 0x88, 8)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x88, 8) COPY (unique, 0x3100, 8)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
end_of_line, (unique, 0x53180, 4) COPY (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_LEFT (register, 0x80, 4) , (unique, 0x53100, 1)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
end_of_line, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
end_of_line, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
end_of_line, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
end_of_line, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
end_of_line, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15580, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
end_of_line, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
end_of_line, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
end_of_line, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
end_of_line, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
end_of_line, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12f80, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
end_of_line, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
end_of_line, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
end_of_line, (unique, 0x13280, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
end_of_line, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
end_of_line, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
end_of_line, (unique, 0x13500, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
end_of_line, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
end_of_line, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
end_of_line, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f07, 8) , (unique, 0xce80, 1)
end_of_line, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)
end_of_line, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x88, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x88, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
end_of_line, (unique, 0x53180, 4) COPY (register, 0x0, 4)
end_of_line, (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x53100, 1)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
end_of_line, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
end_of_line, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
end_of_line, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
end_of_line, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
end_of_line, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
end_of_line, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
end_of_line, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
end_of_line, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
end_of_line, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
end_of_line, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
end_of_line, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
end_of_line, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
end_of_line, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
end_of_line, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
end_of_line, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
end_of_line, (unique, 0x13500, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
end_of_line, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
end_of_line, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
end_of_line, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x80, 4) INT_OR (register, 0x80, 4) , (register, 0x0, 4)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x103ef0, 8) , (unique, 0xc680, 1)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8)
end_of_line, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040b0, 8) , (register, 0x206, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040a0, 8) , (register, 0x206, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
end_of_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
end_of_line,  ---  CBRANCH (ram, 0x103e9c, 8) , (unique, 0xc900, 1)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (register, 0x0, 8) COPY (register, 0x30, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (unique, 0xc580, 1)
end_of_line, (register, 0x0, 4) COPY (ram, 0x309848, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line, (register, 0x90, 1) COPY (unique, 0xc680, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (unique, 0x27f00, 4) INT_SUB (register, 0x80, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x0, 4) COPY (register, 0x80, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040d0, 8) , (unique, 0xce80, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59000, 1) INT_AND (register, 0x90, 1) , (register, 0x90, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040d0, 8) , (register, 0x206, 1)
end_of_line, (register, 0x8, 8) COPY (const, 0x1079c0, 8)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
end_of_line, (register, 0x88, 8) INT_SEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x0, 8) COPY (const, 0x107a00, 8)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
end_of_line, (register, 0x80, 4) INT_AND (register, 0x80, 4) , (unique, 0xbc80, 4)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x2, 8)
end_of_line, (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8)
end_of_line, (register, 0x8, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x98, 8) COPY (register, 0x88, 8)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x88, 8) COPY (unique, 0x3100, 8)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
end_of_line, (unique, 0x53180, 4) COPY (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_LEFT (register, 0x80, 4) , (unique, 0x53100, 1)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
end_of_line, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
end_of_line, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
end_of_line, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
end_of_line, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
end_of_line, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15580, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
end_of_line, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
end_of_line, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
end_of_line, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
end_of_line, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
end_of_line, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12f80, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
end_of_line, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
end_of_line, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
end_of_line, (unique, 0x13280, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
end_of_line, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
end_of_line, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
end_of_line, (unique, 0x13500, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
end_of_line, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
end_of_line, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
end_of_line, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x103fb7, 8) , (unique, 0xce80, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)
end_of_line, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x6, 4)
end_of_line, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x88, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x88, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
end_of_line, (unique, 0x53180, 4) COPY (register, 0x0, 4)
end_of_line, (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x53100, 1)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
end_of_line, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
end_of_line, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
end_of_line, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
end_of_line, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
end_of_line, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
end_of_line, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
end_of_line, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
end_of_line, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
end_of_line, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
end_of_line, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
end_of_line, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
end_of_line, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
end_of_line, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
end_of_line, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
end_of_line, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
end_of_line, (unique, 0x13500, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
end_of_line, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
end_of_line, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
end_of_line, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
end_of_line, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x80, 4) INT_OR (register, 0x80, 4) , (register, 0x0, 4)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) COPY (const, 0x0, 1)
end_of_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
end_of_line, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x103fa0, 8) , (unique, 0xc680, 1)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x98, 8) , (const, 0x1, 8)
end_of_line, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x0, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x80, 4) , (const, 0xd, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040a0, 8) , (register, 0x206, 1)
end_of_line, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040da, 8) , (unique, 0xce80, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0x85, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0x85, 4)
end_of_line, (unique, 0x27f00, 4) INT_SUB (register, 0x80, 4) , (const, 0x85, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040fb, 8) , (register, 0x206, 1)
end_of_line, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040e0, 8) , (unique, 0xcc00, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0x2028, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0x2028, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x2028, 4)
end_of_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0x1, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x80, 4) , (const, 0x1, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
end_of_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040e0, 8) , (unique, 0xc900, 1)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x3, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (register, 0x0, 8) COPY (register, 0x38, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104038, 8) , (unique, 0xc680, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (unique, 0xc580, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x10402a, 8) , (register, 0x206, 1)
end_of_line, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (register, 0x206, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104018, 8) , (unique, 0xc680, 1)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x0, 8) COPY (unique, 0x3100, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (unique, 0xc580, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x10402a, 8) , (register, 0x206, 1)
end_of_line, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (register, 0x206, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104050, 8) , (unique, 0xc680, 1)
end_of_line,  ---  BRANCH (ram, 0x10402a, 8)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x8, 8) COPY (unique, 0x3100, 8)
end_of_line,  ---  BRANCH (ram, 0x104078, 8)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (const, 0x1, 8)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (const, 0x1, 8)
end_of_line, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x30, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
end_of_line,  ---  CBRANCH (ram, 0x104082, 8) , (unique, 0xc580, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xd, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104070, 8) , (unique, 0xc680, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x8, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x8, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x8, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f30, 8) , (unique, 0xc780, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x104070, 8) , (unique, 0xc680, 1)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x2, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)
end_of_line, (register, 0x0, 8) COPY (unique, 0x3100, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040b0, 8) , (unique, 0xc780, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_of_line, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040f0, 8) , (register, 0x206, 1)
end_of_line, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
end_of_line, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (register, 0x0, 8) COPY (register, 0x38, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x0, 8) COPY (const, 0x1, 8)
end_of_line,  ---  BRANCH (ram, 0x103f0d, 8)
end_of_line, (register, 0x0, 8) COPY (const, 0x1, 8)
end_of_line,  ---  BRANCH (ram, 0x103fbd, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x28200, 4) INT_SUB (register, 0x80, 4) , (const, 0xa, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
end_of_line,  ---  CBRANCH (ram, 0x1040b0, 8) , (unique, 0xcd00, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
end_of_line, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
end_of_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
end_of_line,  ---  CBRANCH (ram, 0x103f51, 8) , (unique, 0xc900, 1)
end_of_line,  ---  BRANCH (ram, 0x103f30, 8)
end_of_line, (unique, 0xbd00, 4) COPY (const, 0x2, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd00, 4)
end_of_line, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
end_of_line, (register, 0x0, 8) COPY (unique, 0x3100, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x90, 1) , (const, 0x1, 1)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x90, 1) , (const, 0x1, 1)
end_of_line, (unique, 0x27d00, 1) INT_SUB (register, 0x90, 1) , (const, 0x1, 1)
end_of_line, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1)
end_of_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x0, 4)
end_of_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x0, 4)
end_of_line, (unique, 0x12800, 4) INT_SUB (register, 0x0, 4) , (register, 0x0, 4)
end_of_line, (unique, 0x12880, 1) INT_LESS (unique, 0x12800, 4) , (unique, 0x12600, 4)
end_of_line, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0x12880, 1)
end_of_line, (unique, 0x12980, 1) INT_SBORROW (unique, 0x12800, 4) , (unique, 0x12600, 4)
end_of_line, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0x12980, 1)
end_of_line, (register, 0x0, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
end_of_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
end_of_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
end_of_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
end_of_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
end_of_line, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4)
end_of_line, (register, 0x0, 8) COPY (register, 0x38, 8)
end_of_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_of_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_of_line,  ---  RETURN (register, 0x288, 8)
test_incexc, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
test_incexc, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
test_incexc, (register, 0xa8, 8) COPY (register, 0x38, 8)
test_incexc, (unique, 0xe780, 8) COPY (register, 0x28, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
test_incexc, (unique, 0xe780, 8) COPY (register, 0x18, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
test_incexc, (register, 0x18, 8) COPY (register, 0x10, 8)
test_incexc, (register, 0x28, 8) COPY (register, 0x30, 8)
test_incexc, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104128, 8)
test_incexc,  ---  CALL (ram, 0x1023e0, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0xa0, 4) COPY (register, 0x0, 4)
test_incexc, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
test_incexc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
test_incexc,  ---  CBRANCH (ram, 0x104140, 8) , (unique, 0xc680, 1)
test_incexc,  ---  BRANCH (ram, 0x104170, 8)
test_incexc, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
test_incexc, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc,  ---  CBRANCH (ram, 0x104170, 8) , (register, 0x206, 1)
test_incexc, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
test_incexc, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
test_incexc, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
test_incexc, (unique, 0x3f780, 8) COPY (const, 0x0, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
test_incexc, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3f780, 8) COPY (const, 0x0, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
test_incexc, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
test_incexc, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x8, 4) COPY (register, 0xa0, 4)
test_incexc, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
test_incexc, (register, 0x10, 8) COPY (register, 0xa8, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10415b, 8)
test_incexc,  ---  CALL (ram, 0x102430, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x38, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  CBRANCH (ram, 0x104138, 8) , (register, 0x207, 1)
test_incexc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
test_incexc, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  RETURN (register, 0x288, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc,  ---  CBRANCH (ram, 0x1041a8, 8) , (register, 0x206, 1)
test_incexc, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
test_incexc, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
test_incexc, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
test_incexc, (unique, 0x3f780, 8) COPY (const, 0x0, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
test_incexc, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3f780, 8) COPY (const, 0x0, 8)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
test_incexc, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x8, 4) COPY (register, 0xa0, 4)
test_incexc, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
test_incexc, (register, 0x10, 8) COPY (register, 0xa8, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
test_incexc, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104193, 8)
test_incexc,  ---  CALL (ram, 0x102430, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (unique, 0xca00, 1) BOOL_NEGATE (register, 0x207, 1)
test_incexc,  ---  CBRANCH (ram, 0x1041a8, 8) , (unique, 0xca00, 1)
test_incexc, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
test_incexc, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
test_incexc, (register, 0x200, 1) COPY (const, 0x0, 1)
test_incexc, (register, 0x20b, 1) COPY (const, 0x0, 1)
test_incexc, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
test_incexc,  ---  CBRANCH (ram, 0x104178, 8) , (unique, 0xc680, 1)
test_incexc,  ---  BRANCH (ram, 0x104161, 8)
test_incexc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
test_incexc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
test_incexc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
test_incexc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
test_incexc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
test_incexc, (register, 0x0, 8) COPY (const, 0x1, 8)
test_incexc, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
test_incexc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
test_incexc,  ---  RETURN (register, 0x288, 8)
read_one_line, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_one_line, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_one_line, (register, 0xa8, 4) COPY (register, 0x30, 4)
read_one_line, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
read_one_line, (unique, 0xe780, 8) COPY (register, 0x28, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_one_line, (unique, 0xe780, 8) COPY (register, 0x18, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_one_line, (register, 0xa0, 8) COPY (register, 0x10, 8)
read_one_line, (register, 0x18, 8) COPY (register, 0x38, 8)
read_one_line, (register, 0x200, 1) COPY (const, 0x0, 1)
read_one_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_one_line, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
read_one_line, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_one_line, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_one_line, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_one_line, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_one_line, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line,  ---  BRANCH (ram, 0x1041f3, 8)
read_one_line, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
read_one_line, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
read_one_line, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
read_one_line, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_one_line, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_one_line, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (unique, 0xba80, 1) COPY (register, 0x0, 1)
read_one_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xba80, 1)
read_one_line, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x1, 8)
read_one_line, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)
read_one_line, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
read_one_line, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
read_one_line, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
read_one_line, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0xa8, 4)
read_one_line, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0xa8, 4)
read_one_line, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0xa8, 4)
read_one_line, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
read_one_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_one_line,  ---  CBRANCH (ram, 0x104200, 8) , (unique, 0xcd00, 1)
read_one_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4)
read_one_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xa, 4)
read_one_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xa, 4)
read_one_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_one_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line,  ---  CBRANCH (ram, 0x104200, 8) , (register, 0x206, 1)
read_one_line, (register, 0x38, 8) COPY (register, 0xa0, 8)
read_one_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1041fb, 8)
read_one_line,  ---  CALL (ram, 0x102440, 8)
read_one_line, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
read_one_line, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
read_one_line, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
read_one_line, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_one_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_one_line,  ---  CBRANCH (ram, 0x1041e0, 8) , (unique, 0xc680, 1)
read_one_line, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_one_line, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_one_line, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_one_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_one_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_one_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_one_line, (register, 0x0, 4) COPY (register, 0x28, 4)
read_one_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_one_line, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_one_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_one_line,  ---  RETURN (register, 0x288, 8)
pcregrep_exit, (unique, 0xe780, 8) COPY (register, 0x28, 8)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep_exit, (unique, 0xe780, 8) COPY (register, 0x18, 8)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep_exit, (register, 0x18, 4) COPY (register, 0x38, 4)
pcregrep_exit, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
pcregrep_exit, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
pcregrep_exit, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
pcregrep_exit, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
pcregrep_exit, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep_exit, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep_exit, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep_exit, (register, 0x0, 4) COPY (ram, 0x309858, 4)
pcregrep_exit, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep_exit, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep_exit, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep_exit, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep_exit, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep_exit, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep_exit, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep_exit, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep_exit,  ---  CBRANCH (ram, 0x104229, 8) , (unique, 0xc680, 1)
pcregrep_exit, (register, 0x38, 4) COPY (register, 0x18, 4)
pcregrep_exit, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104229, 8)
pcregrep_exit,  ---  CALL (ram, 0x1025a0, 8)
pcregrep_exit, (register, 0x28, 8) COPY (ram, 0x308fc0, 8)
pcregrep_exit, (register, 0x10, 8) COPY (const, 0x106308, 8)
pcregrep_exit, (register, 0x88, 8) COPY (const, 0xffffffe5, 8)
pcregrep_exit, (register, 0x80, 8) COPY (const, 0xffffffeb, 8)
pcregrep_exit, (register, 0x8, 8) COPY (const, 0xfffffff8, 8)
pcregrep_exit, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep_exit, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep_exit, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep_exit, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep_exit, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep_exit, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep_exit, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep_exit, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep_exit, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
pcregrep_exit, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104258, 8)
pcregrep_exit,  ---  CALL (ram, 0x1025c0, 8)
pcregrep_exit, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
pcregrep_exit, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep_exit, (register, 0x38, 8) COPY (const, 0x106350, 8)
pcregrep_exit, (register, 0x10, 8) COPY (const, 0x37, 8)
pcregrep_exit, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep_exit, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep_exit,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104272, 8)
pcregrep_exit,  ---  CALL (ram, 0x1025b0, 8)
pcregrep_exit,  ---  BRANCH (ram, 0x104222, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (register, 0xb8, 4) COPY (register, 0x10, 4)
match_patterns, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
match_patterns, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (register, 0x0, 8) COPY (const, 0x10706d, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0x28, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0x18, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (register, 0x10, 8) COPY (const, 0x107060, 8)
match_patterns, (register, 0x28, 8) COPY (register, 0x38, 8)
match_patterns, (register, 0xa8, 8) COPY (register, 0x80, 8)
match_patterns, (register, 0x18, 8) COPY (register, 0x88, 8)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (const, 0xc9, 8)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (const, 0xc9, 8)
match_patterns, (unique, 0x28000, 8) INT_SUB (register, 0x30, 8) , (const, 0xc9, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28000, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28000, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (unique, 0x28000, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0xb0, 8) COPY (ram, 0x3097f0, 8)
match_patterns, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x200, 1)
match_patterns,  ---  CBRANCH (ram, 0x1042ba, 8) , (unique, 0x27800, 1)
match_patterns, (register, 0x0, 8) COPY (register, 0x10, 8)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
match_patterns,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
match_patterns,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
match_patterns,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
match_patterns, (register, 0x0, 8) COPY (const, 0xc8, 8)
match_patterns, (register, 0xa0, 8) COPY (const, 0x1, 8)
match_patterns, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x200, 1)
match_patterns,  ---  CBRANCH (ram, 0x1042d6, 8) , (unique, 0x27800, 1)
match_patterns, (register, 0x0, 8) COPY (register, 0x30, 8)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
match_patterns,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
match_patterns,  ---  CBRANCH (ram, 0x10431d, 8) , (register, 0x206, 1)
match_patterns, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
match_patterns, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
match_patterns, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
match_patterns, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x10, 8) COPY (register, 0x28, 8)
match_patterns, (unique, 0x3f780, 8) COPY (const, 0x63, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
match_patterns, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
match_patterns, (register, 0x88, 4) COPY (register, 0xb8, 4)
match_patterns, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
match_patterns, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
match_patterns, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
match_patterns, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
match_patterns, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104300, 8)
match_patterns,  ---  CALL (ram, 0x102430, 8)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
match_patterns,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbc80, 4)
match_patterns, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (unique, 0xca00, 1) BOOL_NEGATE (register, 0x207, 1)
match_patterns,  ---  CBRANCH (ram, 0x104400, 8) , (unique, 0xca00, 1)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
match_patterns, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
match_patterns,  ---  CBRANCH (ram, 0x104328, 8) , (unique, 0xc680, 1)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
match_patterns, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x200, 1) INT_CARRY (register, 0xa0, 4) , (const, 0x1, 4)
match_patterns, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
match_patterns, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
match_patterns, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
match_patterns,  ---  CBRANCH (ram, 0x1042e0, 8) , (unique, 0xc680, 1)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns,  ---  BRANCH (ram, 0x1043de, 8)
match_patterns, (register, 0xa8, 8) COPY (ram, 0x308fc0, 8)
match_patterns, (register, 0x10, 8) COPY (const, 0x106388, 8)
match_patterns, (register, 0x8, 4) COPY (register, 0x0, 4)
match_patterns, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
match_patterns, (register, 0x30, 8) COPY (const, 0x1, 8)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104348, 8)
match_patterns,  ---  CALL (ram, 0x1025c0, 8)
match_patterns, (register, 0x0, 8) COPY (ram, 0x3097f0, 8)
match_patterns, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
match_patterns, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
match_patterns, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
match_patterns, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
match_patterns, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
match_patterns, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns,  ---  CBRANCH (ram, 0x10436f, 8) , (register, 0x206, 1)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x10, 8) COPY (const, 0x107081, 8)
match_patterns, (register, 0x8, 4) COPY (register, 0xa0, 4)
match_patterns, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
match_patterns, (register, 0x30, 8) COPY (const, 0x1, 8)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10436f, 8)
match_patterns,  ---  CALL (ram, 0x1025c0, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
match_patterns, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10437d, 8)
match_patterns,  ---  CALL (ram, 0x102420, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
match_patterns, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
match_patterns, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x30, 8) COPY (const, 0x1, 8)
match_patterns, (register, 0x38, 8) COPY (register, 0x28, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104393, 8)
match_patterns,  ---  CALL (ram, 0x1025b0, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x38, 8) COPY (const, 0x10707e, 8)
match_patterns, (register, 0x10, 8) COPY (const, 0x2, 8)
match_patterns, (register, 0x30, 8) COPY (const, 0x1, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1043ad, 8)
match_patterns,  ---  CALL (ram, 0x1025b0, 8)
match_patterns, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
match_patterns, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffeb, 4)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffeb, 4)
match_patterns, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffeb, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x8, 1) COPY (register, 0x206, 1)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xfffffff8, 4)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xfffffff8, 4)
match_patterns, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xfffffff8, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x10, 1) COPY (register, 0x206, 1)
match_patterns, (register, 0x200, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x20b, 1) COPY (const, 0x0, 1)
match_patterns, (register, 0x8, 1) INT_OR (register, 0x8, 1) , (register, 0x10, 1)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x8, 1) , (const, 0x0, 1)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x12c00, 1) INT_AND (register, 0x8, 1) , (const, 0xff, 1)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
match_patterns,  ---  CBRANCH (ram, 0x1043f0, 8) , (unique, 0xc680, 1)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffe5, 4)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffe5, 4)
match_patterns, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffe5, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns,  ---  CBRANCH (ram, 0x1043f0, 8) , (register, 0x206, 1)
match_patterns, (register, 0x0, 4) COPY (ram, 0x3098a0, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
match_patterns, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
match_patterns, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
match_patterns, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x14, 4)
match_patterns, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x14, 4)
match_patterns, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x14, 4)
match_patterns, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (ram, 0x3098a0, 4) COPY (register, 0x10, 4)
match_patterns, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
match_patterns, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
match_patterns, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
match_patterns,  ---  CBRANCH (ram, 0x104407, 8) , (unique, 0xd080, 1)
match_patterns, (register, 0x0, 4) COPY (ram, 0x309870, 4)
match_patterns, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
match_patterns, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)
match_patterns, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
match_patterns, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
match_patterns, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
match_patterns, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
match_patterns, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
match_patterns, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
match_patterns, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
match_patterns, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  RETURN (register, 0x288, 8)
match_patterns, (ram, 0x309858, 4) COPY (const, 0x1, 4)
match_patterns,  ---  BRANCH (ram, 0x1043c4, 8)
match_patterns, (register, 0x0, 8) COPY (const, 0x1, 8)
match_patterns,  ---  BRANCH (ram, 0x1043de, 8)
match_patterns, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
match_patterns, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
match_patterns, (register, 0x38, 8) COPY (const, 0x1063c0, 8)
match_patterns, (register, 0x10, 8) COPY (const, 0x27, 8)
match_patterns, (register, 0x30, 8) COPY (const, 0x1, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104421, 8)
match_patterns,  ---  CALL (ram, 0x1025b0, 8)
match_patterns, (register, 0x38, 8) COPY (const, 0x2, 8)
match_patterns, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
match_patterns,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10442b, 8)
match_patterns,  ---  CALL (ram, 0x104210, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (register, 0xa0, 8) COPY (register, 0x10, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0x28, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (unique, 0xe780, 8) COPY (register, 0x18, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_after_lines, (register, 0x18, 8) COPY (register, 0x30, 8)
do_after_lines, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_after_lines, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
do_after_lines, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8)
do_after_lines, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x30, 8)
do_after_lines, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0x30, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
do_after_lines, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
do_after_lines,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
do_after_lines, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104528, 8) , (unique, 0xc780, 1)
do_after_lines, (register, 0x10, 4) COPY (ram, 0x3098b8, 4)
do_after_lines, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_after_lines, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104528, 8) , (unique, 0xce80, 1)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x0, 8) COPY (unique, 0x3800, 8)
do_after_lines, (register, 0xb0, 8) COPY (register, 0x8, 8)
do_after_lines, (register, 0x28, 8) COPY (const, 0x1, 8)
do_after_lines, (register, 0xa8, 8) COPY (ram, 0x308f88, 8)
do_after_lines, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
do_after_lines,  ---  BRANCH (ram, 0x1044ce, 8)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
do_after_lines, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (register, 0x30, 8) COPY (register, 0xa0, 8)
do_after_lines, (register, 0x38, 8) COPY (register, 0x18, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10449f, 8)
do_after_lines,  ---  CALL (ram, 0x103e60, 8)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
do_after_lines, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (register, 0x10, 8) COPY (register, 0x0, 8)
do_after_lines, (register, 0xb8, 8) COPY (register, 0x0, 8)
do_after_lines, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x18, 8)
do_after_lines, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x18, 8)
do_after_lines, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (register, 0x30, 8) COPY (const, 0x1, 8)
do_after_lines, (register, 0x38, 8) COPY (register, 0x18, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1044b9, 8)
do_after_lines,  ---  CALL (ram, 0x1025b0, 8)
do_after_lines, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0xb8, 8)
do_after_lines, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (register, 0xb8, 8)
do_after_lines, (unique, 0x28700, 8) INT_SUB (register, 0xa0, 8) , (register, 0xb8, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104528, 8) , (unique, 0xc780, 1)
do_after_lines, (register, 0x200, 1) INT_LESS (ram, 0x3098b8, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x20b, 1) INT_SBORROW (ram, 0x3098b8, 4) , (register, 0x28, 4)
do_after_lines, (unique, 0x28600, 4) INT_SUB (ram, 0x3098b8, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
do_after_lines, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_after_lines, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104528, 8) , (unique, 0xce80, 1)
do_after_lines, (register, 0x28, 4) COPY (register, 0x0, 4)
do_after_lines, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
do_after_lines, (register, 0x18, 8) COPY (register, 0xb8, 8)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines,  ---  CBRANCH (ram, 0x1044ed, 8) , (register, 0x206, 1)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
do_after_lines, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (register, 0x10, 8) COPY (const, 0x107097, 8)
do_after_lines, (register, 0x8, 8) COPY (register, 0xb0, 8)
do_after_lines, (register, 0x30, 8) COPY (const, 0x1, 8)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1044ed, 8)
do_after_lines,  ---  CALL (ram, 0x1025c0, 8)
do_after_lines, (register, 0x0, 4) COPY (ram, 0x309860, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104490, 8) , (register, 0x206, 1)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
do_after_lines, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
do_after_lines, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
do_after_lines, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (register, 0x10, 8) COPY (const, 0x10709b, 8)
do_after_lines, (register, 0x30, 8) COPY (const, 0x1, 8)
do_after_lines, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
do_after_lines, (register, 0xb8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
do_after_lines, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
do_after_lines, (register, 0x8, 4) COPY (register, 0x0, 4)
do_after_lines, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_after_lines, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104518, 8)
do_after_lines,  ---  CALL (ram, 0x1025c0, 8)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
do_after_lines, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
do_after_lines,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
do_after_lines,  ---  BRANCH (ram, 0x104490, 8)
do_after_lines, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
do_after_lines, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_after_lines, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x200, 1) COPY (const, 0x0, 1)
do_after_lines, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_after_lines, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_after_lines, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (ram, 0x309874, 4) COPY (const, 0x1, 4)
do_after_lines, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_after_lines,  ---  CBRANCH (ram, 0x104551, 8) , (unique, 0xc680, 1)
do_after_lines, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)
do_after_lines, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_after_lines, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_after_lines, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_after_lines, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_after_lines, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_after_lines, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_after_lines, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_after_lines, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  RETURN (register, 0x288, 8)
do_after_lines, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_after_lines,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104556, 8)
do_after_lines,  ---  CALL (ram, 0x1023f0, 8)
add_number, (unique, 0xe780, 8) COPY (register, 0x28, 8)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
add_number, (unique, 0xe780, 8) COPY (register, 0x18, 8)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
add_number, (register, 0x28, 4) COPY (register, 0x38, 4)
add_number, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
add_number, (register, 0x38, 8) COPY (const, 0x10, 8)
add_number, (register, 0x18, 8) COPY (register, 0x30, 8)
add_number, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
add_number, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
add_number, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
add_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104575, 8)
add_number,  ---  CALL (ram, 0x102520, 8)
add_number, (register, 0x200, 1) COPY (const, 0x0, 1)
add_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_number, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
add_number, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
add_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
add_number, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
add_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_number,  ---  CBRANCH (ram, 0x104599, 8) , (register, 0x206, 1)
add_number, (register, 0x200, 1) COPY (const, 0x0, 1)
add_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_number, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
add_number, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
add_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
add_number, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
add_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_number, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
add_number,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbe00, 8)
add_number, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
add_number, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
add_number,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
add_number,  ---  CBRANCH (ram, 0x104592, 8) , (register, 0x206, 1)
add_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
add_number, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
add_number, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
add_number,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8)
add_number, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
add_number,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
add_number, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
add_number, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
add_number, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
add_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_number, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_number, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  RETURN (register, 0x288, 8)
add_number, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
add_number, (register, 0x38, 8) COPY (const, 0x10709f, 8)
add_number, (register, 0x10, 8) COPY (const, 0x18, 8)
add_number, (register, 0x30, 8) COPY (const, 0x1, 8)
add_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
add_number, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1045b9, 8)
add_number,  ---  CALL (ram, 0x1025b0, 8)
add_number, (register, 0x38, 8) COPY (const, 0x2, 8)
add_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1045c3, 8)
add_number,  ---  CALL (ram, 0x104210, 8)
add_pattern, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
add_pattern, (unique, 0xe780, 8) COPY (register, 0x28, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
add_pattern, (register, 0xa0, 8) COPY (register, 0x38, 8)
add_pattern, (unique, 0xe780, 8) COPY (register, 0x18, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
add_pattern, (register, 0x38, 8) COPY (const, 0x20, 8)
add_pattern, (register, 0x28, 8) COPY (register, 0x30, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1045e4, 8)
add_pattern,  ---  CALL (ram, 0x102520, 8)
add_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_pattern, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
add_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
add_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
add_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
add_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_pattern, (register, 0x18, 8) COPY (register, 0x0, 8)
add_pattern,  ---  CBRANCH (ram, 0x104666, 8) , (register, 0x206, 1)
add_pattern, (register, 0x38, 8) COPY (register, 0xa0, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1045f4, 8)
add_pattern,  ---  CALL (ram, 0x1023e0, 8)
add_pattern, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x2000, 8)
add_pattern, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x2000, 8)
add_pattern, (unique, 0x27c00, 8) INT_SUB (register, 0x0, 8) , (const, 0x2000, 8)
add_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x27c00, 8) , (const, 0x0, 8)
add_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x27c00, 8) , (const, 0x0, 8)
add_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x27c00, 8) , (const, 0xff, 8)
add_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_pattern, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
add_pattern, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
add_pattern,  ---  CBRANCH (ram, 0x104640, 8) , (unique, 0xc900, 1)
add_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_pattern, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
add_pattern, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
add_pattern, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
add_pattern, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
add_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
add_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_pattern, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbe00, 8)
add_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
add_pattern, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
add_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
add_pattern, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
add_pattern, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
add_pattern, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
add_pattern,  ---  CBRANCH (ram, 0x104630, 8) , (register, 0x206, 1)
add_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
add_pattern, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
add_pattern, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
add_pattern, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
add_pattern,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8)
add_pattern, (register, 0x0, 8) COPY (register, 0x18, 8)
add_pattern, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  RETURN (register, 0x288, 8)
add_pattern, (register, 0x0, 8) COPY (register, 0x18, 8)
add_pattern, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
add_pattern, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  RETURN (register, 0x288, 8)
add_pattern, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
add_pattern, (register, 0x10, 8) COPY (const, 0x1063e8, 8)
add_pattern, (register, 0x8, 8) COPY (const, 0x2000, 8)
add_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
add_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
add_pattern, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
add_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
add_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
add_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
add_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
add_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
add_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104662, 8)
add_pattern,  ---  CALL (ram, 0x1025c0, 8)
add_pattern, (register, 0x200, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x20b, 1) COPY (const, 0x0, 1)
add_pattern, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
add_pattern, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
add_pattern, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
add_pattern, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
add_pattern, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
add_pattern, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
add_pattern, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
add_pattern,  ---  BRANCH (ram, 0x10462a, 8)
add_pattern, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
add_pattern, (register, 0x38, 8) COPY (const, 0x10709f, 8)
add_pattern, (register, 0x10, 8) COPY (const, 0x18, 8)
add_pattern, (register, 0x30, 8) COPY (const, 0x1, 8)
add_pattern, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
add_pattern, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104686, 8)
add_pattern,  ---  CALL (ram, 0x1025b0, 8)
add_pattern, (register, 0x38, 8) COPY (const, 0x2, 8)
add_pattern, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
add_pattern,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104690, 8)
add_pattern,  ---  CALL (ram, 0x104210, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0x28, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (unique, 0xe780, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
pcregrep, (register, 0x18, 8) COPY (register, 0x10, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xa0, 8) COPY (ram, 0x3098d0, 8)
pcregrep, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x238, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30986c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1046da, 8)
pcregrep,  ---  CALL (ram, 0x1024d0, 8)
pcregrep, (register, 0x38, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1046e1, 8)
pcregrep,  ---  CALL (ram, 0x102390, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104b27, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104b2f, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x10, 8) INT_SEXT (ram, 0x309018, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104710, 8)
pcregrep,  ---  CALL (ram, 0x1023a0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (ram, 0x3098d0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x28, 4) COPY (ram, 0x3098b0, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  CBRANCH (ram, 0x104754, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x400, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x400, 8)
pcregrep, (unique, 0x27c00, 8) INT_SUB (register, 0x0, 8) , (const, 0x400, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x27c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x10, 8) COPY (const, 0x400, 8)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xc780, 1)
pcregrep,  ---  CBRANCH (ram, 0x104744, 8) , (unique, 0x27800, 1)
pcregrep, (register, 0x10, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10474b, 8)
pcregrep,  ---  CALL (ram, 0x102470, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104b4e, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x28, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x7c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x104b64, 8) , (unique, 0xc580, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x9c, 8) , (register, 0x20, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
pcregrep, (register, 0x30, 8) COPY (register, 0xa8, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0xa8, 8) INT_SUB (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1047f4, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x88, 4) COPY (ram, 0x309864, 4)
pcregrep, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
pcregrep, (register, 0x30, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x8, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x8, 8)
pcregrep, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104813, 8) , (unique, 0x27800, 1)
pcregrep, (register, 0xa8, 8) COPY (register, 0x30, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0xa8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104837, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x10, 8) INT_SEXT (ram, 0x309018, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1057e4, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10485e, 8)
pcregrep,  ---  CALL (ram, 0x104280, 8)
pcregrep, (register, 0x10, 4) COPY (ram, 0x309870, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x10, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x10, 4)
pcregrep, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c53, 8) , (register, 0x206, 1)
pcregrep, (register, 0x8, 4) COPY (ram, 0x309014, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x3, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x8, 4) , (const, 0x3, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104eb5, 8) , (register, 0x206, 1)
pcregrep, (register, 0x80, 4) COPY (ram, 0x309854, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104eae, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x28, 4) COPY (ram, 0x309880, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104ebf, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f02, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x8, 4) , (const, 0x2, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f36, 8) , (register, 0x206, 1)
pcregrep, (register, 0x30, 4) COPY (ram, 0x309850, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f42, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105069, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1048e9, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070e3, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1048e9, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0x8, 4) COPY (ram, 0x309860, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104ad0, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x10, 4) COPY (ram, 0x309868, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a80, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309878, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104b00, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0xa8, 8) COPY (ram, 0x309840, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0xa8, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c4b, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x18, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
pcregrep,  ---  BRANCH (ram, 0x104979, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30987c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1049d2, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3d00, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0x3d80, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)
pcregrep, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
pcregrep, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0xb0, 4)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x18, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10495e, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30987c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a00, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0xa8, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a30, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
pcregrep, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x5200, 4)
pcregrep, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (unique, 0x5200, 4)
pcregrep, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (unique, 0x28b00, 4) INT_SUB (register, 0x0, 4) , (unique, 0x5200, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep,  ---  CBRANCH (ram, 0x10496c, 8) , (unique, 0xcd00, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x28, 8) INT_SEXT (register, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (unique, 0x3d00, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0x3d80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
pcregrep, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (unique, 0x3d00, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0x3d80, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)
pcregrep, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
pcregrep, (register, 0xb0, 4) INT_SUB (register, 0xb0, 4) , (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x10496c, 8) , (unique, 0xce80, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xb8, 8) COPY (ram, 0x308f88, 8)
pcregrep,  ---  CBRANCH (ram, 0x104930, 8) , (register, 0x206, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (ram, 0x309788, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1049c4, 8)
pcregrep,  ---  CALL (ram, 0x102420, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30987c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10493e, 8) , (register, 0x206, 1)
pcregrep, (register, 0x80, 8) COPY (ram, 0x309790, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f2, 8)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1049f4, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x10493e, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f9, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104a1b, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0xa8, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104979, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
pcregrep, (register, 0xb8, 4) COPY (register, 0x18, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x80, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a4f, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59000, 1) INT_AND (register, 0x80, 1) , (register, 0x80, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a4f, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309860, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a63, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x38, 8) COPY (const, 0xa, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104a63, 8)
pcregrep,  ---  CALL (ram, 0x102460, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30986c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104ab9, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x10, 8) COPY (const, 0x400, 8)
pcregrep,  ---  BRANCH (ram, 0x104848, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x8, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x8, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x8, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070eb, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104aaf, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30986c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104a6d, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104ac8, 8)
pcregrep,  ---  CALL (ram, 0x102530, 8)
pcregrep,  ---  BRANCH (ram, 0x104a6d, 8)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070e7, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104af1, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x1048f7, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x10, 8) COPY (register, 0x8, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x10, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x10, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x10, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  BRANCH (ram, 0x104a99, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x30, 4) COPY (ram, 0x309018, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104b42, 8)
pcregrep,  ---  CALL (ram, 0x1041c0, 8)
pcregrep, (register, 0x0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x104715, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c20, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep,  ---  BRANCH (ram, 0x10475c, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (register, 0x90, 4) COPY (ram, 0x309850, 4)
pcregrep, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104bba, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x88, 4) COPY (ram, 0x309880, 4)
pcregrep, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104e7f, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104bb0, 8) , (register, 0x206, 1)
pcregrep, (register, 0x80, 4) COPY (ram, 0x3098b8, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x104bb0, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x38, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104bb0, 8)
pcregrep,  ---  CALL (ram, 0x104430, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x7c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (ram, 0x309874, 4) INT_OR (ram, 0x309874, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (ram, 0x309874, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (ram, 0x309874, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (ram, 0x309874, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309014, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104e8e, 8) , (register, 0x206, 1)
pcregrep, (register, 0x38, 4) COPY (ram, 0x309880, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c20, 8) , (register, 0x206, 1)
pcregrep, (register, 0x30, 4) COPY (ram, 0x309854, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c20, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10588f, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xa0, 8) COPY (ram, 0x308f88, 8)
pcregrep,  ---  CBRANCH (ram, 0x104bfd, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105870, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070ee, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104c18, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x238, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
pcregrep, (register, 0x18, 8) INT_XOR (register, 0x18, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x0, 4) COPY (register, 0x28, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105846, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x248, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
pcregrep, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  RETURN (register, 0x288, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  BRANCH (ram, 0x104a3b, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0xb0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x8, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309864, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104d08, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f2c, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309870, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f2c, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xa8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104cd3, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x104cba, 8)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1055d4, 8) , (unique, 0xc780, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x10, 8) COPY (register, 0xb0, 8)
pcregrep, (register, 0x30, 8) COPY (register, 0x28, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104cc8, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (register, 0x0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (register, 0x0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xa8, 8) , (register, 0x0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x104cb0, 8) , (unique, 0xc580, 1)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x8, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa8, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104ce8, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x9c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x0, 8) COPY (register, 0x10, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (register, 0x38, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x38, 8)
pcregrep, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x38, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (unique, 0xbc80, 4) , (register, 0x0, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (unique, 0xbc80, 4) , (register, 0x0, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104e5d, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) INT_SEXT (ram, 0x309018, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (register, 0x0, 8)
pcregrep, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
pcregrep,  ---  CBRANCH (ram, 0x104e38, 8) , (unique, 0xc900, 1)
pcregrep, (register, 0x0, 8) INT_SEXT (ram, 0x30901c, 4)
pcregrep, (register, 0x8, 8) COPY (ram, 0x3098d0, 8)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0x30, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (register, 0x30, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xa0, 8) , (register, 0x30, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104e22, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x3098b8, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x104dbb, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xb8, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104dbb, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0x30, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104dbb, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104d9b, 8)
pcregrep,  ---  CALL (ram, 0x104430, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (ram, 0x30901c, 4)
pcregrep, (register, 0x8, 8) COPY (ram, 0x3098d0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (register, 0x38, 8) COPY (register, 0x8, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104dc3, 8)
pcregrep,  ---  CALL (ram, 0x102570, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (ram, 0x30901c, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0xa8, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
pcregrep, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (register, 0x10, 8)
pcregrep, (register, 0xa8, 8) INT_SEXT (register, 0xa8, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0x3400, 8)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10508e, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104df8, 8)
pcregrep,  ---  CALL (ram, 0x1023a0, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  CBRANCH (ram, 0x104e22, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) INT_SEXT (ram, 0x30901c, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1047d1, 8) , (register, 0x200, 1)
pcregrep,  ---  BRANCH (ram, 0x104b6c, 8)
pcregrep, (register, 0x0, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (ram, 0x3098d0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x0, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x0, 4)
pcregrep, (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (register, 0x0, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104e51, 8)
pcregrep,  ---  CALL (ram, 0x1041c0, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x0, 8) INT_SEXT (ram, 0x309018, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104d45, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28c00, 8) INT_SUB (register, 0xa0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1047d1, 8) , (register, 0x200, 1)
pcregrep,  ---  BRANCH (ram, 0x104b6c, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309014, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104bd3, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x10717c, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104eae, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  BRANCH (ram, 0x104c20, 8)
pcregrep, (register, 0x28, 8) COPY (const, 0x1, 8)
pcregrep,  ---  BRANCH (ram, 0x104c20, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xb0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30986c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10507a, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x104c62, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070cb, 8)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104f27, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x104c20, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep,  ---  BRANCH (ram, 0x104d08, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x10717c, 8)
pcregrep,  ---  BRANCH (ram, 0x104f11, 8)
pcregrep, (register, 0xb0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x0, 4) COPY (ram, 0x3098b8, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x10509f, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xb8, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10509f, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x10582d, 8) , (unique, 0xc580, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x104f89, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (ram, 0x3098b8, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (ram, 0x3098b8, 4)
pcregrep, (unique, 0x28b00, 4) INT_SUB (register, 0xb8, 4) , (ram, 0x3098b8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep,  ---  CBRANCH (ram, 0x104fa0, 8) , (unique, 0xcd00, 1)
pcregrep, (register, 0x10, 8) COPY (register, 0x28, 8)
pcregrep, (register, 0x30, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104f97, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104f80, 8) , (register, 0x200, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x28, 8) COPY (register, 0x0, 8)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x105857, 8) , (unique, 0xc580, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0xb0, 8) COPY (register, 0x0, 8)
pcregrep,  ---  BRANCH (ram, 0x105015, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (register, 0xb8, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x104ff0, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0xa8, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105009, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (register, 0x28, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (register, 0x28, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xa8, 8) , (register, 0x28, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x105357, 8) , (unique, 0xc580, 1)
pcregrep, (register, 0xa0, 8) COPY (register, 0xa8, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105033, 8) , (register, 0x206, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x107097, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105033, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0xa8, 4) COPY (ram, 0x309860, 4)
pcregrep, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104fe0, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x10709b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0xa8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
pcregrep, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
pcregrep, (register, 0x8, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10505f, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep,  ---  BRANCH (ram, 0x104fe0, 8)
pcregrep, (register, 0xb0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30986c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x104ed5, 8) , (register, 0x206, 1)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105089, 8)
pcregrep,  ---  CALL (ram, 0x102530, 8)
pcregrep,  ---  BRANCH (ram, 0x104ed5, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105098, 8)
pcregrep,  ---  CALL (ram, 0x1041c0, 8)
pcregrep, (register, 0x0, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x104df8, 8)
pcregrep, (register, 0x38, 8) COPY (ram, 0x308f88, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309874, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105374, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x0, 4) COPY (ram, 0x3098b4, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x1055c1, 8) , (unique, 0xce80, 1)
pcregrep, (register, 0x10, 8) COPY (ram, 0x3098d0, 8)
pcregrep, (register, 0x88, 4) COPY (ram, 0x3098f8, 4)
pcregrep, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
pcregrep, (register, 0xb8, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x98, 4) COPY (ram, 0x309848, 4)
pcregrep, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)
pcregrep, (register, 0x90, 8) COPY (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xa8, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
pcregrep, (register, 0x0, 1) COPY (unique, 0xc900, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1053ac, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x8, 1) COPY (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x8, 1) INT_OR (register, 0x8, 1) , (register, 0x0, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (register, 0x8, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1053ac, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x8, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x8, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x1053ac, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (const, 0x2, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x88, 4) , (const, 0x2, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105197, 8) , (register, 0x206, 1)
pcregrep, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051d0, 8) , (unique, 0xd080, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x88, 4) , (const, 0x1, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105328, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105320, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105172, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x105320, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105320, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105168, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0xb8, 8) COPY (register, 0x10, 8)
pcregrep,  ---  BRANCH (ram, 0x105100, 8)
pcregrep, (register, 0xb8, 8) COPY (register, 0x10, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x90, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x90, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0x90, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105100, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105100, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051c8, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffd, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051b6, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x1051c8, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051c8, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051b0, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x105180, 8)
pcregrep, (register, 0xb8, 8) COPY (register, 0x0, 8)
pcregrep,  ---  BRANCH (ram, 0x105183, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
pcregrep,  ---  CBRANCH (ram, 0x105328, 8) , (unique, 0xd080, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0x3100, 8)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051f7, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051f7, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xd, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1051f7, 8) , (unique, 0x27800, 1)
pcregrep, (register, 0x8, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1052f4, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x8, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xb8, 8) COPY (register, 0x8, 8)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10517b, 8) , (unique, 0xc780, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep,  ---  CBRANCH (ram, 0x1052cf, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x30, 4) COPY (register, 0x8, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10524c, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x30, 4) COPY (register, 0x8, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105238, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0xbf, 1)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0xbf, 1)
pcregrep, (unique, 0x27d00, 1) INT_SUB (register, 0x8, 1) , (const, 0xbf, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x38, 4) INT_ZEXT (register, 0x8, 1)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105296, 8) , (unique, 0xc780, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1079c0, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x80, 8) COPY (const, 0x107a00, 8)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
pcregrep, (register, 0x28, 8) INT_SEXT (unique, 0xbb00, 1)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
pcregrep, (register, 0x38, 4) INT_AND (register, 0x38, 4) , (unique, 0xbc80, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3a80, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8)
pcregrep, (unique, 0x3b80, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8)
pcregrep, (register, 0x8, 4) SUBPIECE (unique, 0x3b80, 8) , (const, 0x0, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
pcregrep, (unique, 0x53180, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x38, 4) INT_LEFT (register, 0x38, 4) , (unique, 0x53100, 1)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
pcregrep, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
pcregrep, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
pcregrep, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
pcregrep, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
pcregrep, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x15580, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
pcregrep, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
pcregrep, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
pcregrep, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
pcregrep, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
pcregrep, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12f80, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
pcregrep, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
pcregrep, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
pcregrep, (unique, 0x13280, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
pcregrep, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
pcregrep, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
pcregrep, (unique, 0x13500, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
pcregrep, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
pcregrep, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
pcregrep, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x105296, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x80, 8) COPY (unique, 0x3100, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)
pcregrep, (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x6, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x6, 4)
pcregrep, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x6, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (const, 0x1, 8)
pcregrep, (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x3f, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)
pcregrep, (unique, 0x53180, 4) COPY (register, 0x30, 4)
pcregrep, (register, 0x30, 4) INT_LEFT (register, 0x30, 4) , (unique, 0x53100, 1)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x15080, 1) INT_SUB (unique, 0x53100, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x15100, 4) INT_LEFT (unique, 0x53180, 4) , (unique, 0x15080, 1)
pcregrep, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
pcregrep, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
pcregrep, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
pcregrep, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
pcregrep, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53100, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x15580, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
pcregrep, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
pcregrep, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
pcregrep, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
pcregrep, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
pcregrep, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53100, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12f80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
pcregrep, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
pcregrep, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
pcregrep, (unique, 0x13280, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
pcregrep, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
pcregrep, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
pcregrep, (unique, 0x13500, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
pcregrep, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
pcregrep, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
pcregrep, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
pcregrep, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
pcregrep, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x38, 4) INT_OR (register, 0x38, 4) , (register, 0x30, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105280, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1052da, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0x85, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x85, 4)
pcregrep, (unique, 0x27f00, 4) INT_SUB (register, 0x38, 4) , (const, 0x85, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105100, 8) , (register, 0x206, 1)
pcregrep, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
pcregrep,  ---  CBRANCH (ram, 0x105310, 8) , (unique, 0xc900, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0x3, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x38, 4) , (const, 0x3, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105100, 8) , (unique, 0xc780, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10517b, 8) , (unique, 0xc780, 1)
pcregrep, (register, 0xb8, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105220, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x88, 4) , (const, 0x4, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10529c, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x38, 4) , (const, 0xa, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105100, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0xd, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0xd, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x38, 4) , (const, 0xd, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1052b6, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x105100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (const, 0x1, 8)
pcregrep, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
pcregrep, (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffff80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1052f0, 8) , (register, 0x206, 1)
pcregrep,  ---  BRANCH (ram, 0x105200, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0x2028, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2028, 4)
pcregrep, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x2028, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x28200, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
pcregrep,  ---  CBRANCH (ram, 0x1052b6, 8) , (unique, 0xc900, 1)
pcregrep,  ---  BRANCH (ram, 0x105100, 8)
pcregrep, (register, 0xb8, 8) COPY (register, 0x0, 8)
pcregrep,  ---  BRANCH (ram, 0x105100, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105320, 8) , (unique, 0xc780, 1)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffffe, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105346, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x105320, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
pcregrep, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105320, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105340, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0xb8, 8) COPY (register, 0x10, 8)
pcregrep,  ---  BRANCH (ram, 0x105100, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (register, 0xa8, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xa0, 8) , (register, 0xa8, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1057d6, 8) , (register, 0x206, 1)
pcregrep, (ram, 0x309874, 4) COPY (const, 0x1, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (const, 0x107100, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x3, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105395, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (ram, 0x309874, 4) COPY (const, 0x0, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep,  ---  BRANCH (ram, 0x1050c9, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
pcregrep, (register, 0x28, 8) COPY (register, 0xb8, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (const, 0x1, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
pcregrep, (register, 0x8, 1) COPY (unique, 0xd080, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59000, 1) INT_AND (register, 0x8, 1) , (register, 0x10, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1053cd, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1057b0, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x10547c, 8) , (unique, 0xc580, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep,  ---  BRANCH (ram, 0x105424, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0x28, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105402, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0xb8, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x28, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x28, 8)
pcregrep, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x28, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0x28, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10541c, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
pcregrep,  ---  CBRANCH (ram, 0x105477, 8) , (unique, 0xc580, 1)
pcregrep, (register, 0x28, 8) COPY (register, 0xb8, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105443, 8) , (register, 0x206, 1)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x107097, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105443, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0x38, 4) COPY (ram, 0x309860, 4)
pcregrep, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1053f0, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)
pcregrep, (register, 0xb8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x10, 8) COPY (const, 0x10709b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xb0, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xb0, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105472, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x1053f0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x80, 4) COPY (ram, 0x3098b8, 4)
pcregrep, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x1055ae, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x7c, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x1054ba, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070e3, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1054ba, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (register, 0x8, 4) COPY (ram, 0x309860, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x105587, 8) , (unique, 0xc680, 1)
pcregrep, (register, 0x10, 4) COPY (ram, 0x309870, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0xb8, 1) COPY (register, 0x206, 1)
pcregrep, (register, 0x0, 4) INT_ZEXT (register, 0xb8, 1)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (ram, 0x309864, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10554a, 8) , (register, 0x206, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x28, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x105826, 8) , (register, 0x200, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xba80, 1) COPY (register, 0xb8, 1)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xba80, 1)
pcregrep, (register, 0x0, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 8) COPY (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x105514, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0xa8, 4) , (const, 0x1, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0xa8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)
pcregrep, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x10, 8) COPY (register, 0xb8, 8)
pcregrep, (register, 0x30, 8) COPY (register, 0xb0, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105522, 8)
pcregrep,  ---  CALL (ram, 0x103e60, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0x0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0x0, 8)
pcregrep, (unique, 0x28700, 8) INT_SUB (register, 0x28, 8) , (register, 0x0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
pcregrep, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
pcregrep,  ---  CBRANCH (ram, 0x105510, 8) , (unique, 0xc900, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb8, 4) INT_ZEXT (unique, 0xbb00, 1)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x30987c, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10555d, 8) , (register, 0x206, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59000, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x1055e0, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105582, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep,  ---  BRANCH (ram, 0x104ec7, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070e7, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1055a9, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x1054c8, 8)
pcregrep, (register, 0x30, 4) COPY (ram, 0x3098b4, 4)
pcregrep, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
pcregrep,  ---  CBRANCH (ram, 0x10548c, 8) , (unique, 0xd080, 1)
pcregrep,  ---  BRANCH (ram, 0x105494, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x3098b8, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
pcregrep,  ---  CBRANCH (ram, 0x10548c, 8) , (unique, 0xd080, 1)
pcregrep,  ---  BRANCH (ram, 0x105494, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
pcregrep, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep,  ---  BRANCH (ram, 0x104cd3, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105601, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (register, 0x80, 8) COPY (ram, 0x309790, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f2, 8)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105624, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10564a, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f9, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105666, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x0, 4)
pcregrep, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x105770, 8) , (unique, 0xce80, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x105739, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) INT_SEXT (register, 0xb8, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1056bd, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (register, 0x80, 8) COPY (ram, 0x309790, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f2, 8)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1056e0, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0x3400, 8)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105706, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070f9, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x8, 8) COPY (const, 0x1b, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105722, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
pcregrep, (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x1, 8)
pcregrep, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
pcregrep, (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (register, 0x10, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (register, 0x10, 4)
pcregrep, (unique, 0x28600, 4) INT_SUB (register, 0xb8, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep,  ---  CBRANCH (ram, 0x10579e, 8) , (unique, 0xcd00, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x80, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x8, 4) COPY (register, 0xb8, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x10, 8) COPY (const, 0x400, 8)
pcregrep, (register, 0x30, 8) COPY (register, 0xb0, 8)
pcregrep, (register, 0x38, 8) COPY (register, 0xa0, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105754, 8)
pcregrep,  ---  CALL (ram, 0x104280, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x10569c, 8) , (unique, 0xc680, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0xbc80, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0xb8, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
pcregrep, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
pcregrep,  ---  CBRANCH (ram, 0x104ec7, 8) , (unique, 0xce80, 1)
pcregrep, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) INT_SEXT (register, 0xb8, 4)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0xa0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105799, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep,  ---  BRANCH (ram, 0x104ec7, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
pcregrep, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  BRANCH (ram, 0x105770, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x38, 8) COPY (const, 0x107100, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x3, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1057d1, 8)
pcregrep,  ---  CALL (ram, 0x1025b0, 8)
pcregrep,  ---  BRANCH (ram, 0x1053cd, 8)
pcregrep, (register, 0x0, 4) COPY (ram, 0x309874, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0xa8, 8) COPY (register, 0xa0, 8)
pcregrep,  ---  BRANCH (ram, 0x1050b9, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
pcregrep, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
pcregrep, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  CBRANCH (ram, 0x10584b, 8) , (register, 0x206, 1)
pcregrep, (register, 0x80, 8) COPY (const, 0x1070c1, 8)
pcregrep, (register, 0x88, 8) COPY (register, 0x0, 8)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
pcregrep, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
pcregrep, (register, 0x10, 8) COPY (const, 0x1064f0, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x28, 8) COPY (const, 0x2, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105821, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x104c20, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep,  ---  BRANCH (ram, 0x10553a, 8)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x105361, 8)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10584b, 8)
pcregrep,  ---  CALL (ram, 0x1023f0, 8)
pcregrep, (register, 0x88, 8) COPY (const, 0x107080, 8)
pcregrep, (register, 0x80, 8) COPY (register, 0x88, 8)
pcregrep,  ---  BRANCH (ram, 0x1057fb, 8)
pcregrep, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
pcregrep, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
pcregrep, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
pcregrep, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
pcregrep, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
pcregrep,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
pcregrep,  ---  BRANCH (ram, 0x10536a, 8)
pcregrep, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
pcregrep, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
pcregrep, (register, 0x10, 8) COPY (const, 0x1070e3, 8)
pcregrep, (register, 0x8, 8) COPY (register, 0x18, 8)
pcregrep, (register, 0x30, 8) COPY (const, 0x1, 8)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
pcregrep, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
pcregrep,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10588a, 8)
pcregrep,  ---  CALL (ram, 0x1025c0, 8)
pcregrep,  ---  BRANCH (ram, 0x104bfd, 8)
pcregrep, (register, 0x10, 4) COPY (ram, 0x30985c, 4)
pcregrep, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
pcregrep, (register, 0x200, 1) COPY (const, 0x0, 1)
pcregrep, (register, 0x20b, 1) COPY (const, 0x0, 1)
pcregrep, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
pcregrep, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
pcregrep, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
pcregrep, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
pcregrep, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
pcregrep,  ---  CBRANCH (ram, 0x104c20, 8) , (unique, 0xc680, 1)
pcregrep,  ---  BRANCH (ram, 0x104be9, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (register, 0xa8, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (register, 0x30, 8) COPY (const, 0x2f, 8)
grep_or_recurse, (register, 0x28, 8) COPY (register, 0x38, 8)
grep_or_recurse, (register, 0xa0, 4) COPY (register, 0x10, 4)
grep_or_recurse, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
grep_or_recurse, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
grep_or_recurse, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
grep_or_recurse, (unique, 0x3c80, 8) INT_ADD (const, 0x498, 8) , (register, 0x20, 8)
grep_or_recurse, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1058e7, 8)
grep_or_recurse,  ---  CALL (ram, 0x102410, 8)
grep_or_recurse, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
grep_or_recurse, (register, 0x18, 8) COPY (unique, 0x3100, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x10, 8) COPY (register, 0x20, 8)
grep_or_recurse, (register, 0x30, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x38, 8) COPY (const, 0x1, 8)
grep_or_recurse, (register, 0xb0, 8) COPY (register, 0x20, 8)
grep_or_recurse, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105900, 8) , (unique, 0x27800, 1)
grep_or_recurse, (register, 0x18, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105905, 8)
grep_or_recurse,  ---  CALL (ram, 0x1024e0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059d0, 8) , (register, 0x207, 1)
grep_or_recurse, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
grep_or_recurse, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
grep_or_recurse, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf000, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4000, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4000, 4)
grep_or_recurse, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4000, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059d0, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (ram, 0x3098a8, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (ram, 0x3098a8, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (ram, 0x3098a8, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105a1b, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x10, 8) COPY (ram, 0x3097b0, 8)
grep_or_recurse, (register, 0x30, 8) COPY (ram, 0x3097c0, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105944, 8)
grep_or_recurse,  ---  CALL (ram, 0x104110, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105a1b, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0xb8, 4) COPY (ram, 0x3098a8, 4)
grep_or_recurse, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (const, 0x2, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (const, 0x2, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0xb8, 4) , (const, 0x2, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105a78, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x30, 8) COPY (const, 0x107104, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10596c, 8)
grep_or_recurse,  ---  CALL (ram, 0x102590, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x18, 8) COPY (register, 0x0, 8)
grep_or_recurse,  ---  CBRANCH (ram, 0x105a30, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x0, 4) COPY (ram, 0x309014, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x10, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
grep_or_recurse, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b50, 8) , (unique, 0xce80, 1)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0x30, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105995, 8)
grep_or_recurse,  ---  CALL (ram, 0x104690, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0xb8, 4) COPY (register, 0x0, 4)
grep_or_recurse, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1059a0, 8)
grep_or_recurse,  ---  CALL (ram, 0x1023c0, 8)
grep_or_recurse, (unique, 0x3c80, 8) INT_ADD (const, 0x498, 8) , (register, 0x20, 8)
grep_or_recurse, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
grep_or_recurse, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
grep_or_recurse, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
grep_or_recurse, (register, 0x8, 8) INT_XOR (register, 0x8, 8) , (unique, 0xbd80, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) COPY (register, 0xb8, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b91, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x4a8, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  RETURN (register, 0x288, 8)
grep_or_recurse, (register, 0x10, 8) COPY (register, 0xb0, 8)
grep_or_recurse, (register, 0x30, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x38, 8) COPY (const, 0x1, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1059e0, 8)
grep_or_recurse,  ---  CALL (ram, 0x1024e0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059fd, 8) , (register, 0x207, 1)
grep_or_recurse, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
grep_or_recurse, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
grep_or_recurse, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf000, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8000, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x8000, 4)
grep_or_recurse, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x8000, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059fd, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (ram, 0x3098a4, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (ram, 0x3098a4, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (ram, 0x3098a4, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105a1b, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x10, 8) COPY (ram, 0x3097d0, 8)
grep_or_recurse, (register, 0x30, 8) COPY (ram, 0x3097e0, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105a13, 8)
grep_or_recurse,  ---  CALL (ram, 0x104110, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x10595d, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0xb8, 8) COPY (const, 0xffffffff, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x1059a0, 8)
grep_or_recurse, (register, 0x0, 4) COPY (ram, 0x30984c, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0xb8, 8) COPY (const, 0x2, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059a0, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105a49, 8)
grep_or_recurse,  ---  CALL (ram, 0x102350, 8)
grep_or_recurse, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
grep_or_recurse, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
grep_or_recurse, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105a50, 8)
grep_or_recurse,  ---  CALL (ram, 0x1025d0, 8)
grep_or_recurse, (register, 0x10, 8) COPY (const, 0x1064c8, 8)
grep_or_recurse, (register, 0x80, 8) COPY (register, 0x0, 8)
grep_or_recurse, (register, 0x8, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
grep_or_recurse, (register, 0x30, 8) COPY (const, 0x1, 8)
grep_or_recurse, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
grep_or_recurse, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105a73, 8)
grep_or_recurse,  ---  CALL (ram, 0x1025c0, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x1059a0, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0xb0, 8) COPY (const, 0x1, 8)
grep_or_recurse, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0xa0, 8) COPY (unique, 0x3c80, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105a8e, 8)
grep_or_recurse,  ---  CALL (ram, 0x1023d0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x18, 8) COPY (register, 0x0, 8)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b65, 8) , (register, 0x206, 1)
grep_or_recurse, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
grep_or_recurse, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105aa8, 8)
grep_or_recurse,  ---  CALL (ram, 0x1024f0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b08, 8) , (register, 0x206, 1)
grep_or_recurse, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x13, 8)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2e, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2e, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2e, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b20, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x13, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x13, 8)
grep_or_recurse, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x13, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x8, 8) COPY (const, 0x107107, 8)
grep_or_recurse, (unique, 0xe780, 8) COPY (register, 0x0, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
grep_or_recurse, (register, 0x88, 8) COPY (const, 0x2f, 8)
grep_or_recurse, (register, 0x80, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x10, 8) COPY (const, 0x400, 8)
grep_or_recurse, (register, 0x30, 8) COPY (const, 0x1, 8)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0xa0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105ae0, 8)
grep_or_recurse,  ---  CALL (ram, 0x102610, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
grep_or_recurse, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x30, 4) COPY (register, 0xa8, 4)
grep_or_recurse, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0xa0, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105aed, 8)
grep_or_recurse,  ---  CALL (ram, 0x105ba0, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
grep_or_recurse, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
grep_or_recurse, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b40, 8) , (unique, 0xce80, 1)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0xb0, 4) COPY (register, 0x0, 4)
grep_or_recurse, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105aff, 8)
grep_or_recurse,  ---  CALL (ram, 0x1024f0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
grep_or_recurse, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105aad, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x38, 8) COPY (register, 0x18, 8)
grep_or_recurse, (register, 0xb8, 4) COPY (register, 0xb0, 4)
grep_or_recurse, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105b13, 8)
grep_or_recurse,  ---  CALL (ram, 0x102450, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x1059a0, 8)
grep_or_recurse, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x14, 8)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1)
grep_or_recurse, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59000, 1) INT_AND (register, 0x10, 1) , (register, 0x10, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105aa0, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x10, 1) , (const, 0x2e, 1)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 1) , (const, 0x2e, 1)
grep_or_recurse, (unique, 0x27d00, 1) INT_SUB (register, 0x10, 1) , (const, 0x2e, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105ab3, 8) , (unique, 0xc680, 1)
grep_or_recurse, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x15, 8)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105aa0, 8) , (register, 0x206, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x105ab3, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b4a, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0xb0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0xb0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0xb0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105af4, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x0, 4) COPY (register, 0xb0, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse,  ---  BRANCH (ram, 0x105af4, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105b5e, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x10598a, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
grep_or_recurse, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x10598a, 8)
grep_or_recurse, (register, 0x30, 4) COPY (ram, 0x30984c, 4)
grep_or_recurse, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1059a0, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105b78, 8)
grep_or_recurse,  ---  CALL (ram, 0x102350, 8)
grep_or_recurse, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
grep_or_recurse, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
grep_or_recurse, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105b7f, 8)
grep_or_recurse,  ---  CALL (ram, 0x1025d0, 8)
grep_or_recurse, (register, 0x8, 8) COPY (register, 0x28, 8)
grep_or_recurse, (register, 0x80, 8) COPY (register, 0x0, 8)
grep_or_recurse, (register, 0x10, 8) COPY (const, 0x106558, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x105a5d, 8)
grep_or_recurse, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
grep_or_recurse,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105b96, 8)
grep_or_recurse,  ---  CALL (ram, 0x1023f0, 8)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
grep_or_recurse, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105bd0, 8) , (unique, 0xc680, 1)
grep_or_recurse, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
grep_or_recurse, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105bd0, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x0, 4) COPY (ram, 0x309014, 4)
grep_or_recurse, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
grep_or_recurse, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105bd8, 8) , (unique, 0xce80, 1)
grep_or_recurse, (register, 0x10, 8) COPY (ram, 0x309780, 8)
grep_or_recurse, (register, 0x30, 8) COPY (register, 0x10, 8)
grep_or_recurse, (register, 0x0, 8) COPY (ram, 0x308f90, 8)
grep_or_recurse, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
grep_or_recurse, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x104690, 8)
grep_or_recurse,  ---  BRANCH (ram, 0x1058b0, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105be1, 8) , (unique, 0xc680, 1)
grep_or_recurse, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x105bb6, 8) , (register, 0x206, 1)
grep_or_recurse, (register, 0x30, 8) COPY (ram, 0x309780, 8)
grep_or_recurse, (register, 0x200, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x20b, 1) COPY (const, 0x0, 1)
grep_or_recurse, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
grep_or_recurse, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
grep_or_recurse, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
grep_or_recurse, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
grep_or_recurse, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
grep_or_recurse, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x105bc0, 8)
usage, (unique, 0xe780, 8) COPY (register, 0x28, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
usage, (unique, 0xe780, 8) COPY (register, 0x18, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
usage, (register, 0x38, 8) COPY (const, 0x107116, 8)
usage, (register, 0x10, 8) COPY (const, 0x12, 8)
usage, (register, 0x30, 8) COPY (const, 0x1, 8)
usage, (register, 0x18, 8) COPY (const, 0x309040, 8)
usage, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage, (register, 0x28, 8) COPY (ram, 0x308fc0, 8)
usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
usage, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105c1e, 8)
usage,  ---  CALL (ram, 0x1025b0, 8)
usage, (register, 0x38, 4) COPY (ram, 0x309044, 4)
usage, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
usage, (register, 0x200, 1) COPY (const, 0x0, 1)
usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
usage, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
usage, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage,  ---  CBRANCH (ram, 0x105c48, 8) , (register, 0x206, 1)
usage, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
usage, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
usage, (register, 0x200, 1) COPY (const, 0x0, 1)
usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
usage, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
usage, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
usage, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
usage,  ---  CBRANCH (ram, 0x105c3d, 8) , (unique, 0xce80, 1)
usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
usage, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105c3d, 8)
usage,  ---  CALL (ram, 0x102460, 8)
usage, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x20, 8)
usage, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x20, 8)
usage, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
usage, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
usage, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
usage, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
usage, (register, 0x200, 1) COPY (const, 0x0, 1)
usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
usage, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
usage, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
usage, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
usage,  ---  CBRANCH (ram, 0x105c30, 8) , (unique, 0xc680, 1)
usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
usage, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
usage, (register, 0x38, 8) COPY (const, 0x106588, 8)
usage, (register, 0x10, 8) COPY (const, 0x23, 8)
usage, (register, 0x30, 8) COPY (const, 0x1, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105c62, 8)
usage,  ---  CALL (ram, 0x1025b0, 8)
usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
usage, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
usage, (register, 0x38, 8) COPY (const, 0x1065b0, 8)
usage, (register, 0x10, 8) COPY (const, 0x42, 8)
usage, (register, 0x30, 8) COPY (const, 0x1, 8)
usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105c7c, 8)
usage,  ---  CALL (ram, 0x1025b0, 8)
usage, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
usage, (register, 0x0, 8) COPY (const, 0x2, 8)
usage, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
usage, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
usage,  ---  RETURN (register, 0x288, 8)
decode_number, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (register, 0xb0, 4) COPY (register, 0x8, 4)
decode_number, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
decode_number, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (register, 0xa8, 8) COPY (register, 0x10, 8)
decode_number, (unique, 0xe780, 8) COPY (register, 0x28, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (unique, 0xe780, 8) COPY (register, 0x18, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
decode_number, (register, 0x28, 8) COPY (register, 0x38, 8)
decode_number, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
decode_number, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
decode_number, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
decode_number,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0x59000, 1) INT_AND (register, 0x18, 1) , (register, 0x18, 1)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  CBRANCH (ram, 0x105d5b, 8) , (register, 0x206, 1)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105cbc, 8)
decode_number,  ---  CALL (ram, 0x102600, 8)
decode_number, (register, 0xb8, 8) COPY (register, 0x28, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
decode_number,  ---  BRANCH (ram, 0x105cd4, 8)
decode_number, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
decode_number, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0x59000, 1) INT_AND (register, 0x18, 1) , (register, 0x18, 1)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  CBRANCH (ram, 0x105cdf, 8) , (register, 0x206, 1)
decode_number, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x10, 8)
decode_number, (unique, 0x3900, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8)
decode_number, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
decode_number, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
decode_number, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
decode_number,  ---  CBRANCH (ram, 0x105cc8, 8) , (unique, 0xc680, 1)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
decode_number, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  BRANCH (ram, 0x105d01, 8)
decode_number, (register, 0x18, 4) INT_SEXT (register, 0x18, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
decode_number, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
decode_number, (register, 0x0, 8) COPY (unique, 0x3400, 8)
decode_number, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
decode_number, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x30, 4)
decode_number, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x30, 4)
decode_number, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x30, 4)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x18, 8) INT_SEXT (register, 0x18, 4)
decode_number, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)
decode_number, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
decode_number, (register, 0x0, 8) COPY (unique, 0x3400, 8)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number, (register, 0x8, 4) INT_ZEXT (register, 0x18, 1)
decode_number, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
decode_number, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x10, 8)
decode_number, (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)
decode_number, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
decode_number, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
decode_number, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
decode_number,  ---  CBRANCH (ram, 0x105ce8, 8) , (unique, 0xc680, 1)
decode_number, (register, 0xa0, 8) COPY (register, 0x0, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105d13, 8)
decode_number,  ---  CALL (ram, 0x102320, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
decode_number, (register, 0x8, 8) INT_SEXT (register, 0x18, 1)
decode_number, (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)
decode_number, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
decode_number, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
decode_number, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
decode_number, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
decode_number, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4b, 4)
decode_number, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4b, 4)
decode_number, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4b, 4)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  CBRANCH (ram, 0x105d40, 8) , (register, 0x206, 1)
decode_number, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4d, 4)
decode_number, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4d, 4)
decode_number, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4d, 4)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  CBRANCH (ram, 0x105d50, 8) , (register, 0x206, 1)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0x59000, 1) INT_AND (register, 0x18, 1) , (register, 0x18, 1)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
decode_number, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
decode_number,  ---  CBRANCH (ram, 0x105d6b, 8) , (unique, 0xc680, 1)
decode_number, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
decode_number, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x0, 8) COPY (register, 0xa0, 8)
decode_number, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
decode_number, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  RETURN (register, 0x288, 8)
decode_number, (unique, 0x53900, 4) INT_AND (const, 0xa, 4) , (const, 0x3f, 4)
decode_number, (unique, 0x53980, 8) COPY (register, 0xa0, 8)
decode_number, (register, 0xa0, 8) INT_LEFT (register, 0xa0, 8) , (unique, 0x53900, 4)
decode_number, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
decode_number, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
decode_number, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
decode_number, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
decode_number, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
decode_number, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
decode_number, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
decode_number, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
decode_number, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
decode_number, (unique, 0x15580, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
decode_number, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
decode_number, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
decode_number, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
decode_number, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
decode_number, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12f80, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
decode_number, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
decode_number, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
decode_number, (unique, 0x13280, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
decode_number, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
decode_number, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
decode_number, (unique, 0x13500, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
decode_number, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
decode_number, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
decode_number, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
decode_number, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
decode_number, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
decode_number, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
decode_number, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number,  ---  BRANCH (ram, 0x105d27, 8)
decode_number, (unique, 0x53900, 4) INT_AND (const, 0x14, 4) , (const, 0x3f, 4)
decode_number, (unique, 0x53980, 8) COPY (register, 0xa0, 8)
decode_number, (register, 0xa0, 8) INT_LEFT (register, 0xa0, 8) , (unique, 0x53900, 4)
decode_number, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
decode_number, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
decode_number, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
decode_number, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
decode_number, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
decode_number, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
decode_number, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
decode_number, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
decode_number, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
decode_number, (unique, 0x15580, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
decode_number, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
decode_number, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
decode_number, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
decode_number, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
decode_number, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12f80, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
decode_number, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
decode_number, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
decode_number, (unique, 0x13280, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
decode_number, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
decode_number, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
decode_number, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
decode_number, (unique, 0x13500, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
decode_number, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
decode_number, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
decode_number, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
decode_number, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
decode_number, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
decode_number, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
decode_number, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
decode_number, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
decode_number, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
decode_number, (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1)
decode_number, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
decode_number,  ---  BRANCH (ram, 0x105d27, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105d60, 8)
decode_number,  ---  CALL (ram, 0x102600, 8)
decode_number, (register, 0xb8, 8) COPY (register, 0x28, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
decode_number,  ---  BRANCH (ram, 0x105cdf, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number,  ---  CBRANCH (ram, 0x105dc6, 8) , (register, 0x206, 1)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
decode_number, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
decode_number, (register, 0x30, 8) COPY (const, 0x3d, 8)
decode_number, (register, 0x38, 8) COPY (register, 0x18, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105d81, 8)
decode_number,  ---  CALL (ram, 0x102400, 8)
decode_number, (register, 0x80, 4) COPY (register, 0x0, 4)
decode_number, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
decode_number, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x18, 4)
decode_number, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x18, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x18, 4)
decode_number, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
decode_number, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
decode_number, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
decode_number, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
decode_number,  ---  CBRANCH (ram, 0x105d97, 8) , (unique, 0xc680, 1)
decode_number, (register, 0x38, 8) COPY (register, 0x18, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105d94, 8)
decode_number,  ---  CALL (ram, 0x1023e0, 8)
decode_number, (register, 0x80, 4) COPY (register, 0x0, 4)
decode_number, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
decode_number, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
decode_number, (register, 0x10, 8) COPY (const, 0x1065f8, 8)
decode_number, (register, 0x88, 8) COPY (register, 0x18, 8)
decode_number, (register, 0x8, 8) COPY (register, 0x28, 8)
decode_number, (register, 0x30, 8) COPY (const, 0x1, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
decode_number, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105dba, 8)
decode_number,  ---  CALL (ram, 0x1025c0, 8)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105dbf, 8)
decode_number,  ---  CALL (ram, 0x105bf0, 8)
decode_number, (register, 0x38, 4) COPY (register, 0x0, 4)
decode_number, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105dc6, 8)
decode_number,  ---  CALL (ram, 0x104210, 8)
decode_number, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
decode_number, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
decode_number, (register, 0x10, 8) COPY (const, 0x106628, 8)
decode_number, (register, 0x8, 8) COPY (register, 0x28, 8)
decode_number, (register, 0x30, 8) COPY (const, 0x1, 8)
decode_number, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
decode_number, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
decode_number, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
decode_number, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
decode_number, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
decode_number, (register, 0x200, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x20b, 1) COPY (const, 0x0, 1)
decode_number, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
decode_number, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
decode_number, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
decode_number, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
decode_number, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
decode_number, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
decode_number, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
decode_number, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
decode_number,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105dee, 8)
decode_number,  ---  CALL (ram, 0x1025c0, 8)
decode_number,  ---  BRANCH (ram, 0x105dba, 8)
handle_option, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
handle_option, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
handle_option, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
handle_option, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
handle_option, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
handle_option, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
handle_option, (unique, 0xe780, 8) COPY (register, 0x28, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
handle_option, (unique, 0xe780, 8) COPY (register, 0x18, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
handle_option, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
handle_option, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
handle_option, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
handle_option, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
handle_option,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x88, 4)
handle_option, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x88, 4)
handle_option, (unique, 0x27f00, 4) INT_SUB (register, 0x10, 4) , (const, 0x88, 4)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
handle_option, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
handle_option,  ---  CBRANCH (ram, 0x106170, 8) , (unique, 0xc900, 1)
handle_option, (register, 0x80, 8) COPY (const, 0x107780, 8)
handle_option, (register, 0x18, 4) COPY (register, 0x30, 4)
handle_option, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
handle_option, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
handle_option, (unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8)
handle_option, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
handle_option, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
handle_option, (register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (register, 0x0, 8)
handle_option, (register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (register, 0x0, 8)
handle_option, (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (register, 0x0, 8)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCHIND (register, 0x80, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (ram, 0x309898, 4) INT_OR (ram, 0x309898, 4) , (const, 0x2, 4)
handle_option, (register, 0x207, 1) INT_SLESS (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (ram, 0x309898, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
handle_option, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
handle_option, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
handle_option, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
handle_option, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
handle_option, (register, 0x8, 8) INT_XOR (register, 0x8, 8) , (unique, 0xbd80, 8)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x0, 4) COPY (register, 0x18, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
handle_option,  ---  CBRANCH (ram, 0x10624f, 8) , (unique, 0xc680, 1)
handle_option, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x10, 8)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
handle_option, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  RETURN (register, 0x288, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (ram, 0x309898, 4) INT_OR (ram, 0x309898, 4) , (const, 0x1, 4)
handle_option, (register, 0x207, 1) INT_SLESS (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (ram, 0x309898, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x3098a8, 4) COPY (const, 0x2, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309854, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x30, 8) COPY (ram, 0x309838, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
handle_option, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105ea6, 8)
handle_option,  ---  CALL (ram, 0x104560, 8)
handle_option, (register, 0x200, 1) INT_LESS (ram, 0x309840, 8) , (const, 0x0, 8)
handle_option, (register, 0x20b, 1) INT_SBORROW (ram, 0x309840, 8) , (const, 0x0, 8)
handle_option, (unique, 0x28300, 8) INT_SUB (ram, 0x309840, 8) , (const, 0x0, 8)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (ram, 0x309838, 8) COPY (register, 0x0, 8)
handle_option, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
handle_option,  ---  CBRANCH (ram, 0x105e40, 8) , (unique, 0xc680, 1)
handle_option, (ram, 0x309840, 8) COPY (register, 0x0, 8)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309860, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x19, 1) INT_OR (register, 0x19, 1) , (const, 0x8, 1)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x19, 1) , (const, 0x0, 1)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x19, 1) , (const, 0x0, 1)
handle_option, (unique, 0x12c00, 1) INT_AND (register, 0x19, 1) , (const, 0xff, 1)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (ram, 0x309848, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x30984c, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309870, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x30985c, 4) COPY (const, 0x1, 4)
handle_option, (ram, 0x309014, 4) COPY (const, 0x2, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
handle_option, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309014, 4) COPY (const, 0x0, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309880, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x3098b0, 4) COPY (const, 0x2, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105f75, 8)
handle_option,  ---  CALL (ram, 0x1023b0, 8)
handle_option, (register, 0x8, 8) COPY (register, 0x0, 8)
handle_option, (register, 0x0, 8) COPY (ram, 0x308f88, 8)
handle_option, (register, 0x10, 8) COPY (const, 0x10716b, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x1, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
handle_option, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105f95, 8)
handle_option,  ---  CALL (ram, 0x1025c0, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
handle_option, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x105f9c, 8)
handle_option,  ---  CALL (ram, 0x104210, 8)
handle_option, (ram, 0x309864, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x40002, 4)
handle_option, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309014, 4) COPY (const, 0x3, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x3098b0, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309014, 4) COPY (const, 0x4, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (ram, 0x309898, 4) INT_OR (ram, 0x309898, 4) , (const, 0x4, 4)
handle_option, (register, 0x207, 1) INT_SLESS (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (ram, 0x309898, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (ram, 0x309898, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106658, 8)
handle_option, (register, 0x18, 8) COPY (const, 0x309040, 8)
handle_option, (register, 0xa8, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106019, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106690, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106025, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1066c8, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106031, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106700, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10603d, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106730, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106049, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106770, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106055, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x107129, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106061, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x28, 4) COPY (ram, 0x309044, 4)
handle_option, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
handle_option,  ---  CBRANCH (ram, 0x10607f, 8) , (unique, 0xc680, 1)
handle_option,  ---  BRANCH (ram, 0x1061a0, 8)
handle_option, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x20, 8)
handle_option, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x20, 8)
handle_option, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
handle_option, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
handle_option, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
handle_option, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  CBRANCH (ram, 0x1061a0, 8) , (register, 0x206, 1)
handle_option, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
handle_option, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x5f, 8)
handle_option, (register, 0x38, 8) COPY (register, 0xa0, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106090, 8)
handle_option,  ---  CALL (ram, 0x102400, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
handle_option, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
handle_option,  ---  CBRANCH (ram, 0x106070, 8) , (unique, 0xc680, 1)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
handle_option, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
handle_option,  ---  CBRANCH (ram, 0x106218, 8) , (unique, 0xce80, 1)
handle_option, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
handle_option, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
handle_option, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
handle_option, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
handle_option, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  CBRANCH (ram, 0x106230, 8) , (register, 0x206, 1)
handle_option, (register, 0x8, 8) COPY (const, 0x107138, 8)
handle_option, (register, 0x80, 4) COPY (register, 0x28, 4)
handle_option, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
handle_option, (register, 0x10, 8) COPY (const, 0x4, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x38, 8) COPY (register, 0x20, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1060c6, 8)
handle_option,  ---  CALL (ram, 0x102610, 8)
handle_option, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
handle_option, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
handle_option, (register, 0xb0, 8) COPY (register, 0x20, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x10713d, 8)
handle_option, (register, 0x10, 8) COPY (register, 0xb0, 8)
handle_option, (register, 0x8, 8) COPY (register, 0xa0, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1060e6, 8)
handle_option,  ---  CALL (ram, 0x102560, 8)
handle_option, (register, 0x10, 8) COPY (const, 0x1f, 8)
handle_option, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
handle_option, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
handle_option, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x8, 8) COPY (const, 0x107147, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x107163, 8)
handle_option, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
handle_option, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
handle_option, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
handle_option, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xce80, 1)
handle_option,  ---  CBRANCH (ram, 0x106105, 8) , (unique, 0x27780, 1)
handle_option, (register, 0x10, 4) COPY (register, 0xa8, 4)
handle_option, (register, 0x38, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106111, 8)
handle_option,  ---  CALL (ram, 0x102560, 8)
handle_option,  ---  BRANCH (ram, 0x106070, 8)
handle_option, (ram, 0x309860, 4) COPY (const, 0x1, 4)
handle_option, (ram, 0x309868, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x309878, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (ram, 0x30986c, 4) COPY (const, 0x1, 4)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (ram, 0x309010, 4) INT_AND (ram, 0x309010, 4) , (const, 0xfffffffe, 4)
handle_option, (register, 0x207, 1) INT_SLESS (ram, 0x309010, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (ram, 0x309010, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (ram, 0x309010, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x105e40, 8)
handle_option, (register, 0x0, 8) COPY (ram, 0x308fc0, 8)
handle_option, (register, 0x8, 4) COPY (register, 0x38, 4)
handle_option, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
handle_option, (register, 0x10, 8) COPY (const, 0x107180, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x1, 8)
handle_option, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
handle_option, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10618f, 8)
handle_option,  ---  CALL (ram, 0x1025c0, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106194, 8)
handle_option,  ---  CALL (ram, 0x105bf0, 8)
handle_option, (register, 0x38, 4) COPY (register, 0x0, 4)
handle_option, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10619b, 8)
handle_option,  ---  CALL (ram, 0x104210, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1067a8, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1061ac, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x1067e8, 8)
handle_option, (register, 0x10, 8) COPY (const, 0x5000, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1061c4, 8)
handle_option,  ---  CALL (ram, 0x102560, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106818, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1061d0, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106858, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1061dc, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x106888, 8)
handle_option, (register, 0x10, 8) COPY (const, 0x2000, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
handle_option, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1061f4, 8)
handle_option,  ---  CALL (ram, 0x102560, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x1068b8, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106200, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x38, 8) COPY (const, 0x106908, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10620c, 8)
handle_option,  ---  CALL (ram, 0x102370, 8)
handle_option, (register, 0x200, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x20b, 1) COPY (const, 0x0, 1)
handle_option, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
handle_option, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106213, 8)
handle_option,  ---  CALL (ram, 0x104210, 8)
handle_option, (unique, 0xbd00, 4) COPY (const, 0x202020, 4)
handle_option,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd00, 4)
handle_option, (register, 0xb0, 8) COPY (register, 0x20, 8)
handle_option,  ---  BRANCH (ram, 0x1060cd, 8)
handle_option, (register, 0x30, 8) COPY (const, 0x107132, 8)
handle_option, (register, 0x10, 4) COPY (register, 0x28, 4)
handle_option, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
handle_option, (register, 0x38, 8) COPY (const, 0x1, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106243, 8)
handle_option,  ---  CALL (ram, 0x102560, 8)
handle_option, (register, 0x10, 8) COPY (const, 0x1f, 8)
handle_option, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
handle_option, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
handle_option, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
handle_option, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
handle_option, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
handle_option, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
handle_option, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
handle_option, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
handle_option,  ---  BRANCH (ram, 0x1060ed, 8)
handle_option, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
handle_option,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106254, 8)
handle_option,  ---  CALL (ram, 0x1023f0, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb8, 4) COPY (register, 0x38, 4)
__libc_csu_init, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb0, 8) COPY (register, 0x30, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa8, 8) COPY (register, 0x10, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa0, 8) COPY (const, 0x308ac0, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x28, 8) COPY (const, 0x308ac8, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x18, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
__libc_csu_init, (unique, 0x51c00, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x28, 8) INT_SRIGHT (register, 0x28, 8) , (unique, 0x51b80, 4)
__libc_csu_init, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
__libc_csu_init, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
__libc_csu_init, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
__libc_csu_init, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
__libc_csu_init, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
__libc_csu_init, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
__libc_csu_init, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
__libc_csu_init, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12f80, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
__libc_csu_init, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
__libc_csu_init, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
__libc_csu_init, (unique, 0x13280, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
__libc_csu_init, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
__libc_csu_init, (unique, 0x13500, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
__libc_csu_init, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
__libc_csu_init, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
__libc_csu_init, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
__libc_csu_init, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x106293, 8)
__libc_csu_init,  ---  CALL (ram, 0x1022e8, 8)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x1062b6, 8) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
__libc_csu_init, (register, 0x10, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x30, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x38, 4) COPY (register, 0xb8, 4)
__libc_csu_init, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
__libc_csu_init, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)
__libc_csu_init, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1062ad, 8)
__libc_csu_init, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
__libc_csu_init,  ---  CALLIND (unique, 0xbd80, 8)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x1062a0, 8) , (unique, 0xc680, 1)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  RETURN (register, 0x288, 8)
__libc_csu_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_fini,  ---  RETURN (register, 0x288, 8)
_fini, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini,  ---  RETURN (register, 0x288, 8)
