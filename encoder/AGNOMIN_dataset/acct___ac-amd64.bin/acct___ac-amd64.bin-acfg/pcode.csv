_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x0, 8) COPY (ram, 0x604ff8, 8)
_init, (register, 0x200, 1) COPY (const, 0x0, 1)
_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
_init, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init,  ---  CBRANCH (ram, 0x400d45, 8) , (register, 0x206, 1)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x400d45, 8)
_init,  ---  CALL (ram, 0x400e90, 8)
_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  RETURN (register, 0x288, 8)
FUN_00400d50, (unique, 0xe780, 8) COPY (ram, 0x605008, 8)
FUN_00400d50, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
FUN_00400d50,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
FUN_00400d50,  ---  BRANCHIND (ram, 0x605010, 8)
__snprintf_chk,  ---  BRANCHIND (ram, 0x605018, 8)
free,  ---  BRANCHIND (ram, 0x605020, 8)
localtime,  ---  BRANCHIND (ram, 0x605028, 8)
abort,  ---  BRANCHIND (ram, 0x605030, 8)
strncpy,  ---  BRANCHIND (ram, 0x605038, 8)
ftello,  ---  BRANCHIND (ram, 0x605040, 8)
puts,  ---  BRANCHIND (ram, 0x605048, 8)
fread,  ---  BRANCHIND (ram, 0x605050, 8)
fclose,  ---  BRANCHIND (ram, 0x605058, 8)
ctime,  ---  BRANCHIND (ram, 0x605060, 8)
strlen,  ---  BRANCHIND (ram, 0x605068, 8)
__stack_chk_fail,  ---  BRANCHIND (ram, 0x605070, 8)
getopt_long,  ---  BRANCHIND (ram, 0x605078, 8)
fputs,  ---  BRANCHIND (ram, 0x605080, 8)
memset,  ---  BRANCHIND (ram, 0x605088, 8)
fputc,  ---  BRANCHIND (ram, 0x605090, 8)
__libc_start_main,  ---  BRANCHIND (ram, 0x605098, 8)
memcmp,  ---  BRANCHIND (ram, 0x6050a0, 8)
calloc,  ---  BRANCHIND (ram, 0x6050a8, 8)
__gmon_start__,  ---  BRANCHIND (ram, 0x6050b0, 8)
strtol,  ---  BRANCHIND (ram, 0x6050b8, 8)
memcpy,  ---  BRANCHIND (ram, 0x6050c0, 8)
time,  ---  BRANCHIND (ram, 0x6050c8, 8)
malloc,  ---  BRANCHIND (ram, 0x6050d0, 8)
mktime,  ---  BRANCHIND (ram, 0x6050d8, 8)
fseek,  ---  BRANCHIND (ram, 0x6050e0, 8)
realloc,  ---  BRANCHIND (ram, 0x6050e8, 8)
__printf_chk,  ---  BRANCHIND (ram, 0x6050f0, 8)
error,  ---  BRANCHIND (ram, 0x6050f8, 8)
fopen,  ---  BRANCHIND (ram, 0x605100, 8)
perror,  ---  BRANCHIND (ram, 0x605108, 8)
__memset_chk,  ---  BRANCHIND (ram, 0x605110, 8)
exit,  ---  BRANCHIND (ram, 0x605118, 8)
fwrite,  ---  BRANCHIND (ram, 0x605120, 8)
__fprintf_chk,  ---  BRANCHIND (ram, 0x605128, 8)
__ctype_b_loc,  ---  BRANCHIND (ram, 0x605130, 8)
__sprintf_chk,  ---  BRANCHIND (ram, 0x605138, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
main, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xe780, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0x28, 4) COPY (register, 0x38, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x18, 8) COPY (register, 0x30, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x10, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x10, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x10, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (ram, 0x605448, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x400fe1, 8)
main,  ---  CALL (ram, 0x402e50, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (register, 0x80, 8) COPY (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (const, 0x605180, 8)
main, (register, 0x10, 8) COPY (const, 0x403991, 8)
main, (register, 0x30, 8) COPY (register, 0x18, 8)
main, (register, 0x38, 4) COPY (register, 0x28, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401009, 8)
main,  ---  CALL (ram, 0x400e20, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x401185, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x7a, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x7a, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x7a, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x401176, 8) , (unique, 0xc900, 1)
main, (register, 0x0, 4) COPY (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3580, 8) INT_ADD (const, 0x403b10, 8) , (unique, 0x3480, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
main,  ---  BRANCHIND (unique, 0xbd80, 8)
main, (ram, 0x605410, 4) COPY (const, 0x1, 4)
main, (ram, 0x605414, 4) COPY (const, 0x1, 4)
main, (ram, 0x605418, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605430, 4) COPY (const, 0x1, 4)
main, (ram, 0x60542c, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (register, 0x38, 8) COPY (ram, 0x6053d8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x10, 8) COPY (const, 0xa, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40106d, 8)
main,  ---  CALL (ram, 0x400ea0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x6053a0, 8) COPY (register, 0x0, 8)
main,  ---  CBRANCH (ram, 0x40129a, 8) , (register, 0x207, 1)
main, (register, 0x0, 8) COPY (ram, 0x6053a8, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x6053a0, 8) , (register, 0x0, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x6053a0, 8) , (register, 0x0, 8)
main, (unique, 0x28700, 8) INT_SUB (ram, 0x6053a0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x400fe8, 8) , (unique, 0xd080, 1)
main, (register, 0x38, 8) COPY (const, 0x403848, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40109b, 8)
main,  ---  CALL (ram, 0x402280, 8)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x60540c, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605428, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (register, 0x38, 8) COPY (ram, 0x6053d8, 8)
main, (register, 0xa0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4010d0, 8)
main,  ---  CALL (ram, 0x402e80, 8)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605408, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605404, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (register, 0x10, 8) COPY (ram, 0x605448, 8)
main, (register, 0x38, 8) COPY (const, 0x1, 8)
main, (register, 0x8, 8) COPY (const, 0x40399b, 8)
main, (register, 0x30, 8) COPY (const, 0x4037e0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401110, 8)
main,  ---  CALL (ram, 0x400f10, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401117, 8)
main,  ---  CALL (ram, 0x400f60, 8)
main, (register, 0x38, 8) COPY (ram, 0x6053d8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x10, 8) COPY (const, 0xa, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40112a, 8)
main,  ---  CALL (ram, 0x400ea0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x6053a8, 8) COPY (register, 0x0, 8)
main, (unique, 0xca00, 1) BOOL_NEGATE (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x400fe8, 8) , (unique, 0xca00, 1)
main, (register, 0x38, 8) COPY (const, 0x4037b0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401144, 8)
main,  ---  CALL (ram, 0x402280, 8)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605400, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605410, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (ram, 0x605414, 4) COPY (const, 0x1, 4)
main,  ---  BRANCH (ram, 0x400fe8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40117b, 8)
main,  ---  CALL (ram, 0x4013b0, 8)
main, (register, 0x38, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401185, 8)
main,  ---  CALL (ram, 0x400f60, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (ram, 0x6053d0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (ram, 0x6053d0, 4)
main, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (ram, 0x6053d0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x40123f, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x401230, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4011a1, 8)
main,  ---  CALL (ram, 0x402850, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x6053f8, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4011af, 8)
main,  ---  CALL (ram, 0x402850, 8)
main, (ram, 0x605440, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4011bb, 8)
main,  ---  CALL (ram, 0x401d30, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4011c2, 8)
main,  ---  CALL (ram, 0x400ec0, 8)
main, (register, 0x18, 8) COPY (ram, 0x605420, 8)
main, (register, 0x80, 8) COPY (const, 0x403937, 8)
main, (register, 0x8, 8) COPY (const, 0x1, 8)
main, (register, 0x10, 8) COPY (const, 0x1, 8)
main, (register, 0x38, 8) COPY (const, 0x605450, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x18, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x18, 8)
main, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x18, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xcd00, 1)
main,  ---  CBRANCH (ram, 0x4011e5, 8) , (unique, 0x27800, 1)
main, (register, 0x18, 8) COPY (register, 0x0, 8)
main, (register, 0x30, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4011ed, 8)
main,  ---  CALL (ram, 0x401bd0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x8, 8) COPY (const, 0x4039af, 8)
main, (register, 0x30, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401201, 8)
main,  ---  CALL (ram, 0x4017d0, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x605404, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x605404, 4) , (const, 0x0, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x605404, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (const, 0x403896, 8)
main,  ---  CBRANCH (ram, 0x401224, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x605428, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x605428, 4) , (const, 0x0, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x605428, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (const, 0x403984, 8)
main, (register, 0x0, 8) COPY (const, 0x40398a, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xc680, 1)
main,  ---  CBRANCH (ram, 0x401224, 8) , (unique, 0x27800, 1)
main, (register, 0x38, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401229, 8)
main,  ---  CALL (ram, 0x401450, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401230, 8)
main,  ---  CALL (ram, 0x400f60, 8)
main, (register, 0x38, 8) COPY (const, 0x4039a1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40123a, 8)
main,  ---  CALL (ram, 0x402e80, 8)
main,  ---  BRANCH (ram, 0x40119a, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401246, 8)
main,  ---  CALL (ram, 0x402850, 8)
main, (ram, 0x6053f0, 8) COPY (register, 0x0, 8)
main,  ---  BRANCH (ram, 0x40126a, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (ram, 0x6053f0, 8)
main, (ram, 0x6053d0, 4) COPY (register, 0x10, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40126a, 8)
main,  ---  CALL (ram, 0x402890, 8)
main, (register, 0x0, 8) INT_SEXT (ram, 0x6053d0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x40124f, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (ram, 0x605430, 4) , (const, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x605430, 4) , (const, 0x0, 4)
main, (unique, 0x28200, 4) INT_SUB (ram, 0x605430, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x401191, 8) , (register, 0x206, 1)
main, (register, 0x30, 8) COPY (ram, 0x6053c0, 8)
main, (register, 0x38, 8) COPY (ram, 0x6053f0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401295, 8)
main,  ---  CALL (ram, 0x402d50, 8)
main,  ---  BRANCH (ram, 0x401191, 8)
main, (register, 0x38, 8) COPY (const, 0x403810, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4012a4, 8)
main,  ---  CALL (ram, 0x402280, 8)
main,  ---  BRANCH (ram, 0x40107d, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_start, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_start, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (register, 0x88, 8) COPY (register, 0x10, 8)
_start, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_start, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_start, (register, 0x10, 8) COPY (register, 0x20, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x20, 8) INT_AND (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8)
_start, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_start, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (unique, 0xe780, 8) COPY (register, 0x0, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (unique, 0xe780, 8) COPY (register, 0x20, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (register, 0x80, 8) COPY (const, 0x403460, 8)
_start, (register, 0x8, 8) COPY (const, 0x4033f0, 8)
_start, (register, 0x38, 8) COPY (const, 0x400fb0, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4012d2, 8)
_start,  ---  CALL (ram, 0x400e60, 8)
_start,  ---  BRANCH (ram, 0x4012d2, 8)
deregister_tm_clones, (register, 0x0, 8) COPY (const, 0x6053bf, 8)
deregister_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
deregister_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x6053b8, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x6053b8, 8)
deregister_tm_clones, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x6053b8, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (unique, 0x28300, 8) INT_SUB (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
deregister_tm_clones, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x401310, 8) , (unique, 0xc780, 1)
deregister_tm_clones, (register, 0x0, 8) COPY (const, 0x0, 8)
deregister_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x401310, 8) , (register, 0x206, 1)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones, (register, 0x38, 8) COPY (const, 0x6053b8, 8)
deregister_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  RETURN (register, 0x288, 8)
register_tm_clones, (register, 0x30, 8) COPY (const, 0x6053b8, 8)
register_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
register_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (const, 0x6053b8, 8)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (const, 0x6053b8, 8)
register_tm_clones, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (const, 0x6053b8, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x51c00, 8) COPY (register, 0x30, 8)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (unique, 0x51b80, 4)
register_tm_clones, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
register_tm_clones, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
register_tm_clones, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
register_tm_clones, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
register_tm_clones, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
register_tm_clones, (register, 0x0, 8) COPY (register, 0x30, 8)
register_tm_clones, (unique, 0x57880, 4) INT_AND (const, 0x3f, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x57900, 8) COPY (register, 0x0, 8)
register_tm_clones, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57880, 4)
register_tm_clones, (unique, 0x16100, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x16180, 4) INT_SUB (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16200, 8) INT_RIGHT (unique, 0x57900, 8) , (unique, 0x16180, 4)
register_tm_clones, (unique, 0x16280, 8) INT_AND (unique, 0x16200, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x16380, 1) INT_NOTEQUAL (unique, 0x16280, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16400, 1) BOOL_NEGATE (unique, 0x16100, 1)
register_tm_clones, (unique, 0x16480, 1) INT_AND (unique, 0x16400, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x16500, 1) INT_AND (unique, 0x16100, 1) , (unique, 0x16380, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x16480, 1) , (unique, 0x16500, 1)
register_tm_clones, (unique, 0x16680, 1) INT_EQUAL (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16780, 1) INT_SLESS (unique, 0x57900, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16800, 1) BOOL_NEGATE (unique, 0x16680, 1)
register_tm_clones, (unique, 0x16880, 1) INT_AND (unique, 0x16800, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x16900, 1) INT_AND (unique, 0x16680, 1) , (unique, 0x16780, 1)
register_tm_clones, (register, 0x20b, 1) INT_OR (unique, 0x16880, 1) , (unique, 0x16900, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
register_tm_clones, (unique, 0x51780, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)
register_tm_clones, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51780, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (const, 0x1, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x401358, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x0, 8) COPY (const, 0x0, 8)
register_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x401358, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones, (register, 0x38, 8) COPY (const, 0x6053b8, 8)
register_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  RETURN (register, 0x288, 8)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x6053e8, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x6053e8, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x27d00, 1) INT_SUB (ram, 0x6053e8, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
__do_global_dtors_aux, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
__do_global_dtors_aux, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x40137a, 8) , (unique, 0xc680, 1)
__do_global_dtors_aux, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__do_global_dtors_aux, (register, 0x28, 8) COPY (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401372, 8)
__do_global_dtors_aux,  ---  CALL (ram, 0x4012e0, 8)
__do_global_dtors_aux, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux, (ram, 0x6053e8, 1) COPY (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  RETURN (register, 0x288, 8)
frame_dummy, (register, 0x38, 8) COPY (const, 0x604e20, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
frame_dummy,  ---  CBRANCH (ram, 0x401390, 8) , (unique, 0xc680, 1)
frame_dummy,  ---  BRANCH (ram, 0x401320, 8)
frame_dummy, (register, 0x0, 8) COPY (const, 0x0, 8)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy,  ---  CBRANCH (ram, 0x40138b, 8) , (register, 0x206, 1)
frame_dummy, (unique, 0xe780, 8) COPY (register, 0x28, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
frame_dummy, (register, 0x28, 8) COPY (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4013a0, 8)
frame_dummy,  ---  CALLIND (register, 0x0, 8)
frame_dummy, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  BRANCH (ram, 0x401320, 8)
give_usage, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
give_usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
give_usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
give_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
give_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
give_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
give_usage, (register, 0x10, 8) COPY (ram, 0x605448, 8)
give_usage, (register, 0x30, 8) COPY (const, 0x403488, 8)
give_usage, (register, 0x38, 8) COPY (const, 0x1, 8)
give_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
give_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
give_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
give_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
give_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
give_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
give_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
give_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
give_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
give_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
give_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
give_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4013cc, 8)
give_usage,  ---  CALL (ram, 0x400f10, 8)
give_usage, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
give_usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
give_usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
give_usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
give_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
give_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
give_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
give_usage,  ---  BRANCH (ram, 0x4023a0, 8)
update_system_time, (unique, 0xe780, 8) COPY (register, 0x18, 8)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_system_time, (register, 0x18, 8) COPY (register, 0x38, 8)
update_system_time, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x38, 8) COPY (ram, 0x605440, 8)
update_system_time, (register, 0x30, 8) COPY (register, 0x20, 8)
update_system_time, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
update_system_time, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
update_system_time, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
update_system_time, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
update_system_time,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
update_system_time, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_system_time, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401407, 8)
update_system_time,  ---  CALL (ram, 0x402d00, 8)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time,  ---  CBRANCH (ram, 0x401429, 8) , (register, 0x206, 1)
update_system_time, (register, 0x38, 8) COPY (register, 0x0, 8)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401418, 8)
update_system_time,  ---  CALL (ram, 0x402cc0, 8)
update_system_time, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (register, 0x18, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd80, 8) , (register, 0x18, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x18, 8)
update_system_time,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x38, 8) COPY (register, 0x20, 8)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401424, 8)
update_system_time,  ---  CALL (ram, 0x402d20, 8)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
update_system_time,  ---  CBRANCH (ram, 0x401410, 8) , (unique, 0xc680, 1)
update_system_time, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
update_system_time, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
update_system_time, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
update_system_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_system_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_system_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
update_system_time, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
update_system_time,  ---  CBRANCH (ram, 0x40143f, 8) , (unique, 0xc680, 1)
update_system_time, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
update_system_time, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
update_system_time, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
update_system_time, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
update_system_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_system_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_system_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_system_time, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_system_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_system_time, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_system_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  RETURN (register, 0x288, 8)
update_system_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_system_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401444, 8)
update_system_time,  ---  CALL (ram, 0x400e10, 8)
do_statistics, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_statistics, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_statistics, (register, 0xb0, 8) COPY (register, 0x38, 8)
do_statistics, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_statistics, (unique, 0xe780, 8) COPY (register, 0x28, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_statistics, (unique, 0xe780, 8) COPY (register, 0x18, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x38, 8) COPY (ram, 0x6053f8, 8)
do_statistics, (register, 0x30, 8) COPY (register, 0x20, 8)
do_statistics, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_statistics, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_statistics, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_statistics, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
do_statistics, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_statistics,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40147e, 8)
do_statistics,  ---  CALL (ram, 0x402d00, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x18, 8) COPY (register, 0x0, 8)
do_statistics,  ---  CBRANCH (ram, 0x401646, 8) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
do_statistics, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0xa8, 8) COPY (const, 0x403894, 8)
do_statistics,  ---  BRANCH (ram, 0x40150a, 8)
do_statistics, (register, 0x90, 4) COPY (ram, 0x605400, 4)
do_statistics, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x4014f2, 8) , (register, 0x206, 1)
do_statistics, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
do_statistics, (register, 0x1200, 8) INT2FLOAT (register, 0x8, 8)
do_statistics, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x403f68, 8)
do_statistics, (register, 0x38, 4) COPY (ram, 0x605428, 4)
do_statistics, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
do_statistics, (register, 0x10, 8) COPY (const, 0x403895, 8)
do_statistics, (register, 0x88, 8) COPY (register, 0xa0, 8)
do_statistics, (register, 0x80, 8) COPY (const, 0x20, 8)
do_statistics, (register, 0x8, 8) COPY (const, 0x20, 8)
do_statistics, (register, 0x30, 8) COPY (const, 0x403897, 8)
do_statistics, (register, 0x0, 8) COPY (const, 0x1, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x38, 8) COPY (const, 0x1, 8)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xc680, 1)
do_statistics,  ---  CBRANCH (ram, 0x4014e3, 8) , (unique, 0x27800, 1)
do_statistics, (register, 0x10, 8) COPY (register, 0xa8, 8)
do_statistics, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0x3f780, 8) COPY (const, 0x8, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4014ee, 8)
do_statistics,  ---  CALL (ram, 0x400f10, 8)
do_statistics, (register, 0x80, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x88, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x38, 8) COPY (register, 0x18, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4014fa, 8)
do_statistics,  ---  CALL (ram, 0x402de0, 8)
do_statistics, (register, 0x38, 8) COPY (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401502, 8)
do_statistics,  ---  CALL (ram, 0x402d20, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x18, 8) COPY (register, 0x0, 8)
do_statistics,  ---  CBRANCH (ram, 0x401580, 8) , (register, 0x206, 1)
do_statistics, (register, 0x38, 8) COPY (register, 0x18, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401512, 8)
do_statistics,  ---  CALL (ram, 0x402cb0, 8)
do_statistics, (register, 0x38, 8) COPY (ram, 0x6053f0, 8)
do_statistics, (register, 0xa0, 8) COPY (register, 0x0, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x401533, 8) , (register, 0x206, 1)
do_statistics, (register, 0x10, 8) COPY (const, 0x20, 8)
do_statistics, (register, 0x30, 8) COPY (register, 0x0, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40152e, 8)
do_statistics,  ---  CALL (ram, 0x402bd0, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x4014f2, 8) , (register, 0x206, 1)
do_statistics, (register, 0x38, 8) COPY (register, 0x18, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40153b, 8)
do_statistics,  ---  CALL (ram, 0x402cc0, 8)
do_statistics, (register, 0x98, 4) COPY (ram, 0x605408, 4)
do_statistics, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
do_statistics, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
do_statistics, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (register, 0x8, 8)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (register, 0x8, 8)
do_statistics, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x8, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x4014f2, 8) , (register, 0x206, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x401498, 8) , (register, 0x206, 1)
do_statistics, (unique, 0xca00, 1) BOOL_NEGATE (register, 0x207, 1)
do_statistics,  ---  CBRANCH (ram, 0x4014a4, 8) , (unique, 0xca00, 1)
do_statistics, (register, 0x0, 8) COPY (register, 0x8, 8)
do_statistics, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
do_statistics, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
do_statistics, (unique, 0x57480, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)
do_statistics, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x57480, 8) , (const, 0x0, 8)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
do_statistics, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x1200, 8) INT2FLOAT (register, 0x0, 8)
do_statistics, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1200, 8)
do_statistics,  ---  BRANCH (ram, 0x4014ad, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x401628, 8) , (register, 0x207, 1)
do_statistics, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
do_statistics, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 8)
do_statistics, (register, 0x30, 4) COPY (ram, 0x605404, 4)
do_statistics, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
do_statistics, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x403f68, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x4015f0, 8) , (unique, 0xc680, 1)
do_statistics, (register, 0x10, 4) COPY (ram, 0x605428, 4)
do_statistics, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
do_statistics, (register, 0x0, 8) COPY (const, 0x403894, 8)
do_statistics, (register, 0x8, 8) COPY (const, 0xb, 8)
do_statistics, (register, 0x30, 8) COPY (const, 0x4038b7, 8)
do_statistics, (register, 0x38, 8) COPY (const, 0x1, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x10, 8) COPY (const, 0x403895, 8)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xc680, 1)
do_statistics,  ---  CBRANCH (ram, 0x4015c9, 8) , (unique, 0x27800, 1)
do_statistics, (register, 0x10, 8) COPY (register, 0x0, 8)
do_statistics, (register, 0x0, 8) COPY (const, 0x1, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4015d3, 8)
do_statistics,  ---  CALL (ram, 0x400f10, 8)
do_statistics, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
do_statistics, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
do_statistics, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_statistics, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_statistics, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x401659, 8) , (unique, 0xc680, 1)
do_statistics, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_statistics, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  RETURN (register, 0x288, 8)
do_statistics, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
do_statistics, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x403f60, 8)
do_statistics, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
do_statistics, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x403f60, 8)
do_statistics, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
do_statistics, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x403f60, 8)
do_statistics, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x204, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x207, 1) COPY (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x401606, 8) , (register, 0x202, 1)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x401606, 8) , (unique, 0xc680, 1)
do_statistics, (register, 0x8, 4) COPY (ram, 0x605400, 4)
do_statistics, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics,  ---  CBRANCH (ram, 0x4015d3, 8) , (register, 0x206, 1)
do_statistics, (register, 0x8, 8) COPY (const, 0xb, 8)
do_statistics, (register, 0x10, 8) COPY (register, 0xb0, 8)
do_statistics, (register, 0x30, 8) COPY (const, 0x4038a7, 8)
do_statistics, (register, 0x38, 8) COPY (const, 0x1, 8)
do_statistics, (register, 0x0, 8) COPY (const, 0x1, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401622, 8)
do_statistics,  ---  CALL (ram, 0x400f10, 8)
do_statistics,  ---  BRANCH (ram, 0x4015d3, 8)
do_statistics, (register, 0x0, 8) COPY (register, 0x28, 8)
do_statistics, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
do_statistics, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
do_statistics, (unique, 0x57480, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)
do_statistics, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x57480, 8) , (const, 0x0, 8)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x1, 4)
do_statistics, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x28, 8)
do_statistics, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_statistics, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (register, 0x1200, 8) INT2FLOAT (register, 0x0, 8)
do_statistics, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1200, 8)
do_statistics,  ---  BRANCH (ram, 0x401592, 8)
do_statistics, (register, 0x0, 4) COPY (ram, 0x605404, 4)
do_statistics, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_statistics, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
do_statistics, (register, 0x200, 1) COPY (const, 0x0, 1)
do_statistics, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_statistics, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_statistics, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_statistics, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_statistics, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_statistics, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_statistics, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_statistics, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_statistics,  ---  CBRANCH (ram, 0x4015fc, 8) , (unique, 0xc680, 1)
do_statistics,  ---  BRANCH (ram, 0x4015a4, 8)
do_statistics, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_statistics,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40165e, 8)
do_statistics,  ---  CALL (ram, 0x400e10, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0x28, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (register, 0xa0, 8) COPY (register, 0x10, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0x18, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (register, 0x28, 8) COPY (register, 0x38, 8)
update_user_time, (register, 0x18, 8) COPY (register, 0x30, 8)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
update_user_time, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
update_user_time, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
update_user_time,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x401738, 8) , (register, 0x207, 1)
update_user_time, (register, 0x8, 4) COPY (ram, 0x605430, 4)
update_user_time, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
update_user_time, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x4016f4, 8) , (register, 0x206, 1)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053f0, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x4016b2, 8) , (register, 0x206, 1)
update_user_time, (register, 0x10, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x30, 8) COPY (register, 0x28, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4016ad, 8)
update_user_time,  ---  CALL (ram, 0x402bd0, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x4016f4, 8) , (register, 0x206, 1)
update_user_time, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0x28, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (register, 0x10, 8) COPY (const, 0x4038c6, 8)
update_user_time, (register, 0x88, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x80, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x8, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x30, 8) COPY (const, 0x1, 8)
update_user_time, (register, 0x1200, 8) INT2FLOAT (register, 0x18, 8)
update_user_time, (register, 0x0, 8) COPY (const, 0x1, 8)
update_user_time, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x403f68, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4016f2, 8)
update_user_time,  ---  CALL (ram, 0x400f80, 8)
update_user_time, (register, 0x0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053f8, 8)
update_user_time, (register, 0x10, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x30, 8) COPY (register, 0x28, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401708, 8)
update_user_time,  ---  CALL (ram, 0x402bd0, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time,  ---  CBRANCH (ram, 0x401780, 8) , (register, 0x206, 1)
update_user_time, (register, 0x38, 8) COPY (register, 0x0, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401715, 8)
update_user_time,  ---  CALL (ram, 0x402cc0, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (register, 0x18, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd80, 8) , (register, 0x18, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x18, 8)
update_user_time,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
update_user_time, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
update_user_time, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
update_user_time, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
update_user_time,  ---  CBRANCH (ram, 0x4017be, 8) , (unique, 0xc680, 1)
update_user_time, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  RETURN (register, 0x288, 8)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401744, 8)
update_user_time,  ---  CALL (ram, 0x403030, 8)
update_user_time, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
update_user_time, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
update_user_time, (register, 0x30, 8) COPY (const, 0x1, 8)
update_user_time, (unique, 0xe780, 8) COPY (register, 0x18, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
update_user_time, (register, 0x88, 8) COPY (register, 0xa0, 8)
update_user_time, (register, 0x80, 8) COPY (register, 0x28, 8)
update_user_time, (register, 0x8, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x10, 8) COPY (const, 0x4035f8, 8)
update_user_time, (register, 0x200, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x20b, 1) COPY (const, 0x0, 1)
update_user_time, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
update_user_time, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
update_user_time, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
update_user_time, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
update_user_time, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
update_user_time, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
update_user_time, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40176c, 8)
update_user_time,  ---  CALL (ram, 0x400f80, 8)
update_user_time, (register, 0x38, 8) COPY (const, 0x403638, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401776, 8)
update_user_time,  ---  CALL (ram, 0x402280, 8)
update_user_time, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time, (register, 0x38, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
update_user_time, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  BRANCH (ram, 0x40168a, 8)
update_user_time, (register, 0x38, 8) COPY (ram, 0x6053f8, 8)
update_user_time, (register, 0x10, 8) COPY (const, 0x20, 8)
update_user_time, (register, 0x30, 8) COPY (register, 0x28, 8)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
update_user_time, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
update_user_time,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40179d, 8)
update_user_time,  ---  CALL (ram, 0x402890, 8)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
update_user_time, (register, 0x30, 8) COPY (unique, 0x3800, 8)
update_user_time, (register, 0x38, 8) COPY (register, 0x0, 8)
update_user_time, (register, 0x10, 8) COPY (const, 0x8, 8)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
update_user_time, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
update_user_time,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4017b4, 8)
update_user_time,  ---  CALL (ram, 0x402cd0, 8)
update_user_time, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
update_user_time, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
update_user_time, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
update_user_time,  ---  BRANCH (ram, 0x40170d, 8)
update_user_time, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
update_user_time,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4017c3, 8)
update_user_time,  ---  CALL (ram, 0x400e10, 8)
log_everyone_out, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_everyone_out, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_everyone_out, (register, 0xa8, 8) COPY (register, 0x38, 8)
log_everyone_out, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_everyone_out, (unique, 0xe780, 8) COPY (register, 0x28, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_everyone_out, (register, 0xa0, 4) COPY (register, 0x30, 4)
log_everyone_out, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
log_everyone_out, (unique, 0xe780, 8) COPY (register, 0x18, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_everyone_out, (register, 0x28, 4) COPY (register, 0x10, 4)
log_everyone_out, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
log_everyone_out, (register, 0xb0, 8) COPY (register, 0x8, 8)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x38, 8) COPY (ram, 0x605440, 8)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x30, 8) COPY (unique, 0x3800, 8)
log_everyone_out, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
log_everyone_out, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_everyone_out, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401808, 8)
log_everyone_out,  ---  CALL (ram, 0x402d00, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x18, 8) COPY (register, 0x0, 8)
log_everyone_out, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x401832, 8) , (unique, 0xc680, 1)
log_everyone_out,  ---  BRANCH (ram, 0x401870, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x40185f, 8) , (register, 0x206, 1)
log_everyone_out, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) COPY (register, 0xa8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x38, 8) COPY (unique, 0x3800, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40182a, 8)
log_everyone_out,  ---  CALL (ram, 0x402d20, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x18, 8) COPY (register, 0x0, 8)
log_everyone_out,  ---  CBRANCH (ram, 0x401870, 8) , (register, 0x206, 1)
log_everyone_out, (register, 0x38, 8) COPY (register, 0x18, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40183a, 8)
log_everyone_out,  ---  CALL (ram, 0x402cc0, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x401818, 8) , (register, 0x206, 1)
log_everyone_out, (register, 0x30, 8) COPY (register, 0xa8, 8)
log_everyone_out, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_everyone_out, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_everyone_out, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (unique, 0xbd80, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_everyone_out, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0xbd80, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x38, 8) COPY (register, 0x0, 8)
log_everyone_out, (register, 0x10, 8) COPY (register, 0xb0, 8)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401856, 8)
log_everyone_out,  ---  CALL (ram, 0x401660, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
log_everyone_out, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_everyone_out, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
log_everyone_out, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
log_everyone_out, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x40181c, 8) , (unique, 0xc680, 1)
log_everyone_out, (register, 0x38, 8) COPY (register, 0x18, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401867, 8)
log_everyone_out,  ---  CALL (ram, 0x402de0, 8)
log_everyone_out,  ---  BRANCH (ram, 0x401820, 8)
log_everyone_out, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
log_everyone_out, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
log_everyone_out, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
log_everyone_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_everyone_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_everyone_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
log_everyone_out, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_everyone_out,  ---  CBRANCH (ram, 0x40188d, 8) , (unique, 0xc680, 1)
log_everyone_out, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x30, 8)
log_everyone_out, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
log_everyone_out, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
log_everyone_out, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
log_everyone_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_everyone_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_everyone_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_everyone_out, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_everyone_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  RETURN (register, 0x288, 8)
log_everyone_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_everyone_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401892, 8)
log_everyone_out,  ---  CALL (ram, 0x400e10, 8)
log_in, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_in, (unique, 0xe780, 8) COPY (register, 0x28, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_in, (unique, 0xe780, 8) COPY (register, 0x18, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_in, (register, 0x18, 8) COPY (register, 0x38, 8)
log_in, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
log_in, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
log_in, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
log_in, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
log_in, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
log_in,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_in, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
log_in, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
log_in, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
log_in, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
log_in, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x4018f0, 8) , (unique, 0xc680, 1)
log_in, (register, 0x8, 4) COPY (ram, 0x60542c, 4)
log_in, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x401958, 8) , (unique, 0xc680, 1)
log_in, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
log_in, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
log_in, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
log_in, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
log_in, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x401a2e, 8) , (unique, 0xc680, 1)
log_in, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x30, 8)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
log_in, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_in, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_in, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_in, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_in, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_in, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_in, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_in, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  RETURN (register, 0x288, 8)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
log_in, (register, 0x28, 8) COPY (unique, 0x3100, 8)
log_in, (register, 0x38, 8) COPY (ram, 0x605440, 8)
log_in, (register, 0x10, 8) COPY (const, 0x20, 8)
log_in, (register, 0x30, 8) COPY (register, 0x28, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401908, 8)
log_in,  ---  CALL (ram, 0x402bd0, 8)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
log_in, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (register, 0xa0, 8) COPY (register, 0x0, 8)
log_in,  ---  CBRANCH (ram, 0x4019e8, 8) , (register, 0x206, 1)
log_in, (register, 0x38, 8) COPY (register, 0x0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40191c, 8)
log_in,  ---  CALL (ram, 0x402cc0, 8)
log_in, (register, 0x10, 4) COPY (ram, 0x60542c, 4)
log_in, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
log_in, (register, 0x28, 8) COPY (register, 0x0, 8)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x4019a8, 8) , (unique, 0xc680, 1)
log_in, (register, 0x0, 4) COPY (ram, 0x605414, 4)
log_in, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_in, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_in,  ---  CBRANCH (ram, 0x401988, 8) , (unique, 0xc680, 1)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2c, 8)
log_in, (register, 0x30, 8) COPY (unique, 0x3100, 8)
log_in, (register, 0x10, 8) COPY (const, 0x20, 8)
log_in, (register, 0x38, 8) COPY (register, 0x28, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401944, 8)
log_in,  ---  CALL (ram, 0x400da0, 8)
log_in, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
log_in, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
log_in, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
log_in, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
log_in,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
log_in,  ---  BRANCH (ram, 0x4018cf, 8)
log_in, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401964, 8)
log_in,  ---  CALL (ram, 0x403030, 8)
log_in, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
log_in, (register, 0x10, 8) COPY (const, 0x33, 8)
log_in, (register, 0x30, 8) COPY (const, 0x1, 8)
log_in, (register, 0x38, 8) COPY (const, 0x403668, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40197f, 8)
log_in,  ---  CALL (ram, 0x400f70, 8)
log_in,  ---  BRANCH (ram, 0x4018cf, 8)
log_in, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
log_in, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
log_in, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
log_in, (register, 0x10, 8) COPY (const, 0x4038de, 8)
log_in, (register, 0x38, 8) COPY (register, 0x28, 8)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (unique, 0xbd80, 8)
log_in, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_in, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0xbd80, 8)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
log_in, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4019a0, 8)
log_in,  ---  CALL (ram, 0x401660, 8)
log_in,  ---  BRANCH (ram, 0x401933, 8)
log_in, (register, 0x38, 8) COPY (register, 0xa0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4019b0, 8)
log_in,  ---  CALL (ram, 0x402cb0, 8)
log_in, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_in, (register, 0xa0, 8) COPY (register, 0x0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4019bf, 8)
log_in,  ---  CALL (ram, 0x403030, 8)
log_in, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_in, (register, 0x80, 8) COPY (register, 0xa0, 8)
log_in, (register, 0x8, 8) COPY (const, 0x20, 8)
log_in, (register, 0x10, 8) COPY (const, 0x4036a0, 8)
log_in, (register, 0x30, 8) COPY (const, 0x1, 8)
log_in, (register, 0x200, 1) COPY (const, 0x0, 1)
log_in, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_in, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_in, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_in, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_in, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_in, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_in, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_in, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_in, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4019df, 8)
log_in,  ---  CALL (ram, 0x400f80, 8)
log_in,  ---  BRANCH (ram, 0x401929, 8)
log_in, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2c, 8)
log_in, (register, 0x30, 8) COPY (unique, 0x3100, 8)
log_in, (register, 0x38, 8) COPY (register, 0x20, 8)
log_in, (register, 0x10, 8) COPY (const, 0x20, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4019f9, 8)
log_in,  ---  CALL (ram, 0x400da0, 8)
log_in, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
log_in, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
log_in, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
log_in, (register, 0x38, 8) COPY (ram, 0x605440, 8)
log_in, (register, 0x30, 8) COPY (register, 0x28, 8)
log_in, (register, 0x10, 8) COPY (const, 0x20, 8)
log_in, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
log_in, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
log_in,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401a19, 8)
log_in,  ---  CALL (ram, 0x402890, 8)
log_in, (register, 0x10, 8) COPY (const, 0x28, 8)
log_in, (register, 0x30, 8) COPY (register, 0x20, 8)
log_in, (register, 0x38, 8) COPY (register, 0x0, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401a29, 8)
log_in,  ---  CALL (ram, 0x402cd0, 8)
log_in,  ---  BRANCH (ram, 0x4018cf, 8)
log_in, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_in,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401a33, 8)
log_in,  ---  CALL (ram, 0x400e10, 8)
log_out, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_out, (unique, 0xe780, 8) COPY (register, 0x28, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_out, (unique, 0xe780, 8) COPY (register, 0x18, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
log_out, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
log_out, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
log_out, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
log_out, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
log_out, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out, (register, 0x18, 8) COPY (register, 0x38, 8)
log_out, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_out,  ---  CBRANCH (ram, 0x401a60, 8) , (unique, 0xc680, 1)
log_out, (register, 0x10, 4) COPY (ram, 0x60542c, 4)
log_out, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_out, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
log_out,  ---  CBRANCH (ram, 0x401ab0, 8) , (unique, 0xc680, 1)
log_out, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  RETURN (register, 0x288, 8)
log_out, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
log_out, (register, 0xa0, 8) COPY (unique, 0x3100, 8)
log_out, (register, 0x38, 8) COPY (ram, 0x605440, 8)
log_out, (register, 0x10, 8) COPY (const, 0x20, 8)
log_out, (register, 0x30, 8) COPY (register, 0xa0, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401a78, 8)
log_out,  ---  CALL (ram, 0x402bd0, 8)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
log_out, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out, (register, 0x28, 8) COPY (register, 0x0, 8)
log_out,  ---  CBRANCH (ram, 0x401ae0, 8) , (register, 0x206, 1)
log_out, (register, 0x38, 8) COPY (register, 0x0, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401a88, 8)
log_out,  ---  CALL (ram, 0x402cc0, 8)
log_out, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
log_out, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
log_out, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
log_out, (register, 0x38, 8) COPY (register, 0x0, 8)
log_out, (register, 0x10, 8) COPY (const, 0x403940, 8)
log_out, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
log_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)
log_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (unique, 0xbd80, 8)
log_out, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
log_out, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0xbd80, 8)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
log_out, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401aa0, 8)
log_out,  ---  CALL (ram, 0x401660, 8)
log_out, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x38, 8) COPY (register, 0x28, 8)
log_out, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  BRANCH (ram, 0x402de0, 8)
log_out, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401abc, 8)
log_out,  ---  CALL (ram, 0x403030, 8)
log_out, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
log_out, (register, 0x10, 8) COPY (const, 0x33, 8)
log_out, (register, 0x30, 8) COPY (const, 0x1, 8)
log_out, (register, 0x38, 8) COPY (const, 0x403668, 8)
log_out,  ---  BRANCH (ram, 0x400f70, 8)
log_out, (register, 0x0, 4) COPY (ram, 0x60542c, 4)
log_out, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
log_out, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
log_out, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out,  ---  CBRANCH (ram, 0x401a57, 8) , (register, 0x206, 1)
log_out, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_out, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
log_out,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401afa, 8)
log_out,  ---  CALL (ram, 0x403030, 8)
log_out, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x80, 8) COPY (register, 0xa0, 8)
log_out, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
log_out, (register, 0x8, 8) COPY (const, 0x20, 8)
log_out, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
log_out, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
log_out, (register, 0x10, 8) COPY (const, 0x4036d0, 8)
log_out, (register, 0x30, 8) COPY (const, 0x1, 8)
log_out, (register, 0x200, 1) COPY (const, 0x0, 1)
log_out, (register, 0x20b, 1) COPY (const, 0x0, 1)
log_out, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
log_out, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
log_out, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
log_out, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
log_out, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
log_out, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
log_out, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
log_out, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
log_out,  ---  BRANCH (ram, 0x400f80, 8)
midnight_after_me, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
midnight_after_me, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
midnight_after_me, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
midnight_after_me, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
midnight_after_me, (register, 0x38, 8) COPY (unique, 0x3800, 8)
midnight_after_me, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
midnight_after_me, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (register, 0x200, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x20b, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
midnight_after_me, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
midnight_after_me, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
midnight_after_me, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401b43, 8)
midnight_after_me,  ---  CALL (ram, 0x400d80, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
midnight_after_me, (register, 0x38, 8) COPY (unique, 0x3800, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
midnight_after_me, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
midnight_after_me, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
midnight_after_me, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x28, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd00, 4) COPY (const, 0xffffffff, 4)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
midnight_after_me, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
midnight_after_me, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401bb0, 8)
midnight_after_me,  ---  CALL (ram, 0x400ee0, 8)
midnight_after_me, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
midnight_after_me, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
midnight_after_me, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
midnight_after_me, (register, 0x200, 1) COPY (const, 0x0, 1)
midnight_after_me, (register, 0x20b, 1) COPY (const, 0x0, 1)
midnight_after_me, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
midnight_after_me, (register, 0x8, 8) INT_XOR (register, 0x8, 8) , (unique, 0xbd80, 8)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
midnight_after_me, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
midnight_after_me, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
midnight_after_me, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
midnight_after_me, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
midnight_after_me,  ---  CBRANCH (ram, 0x401bc5, 8) , (unique, 0xc680, 1)
midnight_after_me, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x58, 8)
midnight_after_me, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
midnight_after_me, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
midnight_after_me, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
midnight_after_me, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
midnight_after_me, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
midnight_after_me, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
midnight_after_me, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
midnight_after_me, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
midnight_after_me,  ---  RETURN (register, 0x288, 8)
midnight_after_me, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
midnight_after_me,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401bca, 8)
midnight_after_me,  ---  CALL (ram, 0x400e10, 8)
do_totals, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (register, 0xb0, 4) COPY (register, 0x10, 4)
do_totals, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
do_totals, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (unique, 0xe780, 8) COPY (register, 0x28, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (register, 0xa8, 4) COPY (register, 0x8, 4)
do_totals, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
do_totals, (unique, 0xe780, 8) COPY (register, 0x18, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (register, 0x28, 8) COPY (register, 0x38, 8)
do_totals, (register, 0x18, 8) COPY (register, 0x30, 8)
do_totals, (register, 0xa0, 8) COPY (register, 0x80, 8)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_totals, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_totals, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
do_totals, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_totals,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
do_totals, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x0, 8)
do_totals, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_totals, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
do_totals,  ---  CBRANCH (ram, 0x401c25, 8) , (unique, 0xd080, 1)
do_totals,  ---  BRANCH (ram, 0x401ce0, 8)
do_totals, (register, 0x38, 8) COPY (register, 0x18, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401c18, 8)
do_totals,  ---  CALL (ram, 0x401b20, 8)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_totals,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
do_totals, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_totals, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
do_totals,  ---  CBRANCH (ram, 0x401ce0, 8) , (unique, 0xce80, 1)
do_totals, (register, 0x8, 8) COPY (register, 0xa0, 8)
do_totals, (register, 0x10, 4) COPY (register, 0xa8, 4)
do_totals, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
do_totals, (register, 0x30, 4) COPY (register, 0xb0, 4)
do_totals, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
do_totals, (register, 0x38, 8) COPY (register, 0x0, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401c36, 8)
do_totals,  ---  CALL (ram, 0x4017d0, 8)
do_totals, (register, 0x80, 4) COPY (ram, 0x605404, 4)
do_totals, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x401c10, 8) , (register, 0x206, 1)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
do_totals, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_totals, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
do_totals, (register, 0x38, 8) COPY (unique, 0x3800, 8)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xa, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xa, 8)
do_totals, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0xa, 8)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
do_totals, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_totals,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401c59, 8)
do_totals,  ---  CALL (ram, 0x400d80, 8)
do_totals, (register, 0x38, 4) COPY (ram, 0x605428, 4)
do_totals, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x401d08, 8) , (register, 0x206, 1)
do_totals, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x14, 8)
do_totals, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
do_totals, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
do_totals, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
do_totals, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)
do_totals, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
do_totals, (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)
do_totals, (register, 0x80, 8) COPY (const, 0x4038e7, 8)
do_totals, (unique, 0x3200, 8) INT_ADD (register, 0x30, 8) , (const, 0x76c, 8)
do_totals, (register, 0x10, 4) SUBPIECE (unique, 0x3200, 8) , (const, 0x0, 4)
do_totals, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
do_totals, (unique, 0x3480, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)
do_totals, (unique, 0x3580, 8) INT_ADD (const, 0x403f00, 8) , (unique, 0x3480, 8)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
do_totals, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
do_totals, (unique, 0xe780, 8) COPY (register, 0x10, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xc, 8)
do_totals, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
do_totals, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
do_totals, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_totals, (unique, 0xe780, 8) COPY (register, 0x0, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
do_totals, (register, 0x38, 8) COPY (unique, 0x3800, 8)
do_totals, (register, 0x30, 8) COPY (const, 0x100, 8)
do_totals, (register, 0x8, 8) COPY (const, 0x100, 8)
do_totals, (register, 0x10, 8) COPY (const, 0x1, 8)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ca2, 8)
do_totals,  ---  CALL (ram, 0x400d60, 8)
do_totals, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
do_totals, (register, 0x38, 8) COPY (unique, 0x3800, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401cae, 8)
do_totals,  ---  CALL (ram, 0x401450, 8)
do_totals, (register, 0x30, 4) COPY (ram, 0x605404, 4)
do_totals, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x401c10, 8) , (register, 0x206, 1)
do_totals, (register, 0x0, 4) COPY (ram, 0x60540c, 4)
do_totals, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
do_totals, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals,  ---  CBRANCH (ram, 0x401c10, 8) , (register, 0x206, 1)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
do_totals, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401cd3, 8)
do_totals,  ---  CALL (ram, 0x401b20, 8)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8)
do_totals, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
do_totals,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
do_totals, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
do_totals, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
do_totals,  ---  CBRANCH (ram, 0x401c25, 8) , (unique, 0xd080, 1)
do_totals, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
do_totals, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
do_totals, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
do_totals, (register, 0x200, 1) COPY (const, 0x0, 1)
do_totals, (register, 0x20b, 1) COPY (const, 0x0, 1)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
do_totals, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
do_totals,  ---  CBRANCH (ram, 0x401d27, 8) , (unique, 0xc680, 1)
do_totals, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x120, 8)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
do_totals, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  RETURN (register, 0x288, 8)
do_totals, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)
do_totals, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
do_totals, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
do_totals, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xc, 8)
do_totals, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
do_totals, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
do_totals, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
do_totals, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
do_totals, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
do_totals, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
do_totals, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
do_totals, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
do_totals, (register, 0x80, 8) COPY (const, 0x4038f2, 8)
do_totals, (unique, 0xe780, 8) COPY (register, 0x0, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
do_totals, (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
do_totals, (unique, 0x3580, 8) INT_ADD (const, 0x403f00, 8) , (unique, 0x3480, 8)
do_totals, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
do_totals, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
do_totals,  ---  BRANCH (ram, 0x401c87, 8)
do_totals, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
do_totals,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401d2c, 8)
do_totals,  ---  CALL (ram, 0x400e10, 8)
parse_entries, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0xa8, 4) INT_XOR (register, 0xa8, 4) , (register, 0xa8, 4)
parse_entries, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xe780, 8) COPY (register, 0x28, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (unique, 0xe780, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (register, 0x28, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
parse_entries, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
parse_entries, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
parse_entries, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
parse_entries, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
parse_entries, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
parse_entries,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401d5d, 8)
parse_entries,  ---  CALL (ram, 0x402e90, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x18, 8) COPY (register, 0x0, 8)
parse_entries,  ---  CBRANCH (ram, 0x401de0, 8) , (register, 0x206, 1)
parse_entries, (register, 0x88, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x402068, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401d7d, 8)
parse_entries,  ---  CALL (ram, 0x403040, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d91, 8) , (register, 0x206, 1)
parse_entries, (register, 0x80, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x402130, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401d99, 8)
parse_entries,  ---  CALL (ram, 0x403290, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401e00, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 4) COPY (ram, 0x60542c, 4)
parse_entries, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401db3, 8)
parse_entries,  ---  CALL (ram, 0x403030, 8)
parse_entries, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x16, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403907, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401dce, 8)
parse_entries,  ---  CALL (ram, 0x400f70, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401dd3, 8)
parse_entries,  ---  CALL (ram, 0x402e90, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x18, 8) COPY (register, 0x0, 8)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d65, 8) , (unique, 0xc680, 1)
parse_entries, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
parse_entries, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
parse_entries, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
parse_entries, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
parse_entries, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
parse_entries, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
parse_entries, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x402272, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
parse_entries, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
parse_entries, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
parse_entries, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
parse_entries, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  RETURN (register, 0x288, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59100, 2) INT_AND (register, 0x28, 2) , (register, 0x28, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59100, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59100, 2) , (const, 0x0, 2)
parse_entries, (unique, 0x12c00, 2) INT_AND (unique, 0x59100, 2) , (const, 0xff, 2)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x402110, 8) , (unique, 0xc680, 1)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x3, 2)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc00, 2) , (const, 0x3, 2)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (unique, 0x28100, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x3, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401e78, 8) , (register, 0x206, 1)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x0, 8) COPY (ram, 0x605420, 8)
parse_entries, (register, 0x10, 8) COPY (register, 0x30, 8)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (ram, 0x6053a8, 8)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (ram, 0x6053a8, 8)
parse_entries, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (ram, 0x6053a8, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x0, 8)
parse_entries, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
parse_entries,  ---  CBRANCH (ram, 0x4020a0, 8) , (unique, 0xcc00, 1)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (ram, 0x6053a0, 8)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (ram, 0x6053a0, 8)
parse_entries, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (ram, 0x6053a0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x0, 8)
parse_entries, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
parse_entries, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
parse_entries,  ---  CBRANCH (ram, 0x4020a0, 8) , (unique, 0xd080, 1)
parse_entries, (ram, 0x605420, 8) COPY (register, 0x30, 8)
parse_entries, (register, 0x80, 8) COPY (const, 0x403937, 8)
parse_entries, (register, 0x8, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x605450, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401e61, 8)
parse_entries,  ---  CALL (ram, 0x401bd0, 8)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x9, 2)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc00, 2) , (const, 0x9, 2)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (unique, 0x28100, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x9, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
parse_entries, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
parse_entries,  ---  CBRANCH (ram, 0x401f50, 8) , (unique, 0xc900, 1)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
parse_entries, (unique, 0x3580, 8) INT_ADD (const, 0x403ac0, 8) , (unique, 0x3480, 8)
parse_entries, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
parse_entries,  ---  BRANCHIND (unique, 0xbd80, 8)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (ram, 0x605420, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x4021e8, 8) , (register, 0x206, 1)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
parse_entries, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xa8, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xa8, 8)
parse_entries, (register, 0x38, 8) INT_SUB (register, 0x38, 8) , (register, 0xa8, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ea2, 8)
parse_entries,  ---  CALL (ram, 0x4013e0, 8)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401eae, 8)
parse_entries,  ---  CALL (ram, 0x401b20, 8)
parse_entries, (ram, 0x605450, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (ram, 0x605440, 8)
parse_entries, (register, 0x30, 8) COPY (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ed7, 8)
parse_entries,  ---  CALL (ram, 0x402d00, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x18, 8) COPY (register, 0x0, 8)
parse_entries,  ---  CBRANCH (ram, 0x401f3f, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ee8, 8)
parse_entries,  ---  CALL (ram, 0x402cb0, 8)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x28, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ef3, 8)
parse_entries,  ---  CALL (ram, 0x402cc0, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
parse_entries, (register, 0x38, 8) COPY (unique, 0x3100, 8)
parse_entries, (register, 0x18, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401eff, 8)
parse_entries,  ---  CALL (ram, 0x400df0, 8)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (unique, 0xe780, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (register, 0x88, 8) COPY (register, 0x28, 8)
parse_entries, (unique, 0xe780, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
parse_entries, (unique, 0x3f780, 8) COPY (const, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
parse_entries, (register, 0x80, 8) COPY (const, 0x20, 8)
parse_entries, (unique, 0x3f780, 8) COPY (const, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
parse_entries, (register, 0x8, 8) COPY (const, 0x20, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x403970, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401f2b, 8)
parse_entries,  ---  CALL (ram, 0x400f80, 8)
parse_entries, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
parse_entries, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x20, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401f37, 8)
parse_entries,  ---  CALL (ram, 0x402d20, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
parse_entries, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x18, 8) COPY (register, 0x0, 8)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401ee0, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  BRANCH (ram, 0x401d58, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x402238, 8) , (register, 0x206, 1)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2c, 8)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x4021c8, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401f6c, 8)
parse_entries,  ---  CALL (ram, 0x401a40, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2c, 8)
parse_entries, (register, 0x30, 8) COPY (unique, 0x3100, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403947, 8)
parse_entries, (register, 0x8, 8) COPY (const, 0x9, 8)
parse_entries, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
parse_entries,  ---  CBRANCH (ram, 0x401f98, 8) , (unique, 0xd600, 1)
parse_entries, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xae80, 8) COPY (register, 0x38, 8)
parse_entries, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
parse_entries, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
parse_entries, (unique, 0xa280, 8) COPY (register, 0x30, 8)
parse_entries, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
parse_entries, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401f96, 8) , (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401fb0, 8) , (register, 0x206, 1)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x36, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401fb0, 8) , (register, 0x206, 1)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x30, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401eb8, 8) , (unique, 0xc680, 1)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
parse_entries, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x8, 8) COPY (const, 0x403947, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401fca, 8)
parse_entries,  ---  CALL (ram, 0x4017d0, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2c, 8)
parse_entries, (register, 0x30, 8) COPY (unique, 0x3100, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403947, 8)
parse_entries, (register, 0x8, 8) COPY (const, 0x9, 8)
parse_entries, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
parse_entries,  ---  CBRANCH (ram, 0x401ff0, 8) , (unique, 0xd600, 1)
parse_entries, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xae80, 8) COPY (register, 0x38, 8)
parse_entries, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
parse_entries, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
parse_entries, (unique, 0xa280, 8) COPY (register, 0x30, 8)
parse_entries, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
parse_entries, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
parse_entries, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
parse_entries, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
parse_entries, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
parse_entries, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401fee, 8) , (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401fb0, 8) , (register, 0x206, 1)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x30, 4) COPY (ram, 0x605418, 4)
parse_entries, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
parse_entries, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x8, 8) COPY (const, 0x403950, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40200d, 8)
parse_entries,  ---  CALL (ram, 0x4017d0, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
parse_entries, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401eb8, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402032, 8)
parse_entries,  ---  CALL (ram, 0x401a40, 8)
parse_entries,  ---  BRANCH (ram, 0x401f6c, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0xa0, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x59, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403700, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402083, 8)
parse_entries,  ---  CALL (ram, 0x400f70, 8)
parse_entries, (register, 0x30, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402092, 8)
parse_entries,  ---  CALL (ram, 0x402ea0, 8)
parse_entries,  ---  BRANCH (ram, 0x401d75, 8)
parse_entries, (register, 0x30, 4) COPY (ram, 0x60542c, 4)
parse_entries, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x402160, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x0, 8) COPY (ram, 0x605450, 8)
parse_entries, (register, 0x10, 4) COPY (ram, 0x605410, 4)
parse_entries, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
parse_entries, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x80, 8) COPY (const, 0x40392d, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x605450, 8)
parse_entries, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
parse_entries, (register, 0x30, 8) COPY (unique, 0x3100, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4020d1, 8)
parse_entries,  ---  CALL (ram, 0x401bd0, 8)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4020dd, 8)
parse_entries,  ---  CALL (ram, 0x401b20, 8)
parse_entries, (ram, 0x605450, 8) COPY (register, 0x0, 8)
parse_entries, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
parse_entries, (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x200, 1) INT_LESS (register, 0x0, 2) , (const, 0x3, 2)
parse_entries, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 2) , (const, 0x3, 2)
parse_entries, (unique, 0x28100, 2) INT_SUB (register, 0x0, 2) , (const, 0x3, 2)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
parse_entries, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (ram, 0x605420, 8) COPY (register, 0x30, 8)
parse_entries, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
parse_entries,  ---  CBRANCH (ram, 0x401e47, 8) , (unique, 0xc680, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x4021e8, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401e90, 8)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40211c, 8)
parse_entries,  ---  CALL (ram, 0x401b20, 8)
parse_entries, (ram, 0x605450, 8) COPY (register, 0x0, 8)
parse_entries,  ---  BRANCH (ram, 0x401e09, 8)
parse_entries, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0xd, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x4038f9, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40214b, 8)
parse_entries,  ---  CALL (ram, 0x400f70, 8)
parse_entries, (register, 0x30, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x38, 8) COPY (register, 0x18, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40215a, 8)
parse_entries,  ---  CALL (ram, 0x402ea0, 8)
parse_entries,  ---  BRANCH (ram, 0x401d91, 8)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40216c, 8)
parse_entries,  ---  CALL (ram, 0x403030, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x605420, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402176, 8)
parse_entries,  ---  CALL (ram, 0x400df0, 8)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x8, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x403760, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402191, 8)
parse_entries,  ---  CALL (ram, 0x400f80, 8)
parse_entries, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x154, 8)
parse_entries, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
parse_entries, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
parse_entries, (register, 0x38, 8) COPY (register, 0x20, 8)
parse_entries, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
parse_entries,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4021a4, 8)
parse_entries,  ---  CALL (ram, 0x400df0, 8)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x8, 8) COPY (register, 0x0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x40391e, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4021bf, 8)
parse_entries,  ---  CALL (ram, 0x400f80, 8)
parse_entries,  ---  BRANCH (ram, 0x4020ae, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4021cd, 8)
parse_entries,  ---  CALL (ram, 0x4018a0, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (register, 0x8, 4) COPY (ram, 0x60542c, 4)
parse_entries, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401eb8, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
parse_entries, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402204, 8)
parse_entries,  ---  CALL (ram, 0x403030, 8)
parse_entries, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x2a, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403780, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40221f, 8)
parse_entries,  ---  CALL (ram, 0x400f70, 8)
parse_entries, (register, 0x0, 4) COPY (ram, 0x605430, 4)
parse_entries, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401d58, 8) , (register, 0x206, 1)
parse_entries,  ---  BRANCH (ram, 0x401ec8, 8)
parse_entries, (register, 0x10, 4) COPY (ram, 0x60542c, 4)
parse_entries, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
parse_entries, (register, 0x200, 1) COPY (const, 0x0, 1)
parse_entries, (register, 0x20b, 1) COPY (const, 0x0, 1)
parse_entries, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
parse_entries, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
parse_entries, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
parse_entries, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
parse_entries, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
parse_entries, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
parse_entries,  ---  CBRANCH (ram, 0x401eb8, 8) , (register, 0x206, 1)
parse_entries, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402252, 8)
parse_entries,  ---  CALL (ram, 0x403030, 8)
parse_entries, (register, 0x8, 8) COPY (ram, 0x6053c0, 8)
parse_entries, (register, 0x10, 8) COPY (const, 0x18, 8)
parse_entries, (register, 0x30, 8) COPY (const, 0x1, 8)
parse_entries, (register, 0x38, 8) COPY (const, 0x403957, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40226d, 8)
parse_entries,  ---  CALL (ram, 0x400f70, 8)
parse_entries,  ---  BRANCH (ram, 0x401eb8, 8)
parse_entries, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
parse_entries,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402277, 8)
parse_entries,  ---  CALL (ram, 0x400e10, 8)
fatal, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
fatal, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
fatal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
fatal, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
fatal, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
fatal, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
fatal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
fatal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fatal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fatal, (register, 0x80, 8) COPY (register, 0x38, 8)
fatal, (register, 0x8, 8) COPY (ram, 0x605448, 8)
fatal, (register, 0x38, 8) COPY (ram, 0x6053e0, 8)
fatal, (register, 0x10, 8) COPY (const, 0x403f70, 8)
fatal, (register, 0x30, 8) COPY (const, 0x1, 8)
fatal, (register, 0x200, 1) COPY (const, 0x0, 1)
fatal, (register, 0x20b, 1) COPY (const, 0x0, 1)
fatal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
fatal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
fatal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
fatal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
fatal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
fatal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fatal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fatal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fatal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
fatal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4022a6, 8)
fatal,  ---  CALL (ram, 0x400f80, 8)
fatal, (register, 0x38, 8) COPY (const, 0x1, 8)
fatal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
fatal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4022b0, 8)
fatal,  ---  CALL (ram, 0x400f60, 8)
file_open, (unique, 0xe780, 8) COPY (register, 0x28, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_open, (register, 0x28, 8) COPY (register, 0x20, 8)
file_open, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_open, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_open, (unique, 0xe780, 8) COPY (register, 0x18, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_open, (register, 0x18, 8) COPY (register, 0x38, 8)
file_open, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
file_open, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
file_open, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_open, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)
file_open, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_open,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_open, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_open, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open,  ---  CBRANCH (ram, 0x40238c, 8) , (register, 0x206, 1)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
file_open, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
file_open, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
file_open, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
file_open, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open,  ---  CBRANCH (ram, 0x402320, 8) , (register, 0x206, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_open, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x0, 8) COPY (const, 0x403f78, 8)
file_open, (register, 0x30, 8) COPY (const, 0x403f7b, 8)
file_open, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_open, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xc680, 1)
file_open,  ---  CBRANCH (ram, 0x4022ed, 8) , (unique, 0x27800, 1)
file_open, (register, 0x30, 8) COPY (register, 0x0, 8)
file_open, (register, 0x38, 8) COPY (register, 0x18, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4022f5, 8)
file_open,  ---  CALL (ram, 0x400f30, 8)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0xa0, 8) COPY (register, 0x0, 8)
file_open,  ---  CBRANCH (ram, 0x402340, 8) , (register, 0x206, 1)
file_open, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)
file_open, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_open, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
file_open, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
file_open, (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x0, 8) COPY (register, 0xa0, 8)
file_open, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x402387, 8) , (unique, 0xc680, 1)
file_open, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)
file_open, (register, 0x20, 8) COPY (unique, 0x3100, 8)
file_open, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_open, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_open, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_open, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_open, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_open, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_open, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_open, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_open, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_open, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  RETURN (register, 0x288, 8)
file_open, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_open, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_open, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
file_open, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_open, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
file_open, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x4022dd, 8) , (unique, 0xc680, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
file_open, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_open, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0xa0, 8) COPY (ram, 0x6053c0, 8)
file_open, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
file_open,  ---  CBRANCH (ram, 0x402337, 8) , (unique, 0x27800, 1)
file_open, (register, 0xa0, 8) COPY (ram, 0x6053c8, 8)
file_open,  ---  BRANCH (ram, 0x4022fd, 8)
file_open, (register, 0x38, 8) COPY (register, 0x18, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402348, 8)
file_open,  ---  CALL (ram, 0x400e00, 8)
file_open, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x3c, 8)
file_open, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x3c, 8)
file_open, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x3c, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x80, 8) COPY (register, 0x18, 8)
file_open, (register, 0x8, 8) COPY (const, 0x403f9b, 8)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)
file_open, (register, 0x30, 8) COPY (const, 0x1, 8)
file_open, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (register, 0x0, 8)
file_open, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (register, 0x0, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (register, 0x0, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_open, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_open, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_open, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (unique, 0x3800, 8) INT_ADD (const, 0xf, 8) , (register, 0x20, 8)
file_open, (register, 0xa8, 8) COPY (unique, 0x3800, 8)
file_open, (register, 0x200, 1) COPY (const, 0x0, 1)
file_open, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_open, (register, 0xa8, 8) INT_AND (register, 0xa8, 8) , (const, 0xfffffffffffffff0, 8)
file_open, (register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
file_open, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
file_open, (unique, 0x12c00, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
file_open, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_open, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_open, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_open, (register, 0x38, 8) COPY (register, 0xa8, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40237a, 8)
file_open,  ---  CALL (ram, 0x400fa0, 8)
file_open, (register, 0x38, 8) COPY (register, 0xa8, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402382, 8)
file_open,  ---  CALL (ram, 0x400f40, 8)
file_open,  ---  BRANCH (ram, 0x4022fd, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40238c, 8)
file_open,  ---  CALL (ram, 0x400e10, 8)
file_open, (register, 0x38, 8) COPY (const, 0x403f7e, 8)
file_open, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_open,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402396, 8)
file_open,  ---  CALL (ram, 0x402280, 8)
file_open, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
file_open, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
print_wtmp_file_location, (register, 0x10, 8) COPY (const, 0x4039a1, 8)
print_wtmp_file_location, (register, 0x30, 8) COPY (const, 0x404000, 8)
print_wtmp_file_location, (register, 0x38, 8) COPY (const, 0x1, 8)
print_wtmp_file_location, (register, 0x200, 1) COPY (const, 0x0, 1)
print_wtmp_file_location, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_wtmp_file_location, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_wtmp_file_location, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_wtmp_file_location, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_wtmp_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_wtmp_file_location, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_wtmp_file_location, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_wtmp_file_location, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_wtmp_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_wtmp_file_location,  ---  BRANCH (ram, 0x400f10, 8)
print_acct_file_location, (register, 0x10, 8) COPY (const, 0x403fb3, 8)
print_acct_file_location, (register, 0x30, 8) COPY (const, 0x404038, 8)
print_acct_file_location, (register, 0x38, 8) COPY (const, 0x1, 8)
print_acct_file_location, (register, 0x200, 1) COPY (const, 0x0, 1)
print_acct_file_location, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_acct_file_location, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_acct_file_location, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_acct_file_location, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_location, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_location, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_acct_file_location, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_acct_file_location, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_location, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_location,  ---  BRANCH (ram, 0x400f10, 8)
print_acct_file_locations, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_acct_file_locations, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_acct_file_locations, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_acct_file_locations, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_locations, (register, 0x38, 8) COPY (const, 0x404070, 8)
print_acct_file_locations, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4023ee, 8)
print_acct_file_locations,  ---  CALL (ram, 0x400dc0, 8)
print_acct_file_locations, (register, 0x10, 8) COPY (const, 0x403fb3, 8)
print_acct_file_locations, (register, 0x30, 8) COPY (const, 0x4040a8, 8)
print_acct_file_locations, (register, 0x38, 8) COPY (const, 0x1, 8)
print_acct_file_locations, (register, 0x200, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_acct_file_locations, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_acct_file_locations, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_locations, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402404, 8)
print_acct_file_locations,  ---  CALL (ram, 0x400f10, 8)
print_acct_file_locations, (register, 0x10, 8) COPY (const, 0x403fca, 8)
print_acct_file_locations, (register, 0x30, 8) COPY (const, 0x4040d0, 8)
print_acct_file_locations, (register, 0x38, 8) COPY (const, 0x1, 8)
print_acct_file_locations, (register, 0x200, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_acct_file_locations, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_acct_file_locations, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_locations, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40241a, 8)
print_acct_file_locations,  ---  CALL (ram, 0x400f10, 8)
print_acct_file_locations, (register, 0x10, 8) COPY (const, 0x403fe3, 8)
print_acct_file_locations, (register, 0x30, 8) COPY (const, 0x4040f8, 8)
print_acct_file_locations, (register, 0x38, 8) COPY (const, 0x1, 8)
print_acct_file_locations, (register, 0x200, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_acct_file_locations, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_acct_file_locations, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_acct_file_locations, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_acct_file_locations, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_acct_file_locations, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_locations, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_acct_file_locations, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_acct_file_locations, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_acct_file_locations, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_acct_file_locations, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_acct_file_locations, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_acct_file_locations, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_acct_file_locations,  ---  BRANCH (ram, 0x400f10, 8)
file_reader_init, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_init, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_init, (register, 0xa0, 4) COPY (register, 0x38, 4)
file_reader_init, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
file_reader_init, (unique, 0xe780, 8) COPY (register, 0x28, 8)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_init, (unique, 0xe780, 8) COPY (register, 0x18, 8)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_init, (register, 0x38, 8) COPY (const, 0x48, 8)
file_reader_init, (register, 0x28, 4) COPY (register, 0x30, 4)
file_reader_init, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
file_reader_init, (register, 0xa8, 4) COPY (register, 0x10, 4)
file_reader_init, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
file_reader_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_reader_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40245c, 8)
file_reader_init,  ---  CALL (ram, 0x4032a0, 8)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x80, 8) COPY (unique, 0x3100, 8)
file_reader_init, (register, 0x8, 8) COPY (register, 0x0, 8)
file_reader_init, (register, 0x18, 8) COPY (register, 0x0, 8)
file_reader_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbe00, 8)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)
file_reader_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
file_reader_init, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_init, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x38, 8) COPY (register, 0x80, 8)
file_reader_init, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_init, (register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
file_reader_init, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x38, 8)
file_reader_init, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (register, 0x38, 8)
file_reader_init, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (register, 0x38, 8)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
file_reader_init, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x48, 4)
file_reader_init, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x48, 4)
file_reader_init, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x48, 4)
file_reader_init, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (unique, 0x57300, 4) INT_AND (const, 0x3, 4) , (const, 0x1f, 4)
file_reader_init, (unique, 0x57380, 4) COPY (register, 0x8, 4)
file_reader_init, (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x57300, 4)
file_reader_init, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
file_reader_init, (unique, 0x16100, 1) INT_NOTEQUAL (unique, 0x57300, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x16180, 4) INT_SUB (unique, 0x57300, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x16200, 4) INT_RIGHT (unique, 0x57380, 4) , (unique, 0x16180, 4)
file_reader_init, (unique, 0x16280, 4) INT_AND (unique, 0x16200, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x16380, 1) INT_NOTEQUAL (unique, 0x16280, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x16400, 1) BOOL_NEGATE (unique, 0x16100, 1)
file_reader_init, (unique, 0x16480, 1) INT_AND (unique, 0x16400, 1) , (register, 0x200, 1)
file_reader_init, (unique, 0x16500, 1) INT_AND (unique, 0x16100, 1) , (unique, 0x16380, 1)
file_reader_init, (register, 0x200, 1) INT_OR (unique, 0x16480, 1) , (unique, 0x16500, 1)
file_reader_init, (unique, 0x16680, 1) INT_EQUAL (unique, 0x57300, 4) , (const, 0x1, 4)
file_reader_init, (unique, 0x16780, 1) INT_SLESS (unique, 0x57380, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x16800, 1) BOOL_NEGATE (unique, 0x16680, 1)
file_reader_init, (unique, 0x16880, 1) INT_AND (unique, 0x16800, 1) , (register, 0x20b, 1)
file_reader_init, (unique, 0x16900, 1) INT_AND (unique, 0x16680, 1) , (unique, 0x16780, 1)
file_reader_init, (register, 0x20b, 1) INT_OR (unique, 0x16880, 1) , (unique, 0x16900, 1)
file_reader_init, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x57300, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x12f80, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
file_reader_init, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
file_reader_init, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
file_reader_init, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
file_reader_init, (unique, 0x13280, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_reader_init, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
file_reader_init, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
file_reader_init, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
file_reader_init, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
file_reader_init, (unique, 0x13500, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
file_reader_init, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
file_reader_init, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
file_reader_init, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
file_reader_init, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
file_reader_init, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
file_reader_init, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
file_reader_init, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
file_reader_init, (unique, 0xd300, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
file_reader_init,  ---  CBRANCH (ram, 0x40248a, 8) , (unique, 0xd300, 1)
file_reader_init, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
file_reader_init, (unique, 0xb780, 8) COPY (register, 0x38, 8)
file_reader_init, (unique, 0xb800, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
file_reader_init, (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)
file_reader_init, (unique, 0xb900, 8) INT_MULT (const, 0x10, 8) , (unique, 0xb880, 8)
file_reader_init, (register, 0x38, 8) INT_SUB (unique, 0xb800, 8) , (unique, 0xb900, 8)
file_reader_init, (unique, 0xba00, 8) COPY (register, 0x0, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0xb780, 8) , (unique, 0xba00, 8)
file_reader_init,  ---  BRANCH (ram, 0x402487, 8)
file_reader_init, (register, 0x38, 4) COPY (register, 0xa0, 4)
file_reader_init, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_init, (unique, 0xbc80, 4) COPY (register, 0xa0, 4)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
file_reader_init, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
file_reader_init, (unique, 0x35b00, 8) INT_SEXT (register, 0x38, 4)
file_reader_init, (unique, 0x35b80, 8) INT_SEXT (register, 0x28, 4)
file_reader_init, (unique, 0x35c80, 8) INT_MULT (unique, 0x35b00, 8) , (unique, 0x35b80, 8)
file_reader_init, (register, 0x38, 4) SUBPIECE (unique, 0x35c80, 8) , (const, 0x0, 4)
file_reader_init, (unique, 0x35e00, 4) SUBPIECE (unique, 0x35c80, 8) , (const, 0x4, 4)
file_reader_init, (unique, 0x13b80, 8) INT_SEXT (register, 0x38, 4)
file_reader_init, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 8) , (unique, 0x35c80, 8)
file_reader_init, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_init, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
file_reader_init, (register, 0x38, 8) INT_SEXT (register, 0x38, 4)
file_reader_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40249f, 8)
file_reader_init,  ---  CALL (ram, 0x4032a0, 8)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
file_reader_init, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
file_reader_init, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
file_reader_init, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_reader_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_reader_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_reader_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_init, (register, 0x0, 8) COPY (register, 0x18, 8)
file_reader_init, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_init,  ---  RETURN (register, 0x288, 8)
file_reader_add_file, (unique, 0xe780, 8) COPY (register, 0x28, 8)
file_reader_add_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_add_file, (unique, 0xe780, 8) COPY (register, 0x18, 8)
file_reader_add_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_add_file, (register, 0x18, 8) COPY (register, 0x38, 8)
file_reader_add_file, (register, 0x38, 8) COPY (const, 0x10, 8)
file_reader_add_file, (register, 0x28, 8) COPY (register, 0x30, 8)
file_reader_add_file, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4024d6, 8)
file_reader_add_file,  ---  CALL (ram, 0x4032a0, 8)
file_reader_add_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
file_reader_add_file, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
file_reader_add_file, (unique, 0xbd80, 8) COPY (register, 0x28, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_add_file, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
file_reader_add_file, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x40250f, 8) , (register, 0x206, 1)
file_reader_add_file, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)
file_reader_add_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_add_file, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x4024fb, 8) , (unique, 0xc680, 1)
file_reader_add_file,  ---  BRANCH (ram, 0x402519, 8)
file_reader_add_file, (register, 0x8, 8) COPY (register, 0x10, 8)
file_reader_add_file, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)
file_reader_add_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_add_file, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
file_reader_add_file, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_add_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_add_file, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_add_file,  ---  CBRANCH (ram, 0x4024f8, 8) , (unique, 0xc680, 1)
file_reader_add_file, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)
file_reader_add_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_add_file, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file,  ---  RETURN (register, 0x288, 8)
file_reader_add_file, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_add_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8)
file_reader_add_file, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
file_reader_add_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
file_reader_add_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_add_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_add_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_add_file, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_add_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_add_file,  ---  RETURN (register, 0x288, 8)
file_reader_add_file, (register, 0x8, 8) COPY (register, 0x10, 8)
file_reader_add_file,  ---  BRANCH (ram, 0x402504, 8)
file_reader_get_entry, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_get_entry, (unique, 0xe780, 8) COPY (register, 0x28, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_get_entry, (unique, 0xe780, 8) COPY (register, 0x18, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x18, 8) COPY (register, 0x38, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402670, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402588, 8) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4025d0, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402559, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400dd0, 8)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4026a0, 8) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4026f0, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402576, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400de0, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402705, 8) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
file_reader_get_entry, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40259e, 8)
file_reader_get_entry,  ---  CALL (ram, 0x4022b0, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x8, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402576, 8) , (register, 0x206, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4026b0, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
file_reader_get_entry, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402548, 8) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x38, 8) COPY (register, 0x8, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4025d8, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400db0, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0xa0, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x40256d, 8) , (unique, 0xce80, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (unique, 0x27580, 16) INT_SEXT (register, 0x0, 8)
file_reader_get_entry, (register, 0x10, 8) SUBPIECE (unique, 0x27580, 16) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x34700, 16) INT_SEXT (register, 0x30, 8)
file_reader_get_entry, (unique, 0x34780, 16) INT_ZEXT (register, 0x10, 8)
file_reader_get_entry, (unique, 0x34800, 16) INT_LEFT (unique, 0x34780, 16) , (const, 0x40, 4)
file_reader_get_entry, (unique, 0x34880, 16) INT_ZEXT (register, 0x0, 8)
file_reader_get_entry, (unique, 0x34980, 16) INT_OR (unique, 0x34800, 16) , (unique, 0x34880, 16)
file_reader_get_entry, (unique, 0x34a80, 16) INT_SDIV (unique, 0x34980, 16) , (unique, 0x34700, 16)
file_reader_get_entry, (register, 0x0, 8) SUBPIECE (unique, 0x34a80, 16) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x34c00, 16) INT_SREM (unique, 0x34980, 16) , (unique, 0x34700, 16)
file_reader_get_entry, (register, 0x10, 8) SUBPIECE (unique, 0x34c00, 16) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x8, 8) COPY (register, 0x30, 8)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
file_reader_get_entry, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
file_reader_get_entry, (unique, 0x27800, 1) BOOL_NEGATE (unique, 0xce80, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4025fb, 8) , (unique, 0x27800, 1)
file_reader_get_entry, (register, 0x10, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x8, 4)
file_reader_get_entry, (register, 0x8, 4) INT_2COMP (register, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
file_reader_get_entry, (register, 0x30, 8) INT_SEXT (register, 0x8, 4)
file_reader_get_entry, (register, 0x28, 8) COPY (register, 0x10, 8)
file_reader_get_entry, (unique, 0x35e80, 16) INT_SEXT (register, 0x30, 8)
file_reader_get_entry, (unique, 0x35f00, 16) INT_SEXT (register, 0x10, 8)
file_reader_get_entry, (unique, 0x36000, 16) INT_MULT (unique, 0x35e80, 16) , (unique, 0x35f00, 16)
file_reader_get_entry, (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (register, 0x10, 8)
file_reader_get_entry, (unique, 0x36180, 8) SUBPIECE (unique, 0x36000, 16) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x13b80, 16) INT_SEXT (register, 0x30, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x36000, 16)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (register, 0x10, 8) COPY (const, 0x1, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402611, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400ef0, 8)
file_reader_get_entry, (register, 0x8, 4) COPY (ram, 0x605430, 4)
file_reader_get_entry, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402709, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (register, 0x28, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402633, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400dd0, 8)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
file_reader_get_entry, (unique, 0x28300, 8) INT_SUB (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402755, 8) , (register, 0x206, 1)
file_reader_get_entry, (register, 0x10, 4) COPY (ram, 0x605430, 4)
file_reader_get_entry, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402735, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (const, 0x1, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x30, 4)
file_reader_get_entry, (register, 0x30, 4) INT_2COMP (register, 0x30, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
file_reader_get_entry, (register, 0x30, 8) INT_SEXT (register, 0x30, 4)
file_reader_get_entry, (unique, 0x35e80, 16) INT_SEXT (register, 0x30, 8)
file_reader_get_entry, (unique, 0x35f00, 16) INT_SEXT (register, 0x28, 8)
file_reader_get_entry, (unique, 0x36000, 16) INT_MULT (unique, 0x35e80, 16) , (unique, 0x35f00, 16)
file_reader_get_entry, (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (register, 0x28, 8)
file_reader_get_entry, (unique, 0x36180, 8) SUBPIECE (unique, 0x36000, 16) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x13b80, 16) INT_SEXT (register, 0x30, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x36000, 16)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402665, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400ef0, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x28, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x28, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (register, 0x28, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x4026d0, 8) , (unique, 0xc680, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0x3100, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x10, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (unique, 0x35e80, 16) INT_SEXT (register, 0x0, 8)
file_reader_get_entry, (unique, 0x35f00, 16) INT_SEXT (register, 0x10, 8)
file_reader_get_entry, (unique, 0x36000, 16) INT_MULT (unique, 0x35e80, 16) , (unique, 0x35f00, 16)
file_reader_get_entry, (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x10, 8)
file_reader_get_entry, (unique, 0x36180, 8) SUBPIECE (unique, 0x36000, 16) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x13b80, 16) INT_SEXT (register, 0x0, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x36000, 16)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_get_entry, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_get_entry, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_get_entry, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
file_reader_get_entry, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  RETURN (register, 0x288, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (const, 0x404168, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4026aa, 8)
file_reader_get_entry,  ---  CALL (ram, 0x402280, 8)
file_reader_get_entry,  ---  BRANCH (ram, 0x40256d, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (const, 0x2, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
file_reader_get_entry, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x38, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4026bf, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400ef0, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry,  ---  BRANCH (ram, 0x4025b5, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x34, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x1, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x1, 8)
file_reader_get_entry, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x35e80, 16) INT_SEXT (register, 0x10, 8)
file_reader_get_entry, (unique, 0x35f00, 16) INT_SEXT (register, 0x0, 8)
file_reader_get_entry, (unique, 0x36000, 16) INT_MULT (unique, 0x35e80, 16) , (unique, 0x35f00, 16)
file_reader_get_entry, (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x0, 8)
file_reader_get_entry, (unique, 0x36180, 8) SUBPIECE (unique, 0x36000, 16) , (const, 0x8, 4)
file_reader_get_entry, (unique, 0x13b80, 16) INT_SEXT (register, 0x10, 8)
file_reader_get_entry, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x36000, 16)
file_reader_get_entry, (register, 0x20b, 1) COPY (register, 0x200, 1)
file_reader_get_entry, (register, 0x0, 8) COPY (register, 0x10, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
file_reader_get_entry, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x402695, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
file_reader_get_entry, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
file_reader_get_entry, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
file_reader_get_entry, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  CBRANCH (ram, 0x402677, 8) , (register, 0x206, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x4026d0, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry,  ---  BRANCH (ram, 0x40269a, 8)
file_reader_get_entry, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
file_reader_get_entry, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402712, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400db0, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
file_reader_get_entry, (register, 0x80, 8) COPY (register, 0x0, 8)
file_reader_get_entry, (register, 0x8, 8) COPY (register, 0xa0, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (const, 0x40411c, 8)
file_reader_get_entry, (register, 0x30, 8) COPY (const, 0x1, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402730, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400f80, 8)
file_reader_get_entry,  ---  BRANCH (ram, 0x40261f, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
file_reader_get_entry, (register, 0x8, 8) COPY (register, 0x28, 8)
file_reader_get_entry, (register, 0x10, 8) COPY (const, 0x40413a, 8)
file_reader_get_entry, (register, 0x30, 8) COPY (const, 0x1, 8)
file_reader_get_entry, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_get_entry, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_get_entry, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_get_entry, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_get_entry, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_get_entry, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_get_entry, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_get_entry, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402750, 8)
file_reader_get_entry,  ---  CALL (ram, 0x400f80, 8)
file_reader_get_entry,  ---  BRANCH (ram, 0x40264b, 8)
file_reader_get_entry, (register, 0x38, 8) COPY (const, 0x404168, 8)
file_reader_get_entry, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
file_reader_get_entry,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40275f, 8)
file_reader_get_entry,  ---  CALL (ram, 0x402280, 8)
file_reader_get_entry,  ---  BRANCH (ram, 0x40263d, 8)
file_reader_print_file_and_line, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)
file_reader_print_file_and_line, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_print_file_and_line, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
file_reader_print_file_and_line, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)
file_reader_print_file_and_line, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
file_reader_print_file_and_line, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
file_reader_print_file_and_line, (register, 0x0, 8) COPY (const, 0x404155, 8)
file_reader_print_file_and_line, (register, 0x10, 8) COPY (const, 0x40415b, 8)
file_reader_print_file_and_line, (register, 0x30, 8) COPY (const, 0x1, 8)
file_reader_print_file_and_line, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
file_reader_print_file_and_line, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
file_reader_print_file_and_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
file_reader_print_file_and_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
file_reader_print_file_and_line,  ---  CBRANCH (ram, 0x40278e, 8) , (unique, 0x27800, 1)
file_reader_print_file_and_line, (register, 0x8, 8) COPY (register, 0x0, 8)
file_reader_print_file_and_line, (register, 0x200, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
file_reader_print_file_and_line, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
file_reader_print_file_and_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
file_reader_print_file_and_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
file_reader_print_file_and_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
file_reader_print_file_and_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
file_reader_print_file_and_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
file_reader_print_file_and_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
file_reader_print_file_and_line,  ---  BRANCH (ram, 0x400f80, 8)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0xe780, 8) COPY (register, 0x18, 8)
get_key_len, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
get_key_len, (register, 0x18, 4) COPY (register, 0x30, 4)
get_key_len, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
get_key_len,  ---  CBRANCH (ram, 0x4027b8, 8) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len,  ---  CBRANCH (ram, 0x4027d8, 8) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x30, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x30, 4)
get_key_len, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0x30, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0x10, 4)
get_key_len, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
get_key_len, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
get_key_len,  ---  CBRANCH (ram, 0x4027e2, 8) , (unique, 0xc680, 1)
get_key_len, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  RETURN (register, 0x288, 8)
get_key_len, (register, 0x200, 1) COPY (const, 0x0, 1)
get_key_len, (register, 0x20b, 1) COPY (const, 0x0, 1)
get_key_len, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0x30, 4)
get_key_len, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
get_key_len,  ---  CBRANCH (ram, 0x4027f0, 8) , (register, 0x206, 1)
get_key_len, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
get_key_len, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
get_key_len, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
get_key_len, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len,  ---  CBRANCH (ram, 0x4027ce, 8) , (register, 0x206, 1)
get_key_len, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x1, 8)
get_key_len, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)
get_key_len, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
get_key_len, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
get_key_len, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
get_key_len,  ---  CBRANCH (ram, 0x4027c0, 8) , (unique, 0xc680, 1)
get_key_len, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
get_key_len, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
get_key_len, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
get_key_len, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
get_key_len, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
get_key_len, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
get_key_len, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
get_key_len, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
get_key_len, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
get_key_len, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
get_key_len, (register, 0x0, 4) COPY (register, 0x18, 4)
get_key_len, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
get_key_len, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  RETURN (register, 0x288, 8)
get_key_len, (register, 0x38, 8) COPY (const, 0x404190, 8)
get_key_len, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4027e2, 8)
get_key_len,  ---  CALL (ram, 0x402280, 8)
get_key_len, (register, 0x38, 8) COPY (const, 0x4041c8, 8)
get_key_len, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4027ec, 8)
get_key_len,  ---  CALL (ram, 0x402280, 8)
get_key_len, (register, 0x0, 4) COPY (register, 0x18, 4)
get_key_len, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
get_key_len, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  RETURN (register, 0x288, 8)
get_key_len, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4027f5, 8)
get_key_len,  ---  CALL (ram, 0x400e00, 8)
get_key_len, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
get_key_len, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
get_key_len,  ---  RETURN (register, 0x288, 8)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_next, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
hashtab_next, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
hashtab_next,  ---  CBRANCH (ram, 0x402832, 8) , (unique, 0xc580, 1)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_next, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
hashtab_next, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
hashtab_next, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x402829, 8) , (register, 0x206, 1)
hashtab_next,  ---  BRANCH (ram, 0x402838, 8)
hashtab_next, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
hashtab_next, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
hashtab_next, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_next,  ---  CBRANCH (ram, 0x402838, 8) , (unique, 0xc680, 1)
hashtab_next, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x1, 8)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x1, 8)
hashtab_next, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x402820, 8) , (register, 0x200, 1)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_next, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_next, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_next,  ---  RETURN (register, 0x288, 8)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_next, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (const, 0x1, 8)
hashtab_next, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 8) , (const, 0x1, 8)
hashtab_next, (unique, 0x28300, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
hashtab_next, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
hashtab_next,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_next, (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1)
hashtab_next, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x12280, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x12300, 1) INT_CARRY (unique, 0x12280, 4) , (unique, 0x12080, 4)
hashtab_next, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0x12300, 1)
hashtab_next, (unique, 0x12400, 1) INT_SCARRY (unique, 0x12280, 4) , (unique, 0x12080, 4)
hashtab_next, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0x12400, 1)
hashtab_next, (register, 0x10, 4) INT_ADD (unique, 0x12280, 4) , (unique, 0x12080, 4)
hashtab_next, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_next, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_next, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
hashtab_next,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbc80, 4)
hashtab_next, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_next, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_next,  ---  RETURN (register, 0x288, 8)
hashtab_init, (unique, 0xe780, 8) COPY (register, 0x18, 8)
hashtab_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_init, (register, 0x18, 4) COPY (register, 0x38, 4)
hashtab_init, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
hashtab_init, (register, 0x38, 8) COPY (const, 0x28, 8)
hashtab_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40285d, 8)
hashtab_init,  ---  CALL (ram, 0x4032a0, 8)
hashtab_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
hashtab_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbe00, 8)
hashtab_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
hashtab_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)
hashtab_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
hashtab_init, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_init, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
hashtab_init, (unique, 0xbc80, 4) COPY (register, 0x18, 4)
hashtab_init,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
hashtab_init, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_init,  ---  RETURN (register, 0x288, 8)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (register, 0xa0, 4) COPY (register, 0x10, 4)
hashtab_create, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0x28, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (unique, 0xe780, 8) COPY (register, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_create, (register, 0x28, 8) COPY (register, 0x38, 8)
hashtab_create, (register, 0x18, 8) COPY (register, 0x30, 8)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402b59, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
hashtab_create, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_create, (register, 0x38, 8) COPY (register, 0x18, 8)
hashtab_create, (register, 0x30, 4) COPY (register, 0xa0, 4)
hashtab_create, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4028c0, 8)
hashtab_create,  ---  CALL (ram, 0x4027a0, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0xb0, 4) COPY (register, 0x0, 4)
hashtab_create, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
hashtab_create, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_create,  ---  CBRANCH (ram, 0x402b9e, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
hashtab_create, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (register, 0x30, 8) COPY (register, 0x18, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x18, 8)
hashtab_create, (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0x3a00, 8)
hashtab_create, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
hashtab_create, (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1)
hashtab_create, (register, 0xb8, 8) COPY (register, 0x10, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
hashtab_create, (unique, 0x53980, 8) COPY (register, 0xb8, 8)
hashtab_create, (register, 0xb8, 8) INT_LEFT (register, 0xb8, 8) , (unique, 0x53900, 4)
hashtab_create, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
hashtab_create, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
hashtab_create, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
hashtab_create, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15580, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
hashtab_create, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
hashtab_create, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
hashtab_create, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12f80, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
hashtab_create, (unique, 0x13280, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
hashtab_create, (unique, 0x13500, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
hashtab_create, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x10, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x10, 8)
hashtab_create, (register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (register, 0x10, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x0, 8)
hashtab_create, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0x3400, 8)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x4028e0, 8) , (unique, 0xc680, 1)
hashtab_create, (register, 0x0, 8) COPY (register, 0x10, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2e800, 16) INT_ZEXT (register, 0x38, 8)
hashtab_create, (unique, 0x2e880, 16) INT_ZEXT (register, 0x10, 8)
hashtab_create, (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4)
hashtab_create, (unique, 0x2e980, 16) INT_ZEXT (register, 0x0, 8)
hashtab_create, (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16)
hashtab_create, (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_create, (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4)
hashtab_create, (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_create, (register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4)
hashtab_create, (unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0x3680, 8)
hashtab_create, (register, 0xb8, 8) COPY (register, 0x10, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0xa8, 4) COPY (register, 0xb0, 4)
hashtab_create, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
hashtab_create, (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
hashtab_create, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x40293a, 8) , (unique, 0xc680, 1)
hashtab_create,  ---  BRANCH (ram, 0x40296f, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x40296f, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0xb0, 4)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0xb0, 4)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0xb0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402930, 8) , (unique, 0xc680, 1)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
hashtab_create, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x10, 8) COPY (register, 0xa8, 8)
hashtab_create, (register, 0x30, 8) COPY (register, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402950, 8)
hashtab_create,  ---  CALL (ram, 0x400e70, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402930, 8) , (unique, 0xc680, 1)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 8) COPY (register, 0xa0, 8)
hashtab_create, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  RETURN (register, 0x288, 8)
hashtab_create, (register, 0x38, 8) COPY (const, 0x30, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402979, 8)
hashtab_create,  ---  CALL (ram, 0x4032a0, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x38, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
hashtab_create, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
hashtab_create, (register, 0xa0, 8) COPY (register, 0x0, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402989, 8)
hashtab_create,  ---  CALL (ram, 0x4032a0, 8)
hashtab_create, (register, 0x10, 8) COPY (register, 0xa8, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x30, 8) COPY (register, 0x18, 8)
hashtab_create, (register, 0x38, 8) COPY (register, 0x0, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40299b, 8)
hashtab_create,  ---  CALL (ram, 0x400eb0, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x8, 8) COPY (register, 0x0, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_create, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x28, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
hashtab_create, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
hashtab_create, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0xa0, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x4029d7, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0x3100, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (unique, 0x28c00, 8) INT_SUB (register, 0x10, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28c00, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x28c00, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 8) COPY (register, 0xa0, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
hashtab_create,  ---  CBRANCH (ram, 0x4029fe, 8) , (unique, 0xc900, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  RETURN (register, 0x288, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
hashtab_create, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3680, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0x3680, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
hashtab_create,  ---  CBRANCH (ram, 0x402baf, 8) , (register, 0x207, 1)
hashtab_create, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
hashtab_create, (register, 0x1200, 8) INT2FLOAT (register, 0x10, 8)
hashtab_create, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x404218, 8)
hashtab_create, (register, 0x1220, 8) COPY (ram, 0x404220, 8)
hashtab_create, (register, 0x1228, 8) COPY (const, 0x0, 8)
hashtab_create, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
hashtab_create, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
hashtab_create, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
hashtab_create, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1220, 8)
hashtab_create, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
hashtab_create, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
hashtab_create, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x204, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x207, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402b2f, 8) , (unique, 0xc580, 1)
hashtab_create, (register, 0x0, 8) TRUNC (register, 0x1200, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x38, 8) COPY (unique, 0x3680, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402a54, 8)
hashtab_create,  ---  CALL (ram, 0x4032a0, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
hashtab_create, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
hashtab_create, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x38, 8) COPY (register, 0x0, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0x3680, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402a6e, 8)
hashtab_create,  ---  CALL (ram, 0x400e40, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x38, 8) COPY (register, 0xa8, 8)
hashtab_create, (unique, 0x3a80, 8) INT_MULT (register, 0xb0, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0x3b80, 8) INT_ADD (register, 0xa8, 8) , (unique, 0x3a80, 8)
hashtab_create, (register, 0x90, 8) COPY (unique, 0x3b80, 8)
hashtab_create,  ---  CBRANCH (ram, 0x402b15, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_create, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0x80, 8) , (register, 0x80, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402b08, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x20, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)
hashtab_create, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402b50, 8) , (register, 0x206, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x30, 8)
hashtab_create, (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
hashtab_create, (register, 0x98, 8) COPY (unique, 0x3a00, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
hashtab_create, (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1)
hashtab_create, (register, 0x10, 8) COPY (register, 0x0, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
hashtab_create, (unique, 0x53980, 8) COPY (register, 0x10, 8)
hashtab_create, (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53900, 4)
hashtab_create, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
hashtab_create, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
hashtab_create, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
hashtab_create, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15580, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
hashtab_create, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
hashtab_create, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
hashtab_create, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12f80, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
hashtab_create, (unique, 0x13280, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
hashtab_create, (unique, 0x13500, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
hashtab_create, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 8) COPY (register, 0x10, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x8, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x8, 8)
hashtab_create, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x98, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x98, 8)
hashtab_create, (unique, 0x28700, 8) INT_SUB (register, 0x30, 8) , (register, 0x98, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402ab0, 8) , (unique, 0xc680, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
hashtab_create, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x2e800, 16) INT_ZEXT (register, 0x18, 8)
hashtab_create, (unique, 0x2e880, 16) INT_ZEXT (register, 0x10, 8)
hashtab_create, (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4)
hashtab_create, (unique, 0x2e980, 16) INT_ZEXT (register, 0x0, 8)
hashtab_create, (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16)
hashtab_create, (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_create, (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4)
hashtab_create, (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_create, (register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4)
hashtab_create, (register, 0x0, 4) COPY (register, 0x10, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (register, 0x8, 4) COPY (register, 0x10, 4)
hashtab_create, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
hashtab_create, (unique, 0x53900, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
hashtab_create, (unique, 0x53980, 8) COPY (register, 0x0, 8)
hashtab_create, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
hashtab_create, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
hashtab_create, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
hashtab_create, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
hashtab_create, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
hashtab_create, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
hashtab_create, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_create, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
hashtab_create, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
hashtab_create, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
hashtab_create, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
hashtab_create, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
hashtab_create, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
hashtab_create, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
hashtab_create, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
hashtab_create, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
hashtab_create, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
hashtab_create, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
hashtab_create, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
hashtab_create, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
hashtab_create, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_create, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
hashtab_create, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
hashtab_create, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0xc, 8)
hashtab_create, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x20, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402afd, 8) , (register, 0x206, 1)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0x59300, 8) INT_AND (register, 0x88, 8) , (register, 0x88, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x80, 8) COPY (register, 0x88, 8)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402a90, 8) , (unique, 0xc680, 1)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x90, 8)
hashtab_create, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x90, 8)
hashtab_create, (unique, 0x28700, 8) INT_SUB (register, 0x38, 8) , (register, 0x90, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_create,  ---  CBRANCH (ram, 0x402a7f, 8) , (unique, 0xc680, 1)
hashtab_create, (register, 0x38, 8) COPY (register, 0xa8, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402b1d, 8)
hashtab_create,  ---  CALL (ram, 0x400d70, 8)
hashtab_create, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x0, 8) COPY (register, 0xa0, 8)
hashtab_create, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_create, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  RETURN (register, 0x288, 8)
hashtab_create, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1220, 8)
hashtab_create, (register, 0x0, 8) TRUNC (register, 0x1200, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x0, 8) COPY (const, 0x8000000000000000, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (unique, 0xbd80, 8) INT_XOR (unique, 0xbd80, 8) , (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x207, 1) INT_SLESS (unique, 0xbd80, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  BRANCH (ram, 0x402a47, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_create, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_create, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create,  ---  BRANCH (ram, 0x402ada, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x7, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbe00, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x4, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_create, (register, 0x38, 8) COPY (const, 0x38, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402b7a, 8)
hashtab_create,  ---  CALL (ram, 0x4032a0, 8)
hashtab_create, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
hashtab_create, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_create, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
hashtab_create, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_create, (register, 0x8, 8) COPY (const, 0x38, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
hashtab_create, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x8, 8)
hashtab_create, (register, 0x10, 8) COPY (unique, 0x3680, 8)
hashtab_create, (register, 0x38, 8) COPY (register, 0x0, 8)
hashtab_create, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402b99, 8)
hashtab_create,  ---  CALL (ram, 0x400f50, 8)
hashtab_create,  ---  BRANCH (ram, 0x4028b2, 8)
hashtab_create, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)
hashtab_create, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
hashtab_create, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
hashtab_create, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_create,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
hashtab_create,  ---  BRANCH (ram, 0x402913, 8)
hashtab_create, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
hashtab_create, (register, 0x0, 8) COPY (register, 0x10, 8)
hashtab_create, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
hashtab_create, (unique, 0x57480, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)
hashtab_create, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x57480, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_create, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)
hashtab_create, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
hashtab_create, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
hashtab_create, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_create, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_create, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_create, (register, 0x1200, 8) INT2FLOAT (register, 0x0, 8)
hashtab_create, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1200, 8)
hashtab_create,  ---  BRANCH (ram, 0x402a24, 8)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)
hashtab_find, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402ca1, 8) , (register, 0x206, 1)
hashtab_find, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_find, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_find, (register, 0x0, 4) COPY (register, 0x10, 4)
hashtab_find, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_find, (unique, 0xe780, 8) COPY (register, 0x28, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_find, (unique, 0xe780, 8) COPY (register, 0x18, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_find, (register, 0x28, 8) COPY (register, 0x30, 8)
hashtab_find, (register, 0x18, 8) COPY (register, 0x38, 8)
hashtab_find, (register, 0x30, 4) COPY (register, 0x0, 4)
hashtab_find, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
hashtab_find, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
hashtab_find, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_find, (register, 0x38, 8) COPY (register, 0x28, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402bfa, 8)
hashtab_find,  ---  CALL (ram, 0x4027a0, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0xa0, 4) COPY (register, 0x0, 4)
hashtab_find, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
hashtab_find, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
hashtab_find, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
hashtab_find,  ---  CBRANCH (ram, 0x402c9d, 8) , (register, 0x206, 1)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
hashtab_find, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
hashtab_find, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_find, (register, 0x88, 8) COPY (register, 0x28, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
hashtab_find, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x28, 8)
hashtab_find, (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_find, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
hashtab_find, (register, 0x0, 8) COPY (unique, 0x3a00, 8)
hashtab_find, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)
hashtab_find, (register, 0x80, 8) INT_SEXT (unique, 0xbb00, 1)
hashtab_find, (register, 0x10, 8) COPY (register, 0x8, 8)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (const, 0x1, 8)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x88, 8) , (const, 0x1, 8)
hashtab_find, (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x88, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x88, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
hashtab_find, (unique, 0x53980, 8) COPY (register, 0x10, 8)
hashtab_find, (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53900, 4)
hashtab_find, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
hashtab_find, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
hashtab_find, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
hashtab_find, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
hashtab_find, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
hashtab_find, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x15580, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
hashtab_find, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
hashtab_find, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
hashtab_find, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
hashtab_find, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
hashtab_find, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12f80, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
hashtab_find, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
hashtab_find, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
hashtab_find, (unique, 0x13280, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
hashtab_find, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
hashtab_find, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
hashtab_find, (unique, 0x13500, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
hashtab_find, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
hashtab_find, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
hashtab_find, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
hashtab_find, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x8, 8)
hashtab_find, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x8, 8) COPY (register, 0x10, 8)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (register, 0x80, 8)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (register, 0x80, 8)
hashtab_find, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x80, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x200, 1) INT_LESS (register, 0x88, 8) , (register, 0x0, 8)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 8) , (register, 0x0, 8)
hashtab_find, (unique, 0x28700, 8) INT_SUB (register, 0x88, 8) , (register, 0x0, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402c18, 8) , (unique, 0xc680, 1)
hashtab_find, (register, 0x0, 8) COPY (register, 0x8, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x2e800, 16) INT_ZEXT (register, 0x30, 8)
hashtab_find, (unique, 0x2e880, 16) INT_ZEXT (register, 0x10, 8)
hashtab_find, (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4)
hashtab_find, (unique, 0x2e980, 16) INT_ZEXT (register, 0x0, 8)
hashtab_find, (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16)
hashtab_find, (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_find, (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4)
hashtab_find, (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16)
hashtab_find, (register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4)
hashtab_find, (unique, 0x53900, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
hashtab_find, (unique, 0x53980, 8) COPY (register, 0x10, 8)
hashtab_find, (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53900, 4)
hashtab_find, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
hashtab_find, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
hashtab_find, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
hashtab_find, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
hashtab_find, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
hashtab_find, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
hashtab_find, (unique, 0x15580, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
hashtab_find, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
hashtab_find, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
hashtab_find, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
hashtab_find, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
hashtab_find, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12f80, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
hashtab_find, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
hashtab_find, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
hashtab_find, (unique, 0x13280, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
hashtab_find, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
hashtab_find, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
hashtab_find, (unique, 0x13500, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
hashtab_find, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
hashtab_find, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
hashtab_find, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
hashtab_find, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
hashtab_find, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
hashtab_find, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_find, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
hashtab_find, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
hashtab_find, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
hashtab_find, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402c90, 8) , (register, 0x206, 1)
hashtab_find, (register, 0xa8, 4) COPY (register, 0xa0, 4)
hashtab_find, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
hashtab_find,  ---  BRANCH (ram, 0x402c61, 8)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
hashtab_find, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402c90, 8) , (register, 0x206, 1)
hashtab_find, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
hashtab_find, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0xa0, 4)
hashtab_find, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0xa0, 4)
hashtab_find, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_find, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0xa0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402c58, 8) , (unique, 0xc680, 1)
hashtab_find, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
hashtab_find, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_find, (register, 0x10, 8) COPY (register, 0xa8, 8)
hashtab_find, (register, 0x30, 8) COPY (register, 0x28, 8)
hashtab_find, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402c75, 8)
hashtab_find,  ---  CALL (ram, 0x400e70, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_find,  ---  CBRANCH (ram, 0x402c58, 8) , (unique, 0xc680, 1)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x0, 8) COPY (register, 0x18, 8)
hashtab_find, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  RETURN (register, 0x288, 8)
hashtab_find, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_find, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  RETURN (register, 0x288, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
hashtab_find, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find,  ---  BRANCH (ram, 0x402c41, 8)
hashtab_find, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_find, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_find, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_find, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_find, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_find, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_find, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_find, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_find, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_find, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_find,  ---  RETURN (register, 0x288, 8)
hashtab_get_key, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_get_key, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_get_key, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_get_key, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_get_key,  ---  RETURN (register, 0x288, 8)
hashtab_get_value, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
hashtab_get_value, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_get_value, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_get_value, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_get_value, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_get_value,  ---  RETURN (register, 0x288, 8)
hashtab_set_value, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
hashtab_set_value, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_set_value, (unique, 0xe780, 8) COPY (register, 0x28, 8)
hashtab_set_value, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_set_value, (register, 0xa0, 8) COPY (register, 0x38, 8)
hashtab_set_value, (unique, 0xe780, 8) COPY (register, 0x18, 8)
hashtab_set_value, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_set_value, (register, 0x18, 4) COPY (register, 0x10, 4)
hashtab_set_value, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
hashtab_set_value, (register, 0x28, 8) COPY (register, 0x30, 8)
hashtab_set_value, (register, 0x38, 8) COPY (register, 0x18, 8)
hashtab_set_value, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402ce4, 8)
hashtab_set_value,  ---  CALL (ram, 0x4032a0, 8)
hashtab_set_value, (register, 0x10, 8) COPY (register, 0x18, 8)
hashtab_set_value, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)
hashtab_set_value, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_set_value,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_set_value, (register, 0x30, 8) COPY (register, 0x28, 8)
hashtab_set_value, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_set_value, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_set_value, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_set_value, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_set_value, (register, 0x38, 8) COPY (register, 0x0, 8)
hashtab_set_value,  ---  BRANCH (ram, 0x400eb0, 8)
hashtab_first, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)
hashtab_first, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
hashtab_first,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_first, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
hashtab_first,  ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd00, 4)
hashtab_first, (register, 0x38, 8) COPY (register, 0x30, 8)
hashtab_first, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)
hashtab_first, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_first,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_first,  ---  BRANCH (ram, 0x402800, 8)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_next, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next,  ---  CBRANCH (ram, 0x402d48, 8) , (register, 0x206, 1)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
hashtab_next, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_next, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
hashtab_next, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_next, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_next, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_next, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
hashtab_next, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
hashtab_next,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_next,  ---  CBRANCH (ram, 0x402d40, 8) , (register, 0x206, 1)
hashtab_next, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_next, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_next,  ---  RETURN (register, 0x288, 8)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
hashtab_next,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
hashtab_next, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
hashtab_next, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
hashtab_next, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_next, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_next, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_next, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_next, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_next,  ---  RETURN (register, 0x288, 8)
hashtab_next,  ---  BRANCH (ram, 0x402800, 8)
hashtab_dump_keys, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_dump_keys, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
hashtab_dump_keys, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_dump_keys, (register, 0x38, 8) COPY (register, 0x20, 8)
hashtab_dump_keys, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd00, 4)
hashtab_dump_keys, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
hashtab_dump_keys, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
hashtab_dump_keys, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_dump_keys, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
hashtab_dump_keys, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_dump_keys, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
hashtab_dump_keys, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402d81, 8)
hashtab_dump_keys,  ---  CALL (ram, 0x402800, 8)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_dump_keys, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x402dbc, 8) , (register, 0x206, 1)
hashtab_dump_keys, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
hashtab_dump_keys, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
hashtab_dump_keys, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
hashtab_dump_keys, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_dump_keys, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
hashtab_dump_keys, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
hashtab_dump_keys, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
hashtab_dump_keys, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
hashtab_dump_keys, (register, 0x10, 8) COPY (const, 0x404208, 8)
hashtab_dump_keys, (register, 0x38, 8) COPY (ram, 0x6053c0, 8)
hashtab_dump_keys, (register, 0x30, 8) COPY (const, 0x1, 8)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
hashtab_dump_keys, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
hashtab_dump_keys, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402daf, 8)
hashtab_dump_keys,  ---  CALL (ram, 0x400f80, 8)
hashtab_dump_keys, (register, 0x38, 8) COPY (register, 0x20, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402db7, 8)
hashtab_dump_keys,  ---  CALL (ram, 0x402d20, 8)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_dump_keys, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x402d90, 8) , (unique, 0xc680, 1)
hashtab_dump_keys, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
hashtab_dump_keys, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
hashtab_dump_keys, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_dump_keys, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_dump_keys, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
hashtab_dump_keys, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
hashtab_dump_keys, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
hashtab_dump_keys,  ---  CBRANCH (ram, 0x402dd1, 8) , (unique, 0xc680, 1)
hashtab_dump_keys, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)
hashtab_dump_keys, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
hashtab_dump_keys, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
hashtab_dump_keys, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
hashtab_dump_keys, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_dump_keys, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_dump_keys, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_dump_keys, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_dump_keys,  ---  RETURN (register, 0x288, 8)
hashtab_dump_keys, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_dump_keys,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402dd6, 8)
hashtab_dump_keys,  ---  CALL (ram, 0x400e10, 8)
hashtab_delete, (unique, 0xe780, 8) COPY (register, 0x18, 8)
hashtab_delete, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (register, 0x18, 8) COPY (register, 0x38, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x1, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x1, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (unique, 0xbe00, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x1, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
hashtab_delete, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
hashtab_delete, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_delete, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_delete, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_delete, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x402e30, 8) , (register, 0x206, 1)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8)
hashtab_delete, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_delete, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_delete, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x402e0f, 8) , (register, 0x206, 1)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
hashtab_delete, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (register, 0x200, 1) COPY (const, 0x0, 1)
hashtab_delete, (register, 0x20b, 1) COPY (const, 0x0, 1)
hashtab_delete, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
hashtab_delete, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
hashtab_delete, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
hashtab_delete, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
hashtab_delete, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
hashtab_delete, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
hashtab_delete,  ---  CBRANCH (ram, 0x402e1d, 8) , (register, 0x206, 1)
hashtab_delete, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e1d, 8)
hashtab_delete,  ---  CALL (ram, 0x400d70, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
hashtab_delete, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e25, 8)
hashtab_delete,  ---  CALL (ram, 0x400d70, 8)
hashtab_delete, (register, 0x38, 8) COPY (register, 0x18, 8)
hashtab_delete, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
hashtab_delete, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
hashtab_delete,  ---  BRANCH (ram, 0x400d70, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0xc, 8)
hashtab_delete, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
hashtab_delete, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
hashtab_delete, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
hashtab_delete, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
hashtab_delete, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
hashtab_delete, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
hashtab_delete, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
hashtab_delete,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)
hashtab_delete,  ---  BRANCH (ram, 0x402dfe, 8)
utmp_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
utmp_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
utmp_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
utmp_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
utmp_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
utmp_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
utmp_init, (register, 0x10, 4) COPY (register, 0x38, 4)
utmp_init, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
utmp_init, (register, 0x30, 8) COPY (const, 0x100, 8)
utmp_init, (register, 0x38, 8) COPY (const, 0x180, 8)
utmp_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
utmp_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e65, 8)
utmp_init,  ---  CALL (ram, 0x402440, 8)
utmp_init, (ram, 0x605438, 8) COPY (register, 0x0, 8)
utmp_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
utmp_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
utmp_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
utmp_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
utmp_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
utmp_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
utmp_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
utmp_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
utmp_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
utmp_init,  ---  RETURN (register, 0x288, 8)
add_utmp_file, (register, 0x30, 8) COPY (register, 0x38, 8)
add_utmp_file, (register, 0x38, 8) COPY (ram, 0x605438, 8)
add_utmp_file,  ---  BRANCH (ram, 0x4024c0, 8)
utmp_get_entry, (register, 0x38, 8) COPY (ram, 0x605438, 8)
utmp_get_entry,  ---  BRANCH (ram, 0x402520, 8)
print_utmp_record, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_utmp_record, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_utmp_record, (register, 0xa0, 8) COPY (register, 0x38, 8)
print_utmp_record, (unique, 0xe780, 8) COPY (register, 0x28, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_utmp_record, (unique, 0xe780, 8) COPY (register, 0x18, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
print_utmp_record, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
print_utmp_record, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
print_utmp_record, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
print_utmp_record, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x402fbe, 8) , (register, 0x206, 1)
print_utmp_record, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x0, 8) COPY (unique, 0x3100, 8)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0xa8, 8) COPY (register, 0x30, 8)
print_utmp_record, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c, 8)
print_utmp_record, (register, 0x88, 8) COPY (unique, 0x3100, 8)
print_utmp_record, (register, 0x80, 8) COPY (const, 0x20, 8)
print_utmp_record, (register, 0x8, 8) COPY (const, 0x20, 8)
print_utmp_record, (unique, 0xe780, 8) COPY (register, 0x0, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_utmp_record, (unique, 0x3f780, 8) COPY (const, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
print_utmp_record, (register, 0x10, 8) COPY (const, 0x404228, 8)
print_utmp_record, (unique, 0x3f780, 8) COPY (const, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0x3f780, 8)
print_utmp_record, (register, 0x30, 8) COPY (const, 0x1, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402efb, 8)
print_utmp_record,  ---  CALL (ram, 0x400f80, 8)
print_utmp_record, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
print_utmp_record, (register, 0x8, 4) INT_SEXT (unique, 0xbc00, 2)
print_utmp_record, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x10, 8) COPY (const, 0x404237, 8)
print_utmp_record, (register, 0x30, 8) COPY (const, 0x1, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f18, 8)
print_utmp_record,  ---  CALL (ram, 0x400f80, 8)
print_utmp_record, (unique, 0x3880, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
print_utmp_record, (unique, 0x3900, 8) INT_MULT (register, 0x18, 8) , (const, 0x1, 8)
print_utmp_record, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
print_utmp_record, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
print_utmp_record, (register, 0x28, 4) INT_ZEXT (unique, 0xbb00, 1)
print_utmp_record, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0x59000, 1) INT_AND (register, 0x28, 1) , (register, 0x28, 1)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x402ff8, 8) , (register, 0x206, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f2c, 8)
print_utmp_record,  ---  CALL (ram, 0x400f90, 8)
print_utmp_record, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
print_utmp_record, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
print_utmp_record, (register, 0x10, 8) INT_SEXT (register, 0x28, 1)
print_utmp_record, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x8, 8)
print_utmp_record, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
print_utmp_record, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
print_utmp_record, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x402fe0, 8) , (unique, 0xc680, 1)
print_utmp_record, (register, 0x30, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x38, 8) COPY (const, 0x3f, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f4b, 8)
print_utmp_record,  ---  CALL (ram, 0x400e50, 8)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x1, 8)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)
print_utmp_record, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (const, 0x4, 8)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (const, 0x4, 8)
print_utmp_record, (unique, 0x28300, 8) INT_SUB (register, 0x18, 8) , (const, 0x4, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x402f18, 8) , (unique, 0xc680, 1)
print_utmp_record, (register, 0x30, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x38, 8) COPY (const, 0x7c, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f62, 8)
print_utmp_record,  ---  CALL (ram, 0x400e50, 8)
print_utmp_record, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0xa0, 8)
print_utmp_record, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_utmp_record, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
print_utmp_record, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_utmp_record, (register, 0x10, 8) COPY (const, 0x404243, 8)
print_utmp_record, (register, 0x30, 8) COPY (const, 0x1, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f7b, 8)
print_utmp_record,  ---  CALL (ram, 0x400f80, 8)
print_utmp_record, (unique, 0x3800, 8) INT_ADD (const, 0x4c, 8) , (register, 0xa0, 8)
print_utmp_record, (register, 0x88, 8) COPY (unique, 0x3800, 8)
print_utmp_record, (register, 0x30, 8) COPY (const, 0x1, 8)
print_utmp_record, (register, 0x80, 8) COPY (const, 0x100, 8)
print_utmp_record, (register, 0x8, 8) COPY (const, 0x100, 8)
print_utmp_record, (register, 0x10, 8) COPY (const, 0x40422f, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f9f, 8)
print_utmp_record,  ---  CALL (ram, 0x400f80, 8)
print_utmp_record, (unique, 0x3c80, 8) INT_ADD (const, 0x154, 8) , (register, 0xa0, 8)
print_utmp_record, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
print_utmp_record, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
print_utmp_record, (register, 0x38, 8) COPY (register, 0x20, 8)
print_utmp_record, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402fb3, 8)
print_utmp_record,  ---  CALL (ram, 0x400df0, 8)
print_utmp_record, (register, 0x30, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0x0, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402fbe, 8)
print_utmp_record,  ---  CALL (ram, 0x400e30, 8)
print_utmp_record, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
print_utmp_record, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_utmp_record, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
print_utmp_record, (unique, 0x4f00, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8)
print_utmp_record, (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_utmp_record,  ---  CBRANCH (ram, 0x403021, 8) , (unique, 0xc680, 1)
print_utmp_record, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_utmp_record, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  RETURN (register, 0x288, 8)
print_utmp_record, (register, 0x38, 4) INT_SEXT (register, 0x28, 1)
print_utmp_record, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
print_utmp_record, (register, 0x30, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402fec, 8)
print_utmp_record,  ---  CALL (ram, 0x400e50, 8)
print_utmp_record,  ---  BRANCH (ram, 0x402f4b, 8)
print_utmp_record, (register, 0x8, 8) COPY (const, 0x4, 8)
print_utmp_record, (register, 0x88, 8) COPY (const, 0x403896, 8)
print_utmp_record, (register, 0x10, 8) COPY (const, 0x40423c, 8)
print_utmp_record, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)
print_utmp_record, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x30, 8) COPY (const, 0x1, 8)
print_utmp_record, (register, 0x38, 8) COPY (register, 0xa8, 8)
print_utmp_record, (register, 0x80, 4) COPY (register, 0x8, 4)
print_utmp_record, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
print_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40301c, 8)
print_utmp_record,  ---  CALL (ram, 0x400f80, 8)
print_utmp_record,  ---  BRANCH (ram, 0x402f55, 8)
print_utmp_record, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_utmp_record,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403026, 8)
print_utmp_record,  ---  CALL (ram, 0x400e10, 8)
utmp_print_file_and_line, (register, 0x30, 8) COPY (ram, 0x605438, 8)
utmp_print_file_and_line,  ---  BRANCH (ram, 0x402770, 8)
fix_ut_type_field, (unique, 0xe780, 8) COPY (register, 0x28, 8)
fix_ut_type_field, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
fix_ut_type_field, (unique, 0xe780, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
fix_ut_type_field, (register, 0x10, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1)
fix_ut_type_field, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x80, 1) , (const, 0x7c, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 1) , (const, 0x7c, 1)
fix_ut_type_field, (unique, 0x27d00, 1) INT_SUB (register, 0x80, 1) , (const, 0x7c, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4030e0, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x80, 1) , (const, 0x7b, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 1) , (const, 0x7b, 1)
fix_ut_type_field, (unique, 0x27d00, 1) INT_SUB (register, 0x80, 1) , (const, 0x7b, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403148, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x80, 1) , (const, 0x7e, 1)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 1) , (const, 0x7e, 1)
fix_ut_type_field, (unique, 0x27d00, 1) INT_SUB (register, 0x80, 1) , (const, 0x7e, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403160, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2)
fix_ut_type_field, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (register, 0x8, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031c0, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x2c, 8)
fix_ut_type_field, (register, 0x98, 8) COPY (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (const, 0x403950, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x7, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x98, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403088, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403086, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
fix_ut_type_field, (register, 0x88, 1) COPY (unique, 0xc900, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 4) INT_SUB (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x88, 4) INT_SEXT (register, 0x88, 1)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031b0, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (register, 0x38, 8) COPY (const, 0x2, 8)
fix_ut_type_field, (register, 0x90, 8) COPY (const, 0x403947, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x9, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x38, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x98, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x90, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4030bc, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4030ba, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031ec, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (register, 0x30, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x30, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  RETURN (register, 0x288, 8)
fix_ut_type_field, (register, 0x18, 8) COPY (const, 0x4, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x4, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x18, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031cc, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403138, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)
fix_ut_type_field, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (register, 0x8, 2) , (const, 0x7, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
fix_ut_type_field, (register, 0x30, 1) COPY (unique, 0xc900, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x59000, 1) INT_AND (register, 0x80, 1) , (register, 0x80, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field, (register, 0x8, 1) COPY (unique, 0xc680, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x30, 4)
fix_ut_type_field, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x59000, 1) INT_AND (register, 0x8, 1) , (register, 0x8, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403130, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x2c, 8)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403200, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x8, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x0, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  RETURN (register, 0x288, 8)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x2c, 8)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
fix_ut_type_field, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403123, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  RETURN (register, 0x288, 8)
fix_ut_type_field, (register, 0x98, 8) COPY (const, 0x3, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x3, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x98, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbb80, 2)
fix_ut_type_field,  ---  BRANCH (ram, 0x4030ed, 8)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c, 8)
fix_ut_type_field, (register, 0x18, 8) COPY (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x28, 8) COPY (const, 0x403950, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x7, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x28, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (register, 0x98, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403179, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403177, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
fix_ut_type_field, (register, 0x88, 1) COPY (unique, 0xc900, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 4) INT_SUB (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x88, 4) INT_SEXT (register, 0x88, 1)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403210, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc00, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403268, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x90, 8) COPY (const, 0x2, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x2, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x90, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field,  ---  BRANCH (ram, 0x4030ed, 8)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2)
fix_ut_type_field, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
fix_ut_type_field,  ---  BRANCH (ram, 0x4030fc, 8)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (register, 0x8, 2) , (const, 0x2, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4030fc, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x2c, 8)
fix_ut_type_field, (register, 0x18, 8) COPY (unique, 0x3100, 8)
fix_ut_type_field, (register, 0x90, 8) COPY (const, 0x403947, 8)
fix_ut_type_field, (register, 0x98, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x9, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x90, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x98, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031e6, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4031e4, 8) , (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x4030c7, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x18, 4) INT_ZEXT (unique, 0xbc00, 2)
fix_ut_type_field, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
fix_ut_type_field, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8)
fix_ut_type_field, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
fix_ut_type_field,  ---  BRANCH (ram, 0x403105, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x7, 8)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x8, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
fix_ut_type_field, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
fix_ut_type_field,  ---  RETURN (register, 0x288, 8)
fix_ut_type_field, (register, 0x90, 8) COPY (const, 0x403947, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x9, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x90, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403223, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403221, 8) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403068, 8) , (unique, 0xc680, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc00, 2) , (const, 0x1, 2)
fix_ut_type_field, (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
fix_ut_type_field, (unique, 0x28100, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x1, 2)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28100, 2) , (const, 0x0, 2)
fix_ut_type_field, (unique, 0x12c00, 2) INT_AND (unique, 0x28100, 2) , (const, 0xff, 2)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 2)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403098, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x88, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x7, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (unique, 0xbb80, 2) COPY (register, 0x88, 2)
fix_ut_type_field,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb80, 2)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x28, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x40324c, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x40324a, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x0, 1) COPY (register, 0x200, 1)
fix_ut_type_field, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
fix_ut_type_field, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
fix_ut_type_field, (register, 0x88, 1) COPY (unique, 0xc900, 1)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 4) INT_SUB (register, 0x88, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 8) COPY (const, 0x1, 8)
fix_ut_type_field, (register, 0x88, 4) INT_SEXT (register, 0x88, 1)
fix_ut_type_field, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
fix_ut_type_field,  ---  BRANCH (ram, 0x403098, 8)
fix_ut_type_field, (register, 0x90, 8) COPY (const, 0x403947, 8)
fix_ut_type_field, (register, 0x8, 8) COPY (const, 0x9, 8)
fix_ut_type_field, (register, 0x30, 8) COPY (register, 0x18, 8)
fix_ut_type_field, (register, 0x38, 8) COPY (register, 0x90, 8)
fix_ut_type_field, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
fix_ut_type_field,  ---  CBRANCH (ram, 0x40327b, 8) , (unique, 0xd600, 1)
fix_ut_type_field, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xae80, 8) COPY (register, 0x38, 8)
fix_ut_type_field, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
fix_ut_type_field, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
fix_ut_type_field, (unique, 0xa280, 8) COPY (register, 0x30, 8)
fix_ut_type_field, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
fix_ut_type_field, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
fix_ut_type_field, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
fix_ut_type_field, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
fix_ut_type_field, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
fix_ut_type_field, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
fix_ut_type_field, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403279, 8) , (register, 0x206, 1)
fix_ut_type_field,  ---  CBRANCH (ram, 0x403235, 8) , (register, 0x206, 1)
fix_ut_type_field, (register, 0x200, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x20b, 1) COPY (const, 0x0, 1)
fix_ut_type_field, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
fix_ut_type_field, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
fix_ut_type_field, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
fix_ut_type_field, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
fix_ut_type_field, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
fix_ut_type_field, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
fix_ut_type_field, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
fix_ut_type_field,  ---  BRANCH (ram, 0x4031d6, 8)
bad_utmp_record, (register, 0x200, 1) COPY (const, 0x0, 1)
bad_utmp_record, (register, 0x20b, 1) COPY (const, 0x0, 1)
bad_utmp_record, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
bad_utmp_record, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
bad_utmp_record, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
bad_utmp_record, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
bad_utmp_record, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
bad_utmp_record, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
bad_utmp_record, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
bad_utmp_record, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
bad_utmp_record, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
bad_utmp_record, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
bad_utmp_record,  ---  RETURN (register, 0x288, 8)
xmalloc, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xmalloc, (register, 0x18, 8) COPY (register, 0x38, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032a9, 8)
xmalloc,  ---  CALL (ram, 0x400ed0, 8)
xmalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xmalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xmalloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xmalloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xmalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmalloc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
xmalloc,  ---  CBRANCH (ram, 0x4032b3, 8) , (unique, 0xc680, 1)
xmalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xmalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xmalloc, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
xmalloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xmalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmalloc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
xmalloc,  ---  CBRANCH (ram, 0x4032b5, 8) , (unique, 0xc680, 1)
xmalloc, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xmalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xmalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  RETURN (register, 0x288, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032ba, 8)
xmalloc,  ---  CALL (ram, 0x4033c0, 8)
xrealloc, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xrealloc, (register, 0x18, 8) COPY (register, 0x30, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032c9, 8)
xrealloc,  ---  CALL (ram, 0x400f00, 8)
xrealloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xrealloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xrealloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xrealloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xrealloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xrealloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xrealloc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
xrealloc,  ---  CBRANCH (ram, 0x4032d3, 8) , (unique, 0xc680, 1)
xrealloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xrealloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xrealloc, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
xrealloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xrealloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xrealloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xrealloc, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
xrealloc,  ---  CBRANCH (ram, 0x4032d5, 8) , (unique, 0xc680, 1)
xrealloc, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xrealloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xrealloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  RETURN (register, 0x288, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032da, 8)
xrealloc,  ---  CALL (ram, 0x4033c0, 8)
x2realloc, (register, 0x200, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
x2realloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
x2realloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
x2realloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
x2realloc, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
x2realloc,  ---  CBRANCH (ram, 0x403310, 8) , (register, 0x206, 1)
x2realloc, (register, 0x10, 8) COPY (const, 0xaaaaaaaaaaaaaaa9, 8)
x2realloc, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
x2realloc, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
x2realloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
x2realloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
x2realloc, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
x2realloc,  ---  CBRANCH (ram, 0x403327, 8) , (unique, 0xc900, 1)
x2realloc, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
x2realloc, (register, 0x10, 8) COPY (unique, 0x3100, 8)
x2realloc, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
x2realloc, (unique, 0x57480, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)
x2realloc, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x57480, 8) , (const, 0x0, 8)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
x2realloc, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
x2realloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
x2realloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
x2realloc, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8)
x2realloc, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
x2realloc, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
x2realloc, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
x2realloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
x2realloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
x2realloc, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
x2realloc,  ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8)
x2realloc, (register, 0x30, 8) COPY (register, 0x0, 8)
x2realloc,  ---  BRANCH (ram, 0x4032c0, 8)
x2realloc, (register, 0x200, 1) COPY (const, 0x0, 1)
x2realloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
x2realloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
x2realloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
x2realloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
x2realloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
x2realloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
x2realloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
x2realloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
x2realloc, (register, 0x10, 8) COPY (const, 0x40, 8)
x2realloc, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
x2realloc,  ---  CBRANCH (ram, 0x40331c, 8) , (unique, 0x27800, 1)
x2realloc, (register, 0x0, 8) COPY (register, 0x10, 8)
x2realloc, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
x2realloc,  ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8)
x2realloc, (register, 0x30, 8) COPY (register, 0x0, 8)
x2realloc,  ---  BRANCH (ram, 0x4032c0, 8)
x2realloc, (unique, 0xe780, 8) COPY (register, 0x0, 8)
x2realloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
x2realloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
x2realloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
x2realloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40332d, 8)
x2realloc,  ---  CALL (ram, 0x4033c0, 8)
xzalloc, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xzalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xzalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xzalloc, (register, 0x18, 8) COPY (register, 0x38, 8)
xzalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xzalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403339, 8)
xzalloc,  ---  CALL (ram, 0x4032a0, 8)
xzalloc, (register, 0x10, 8) COPY (register, 0x18, 8)
xzalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xzalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xzalloc, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
xzalloc, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
xzalloc, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
xzalloc, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
xzalloc, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
xzalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
xzalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xzalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xzalloc, (register, 0x38, 8) COPY (register, 0x0, 8)
xzalloc, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xzalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xzalloc,  ---  BRANCH (ram, 0x400e40, 8)
xcalloc, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403359, 8)
xcalloc,  ---  CALL (ram, 0x400e80, 8)
xcalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xcalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xcalloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc,  ---  CBRANCH (ram, 0x403363, 8) , (register, 0x206, 1)
xcalloc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xcalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  RETURN (register, 0x288, 8)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403368, 8)
xcalloc,  ---  CALL (ram, 0x4033c0, 8)
xmemdup, (unique, 0xe780, 8) COPY (register, 0x28, 8)
xmemdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmemdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xmemdup, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xmemdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmemdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xmemdup, (register, 0x28, 8) COPY (register, 0x38, 8)
xmemdup, (register, 0x38, 8) COPY (register, 0x30, 8)
xmemdup, (register, 0x18, 8) COPY (register, 0x30, 8)
xmemdup, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xmemdup, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xmemdup, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmemdup, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmemdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmemdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403384, 8)
xmemdup,  ---  CALL (ram, 0x4032a0, 8)
xmemdup, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xmemdup, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xmemdup, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xmemdup, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmemdup, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmemdup, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmemdup, (register, 0x10, 8) COPY (register, 0x18, 8)
xmemdup, (register, 0x30, 8) COPY (register, 0x28, 8)
xmemdup, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xmemdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xmemdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmemdup, (register, 0x38, 8) COPY (register, 0x0, 8)
xmemdup,  ---  BRANCH (ram, 0x400eb0, 8)
xstrdup, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xstrdup, (register, 0x18, 8) COPY (register, 0x38, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033a9, 8)
xstrdup,  ---  CALL (ram, 0x400e00, 8)
xstrdup, (register, 0x38, 8) COPY (register, 0x18, 8)
xstrdup, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
xstrdup, (register, 0x30, 8) COPY (unique, 0x3100, 8)
xstrdup, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xstrdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  BRANCH (ram, 0x403370, 8)
xalloc_die, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xalloc_die, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xalloc_die, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xalloc_die, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xalloc_die, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xalloc_die, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xalloc_die, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xalloc_die, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xalloc_die, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xalloc_die, (register, 0x0, 8) COPY (const, 0x6053b0, 8)
xalloc_die, (register, 0x8, 8) COPY (const, 0x404248, 8)
xalloc_die, (register, 0x10, 8) COPY (const, 0x403981, 8)
xalloc_die, (register, 0x200, 1) COPY (const, 0x0, 1)
xalloc_die, (register, 0x20b, 1) COPY (const, 0x0, 1)
xalloc_die, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
xalloc_die, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
xalloc_die, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
xalloc_die, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
xalloc_die, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
xalloc_die, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
xalloc_die, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xalloc_die, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xalloc_die, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
xalloc_die, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
xalloc_die, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
xalloc_die, (register, 0x200, 1) COPY (const, 0x0, 1)
xalloc_die, (register, 0x20b, 1) COPY (const, 0x0, 1)
xalloc_die, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
xalloc_die, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
xalloc_die, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
xalloc_die, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
xalloc_die, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
xalloc_die, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
xalloc_die, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xalloc_die, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xalloc_die, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xalloc_die,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033e4, 8)
xalloc_die,  ---  CALL (ram, 0x400f20, 8)
xalloc_die, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xalloc_die,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033e9, 8)
xalloc_die,  ---  CALL (ram, 0x400d90, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb8, 4) COPY (register, 0x38, 4)
__libc_csu_init, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb0, 8) COPY (register, 0x30, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa8, 8) COPY (register, 0x10, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa0, 8) COPY (const, 0x604e10, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x28, 8) COPY (const, 0x604e18, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x18, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
__libc_csu_init, (unique, 0x51c00, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x28, 8) INT_SRIGHT (register, 0x28, 8) , (unique, 0x51b80, 4)
__libc_csu_init, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
__libc_csu_init, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
__libc_csu_init, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
__libc_csu_init, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
__libc_csu_init, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
__libc_csu_init, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
__libc_csu_init, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
__libc_csu_init, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12f80, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
__libc_csu_init, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
__libc_csu_init, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
__libc_csu_init, (unique, 0x13280, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
__libc_csu_init, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
__libc_csu_init, (unique, 0x13500, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
__libc_csu_init, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
__libc_csu_init, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
__libc_csu_init, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
__libc_csu_init, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403423, 8)
__libc_csu_init,  ---  CALL (ram, 0x400d30, 8)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x403446, 8) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
__libc_csu_init, (register, 0x10, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x30, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x38, 4) COPY (register, 0xb8, 4)
__libc_csu_init, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
__libc_csu_init, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)
__libc_csu_init, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40343d, 8)
__libc_csu_init, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
__libc_csu_init,  ---  CALLIND (unique, 0xbd80, 8)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x403430, 8) , (unique, 0xc680, 1)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  RETURN (register, 0x288, 8)
__libc_csu_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_fini,  ---  RETURN (register, 0x288, 8)
_fini, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini,  ---  RETURN (register, 0x288, 8)
