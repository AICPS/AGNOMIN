
void do_totals(time_t *next_midnight,time_t current_time,int update_time_flag,int change_login_flag,
              char *debug_str)

{
  int iVar1;
  int the_time;
  tm *ptVar2;
  time_t temp_time;
  char month_day_string [256];
  
  iVar1 = __stack_chk_guard;
  the_time = *next_midnight;
  do {
    while( true ) {
      if (current_time <= the_time) {
        if (iVar1 == __stack_chk_guard) {
          return;
        }
                    /* WARNING: Subroutine does not return */
        __stack_chk_fail();
      }
      log_everyone_out(the_time,update_time_flag,change_login_flag,debug_str);
      if (print_midnight_totals != 0) break;
LAB_00011b10:
      the_time = midnight_after_me(current_time);
      *next_midnight = the_time;
    }
    temp_time = *next_midnight + -10;
    ptVar2 = localtime(&temp_time);
    if (print_year == 0) {
      __snprintf_chk(month_day_string,0x100,1,0x100,"%s %2d",months[ptVar2->tm_mon],ptVar2->tm_mday)
      ;
    }
    else {
      __snprintf_chk(month_day_string,0x100,1,0x100,"%s %2d %4d",months[ptVar2->tm_mon],
                     ptVar2->tm_mday,ptVar2->tm_year + 0x76c);
    }
    do_statistics(month_day_string);
    if ((print_midnight_totals == 0) || (print_all_days == 0)) goto LAB_00011b10;
    the_time = midnight_after_me(*next_midnight);
    *next_midnight = the_time;
  } while( true );
}

