
UDItype __udivdi3(UDItype n,UDItype d)

{
  longlong lVar1;
  uint in_r0;
  uint in_r1;
  uint uVar2;
  uint uVar3;
  uint in_r2;
  uint in_r3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  uint uVar10;
  bool bVar11;
  
  if (in_r3 == 0) {
    if (in_r2 <= in_r1) {
      if (in_r2 == 0) {
        in_r2 = 1 / 0;
      }
      uVar4 = count_leading_zeroes(in_r2);
      if (uVar4 == 0) {
        uVar4 = in_r1 - in_r2;
        uVar3 = 1;
      }
      else {
        in_r2 = in_r2 << (uVar4 & 0xff);
        uVar3 = in_r1 >> (0x20 - uVar4 & 0xff);
        uVar5 = in_r2 >> 0x10;
        uVar2 = in_r0 >> (0x20 - uVar4 & 0xff) | in_r1 << (uVar4 & 0xff);
        uVar9 = uVar3 / uVar5;
        in_r0 = in_r0 << (uVar4 & 0xff);
        uVar10 = (in_r2 & 0xffff) * uVar9;
        uVar4 = uVar2 >> 0x10 | (uVar3 - uVar5 * uVar9) * 0x10000;
        if (uVar4 < uVar10) {
          bVar11 = CARRY4(uVar4,in_r2);
          uVar4 = uVar4 + in_r2;
          if (uVar4 < uVar10 && !bVar11) {
            uVar4 = uVar4 + in_r2;
            uVar9 = uVar9 - 2;
          }
          else {
            uVar9 = uVar9 - 1;
          }
        }
        uVar3 = (uVar4 - uVar10) / uVar5;
        uVar7 = (in_r2 & 0xffff) * uVar3;
        uVar4 = uVar2 & 0xffff | ((uVar4 - uVar10) - uVar5 * uVar3) * 0x10000;
        if (uVar4 < uVar7) {
          bVar11 = CARRY4(uVar4,in_r2);
          uVar4 = uVar4 + in_r2;
          if (uVar4 < uVar7 && !bVar11) {
            uVar4 = uVar4 + in_r2;
            uVar3 = uVar3 - 2;
          }
          else {
            uVar3 = uVar3 - 1;
          }
        }
        uVar4 = uVar4 - uVar7;
        uVar3 = uVar3 | uVar9 << 0x10;
      }
      uVar5 = in_r2 >> 0x10;
      uVar9 = uVar4 / uVar5;
      uVar2 = (in_r2 & 0xffff) * uVar9;
      uVar4 = in_r0 >> 0x10 | (uVar4 - uVar5 * uVar9) * 0x10000;
      if (uVar4 < uVar2) {
        bVar11 = CARRY4(uVar4,in_r2);
        uVar4 = uVar4 + in_r2;
        if (uVar4 < uVar2 && !bVar11) {
          uVar4 = uVar4 + in_r2;
          uVar9 = uVar9 - 2;
        }
        else {
          uVar9 = uVar9 - 1;
        }
      }
      uVar7 = (uVar4 - uVar2) / uVar5;
      uVar10 = (in_r2 & 0xffff) * uVar7;
      uVar4 = in_r0 & 0xffff | ((uVar4 - uVar2) - uVar5 * uVar7) * 0x10000;
      if (uVar4 < uVar10) {
        if (uVar10 <= uVar4 + in_r2 || CARRY4(uVar4,in_r2)) {
          uVar7 = uVar7 - 1;
        }
        else {
          uVar7 = uVar7 - 2;
        }
      }
      uVar6 = uVar7 | uVar9 << 0x10;
      goto LAB_00014ff8;
    }
    uVar4 = count_leading_zeroes(in_r2);
    if (uVar4 != 0) {
      in_r2 = in_r2 << (uVar4 & 0xff);
      in_r1 = in_r0 >> (0x20 - uVar4 & 0xff) | in_r1 << (uVar4 & 0xff);
    }
    uVar3 = in_r2 >> 0x10;
    if (uVar4 != 0) {
      in_r0 = in_r0 << (uVar4 & 0xff);
    }
    uVar9 = in_r1 / uVar3;
    uVar4 = (in_r2 & 0xffff) * uVar9;
    uVar5 = in_r0 >> 0x10 | (in_r1 - uVar3 * uVar9) * 0x10000;
    if (uVar5 < uVar4) {
      bVar11 = CARRY4(uVar5,in_r2);
      uVar5 = uVar5 + in_r2;
      if (uVar5 < uVar4 && !bVar11) {
        uVar5 = uVar5 + in_r2;
        uVar9 = uVar9 - 2;
      }
      else {
        uVar9 = uVar9 - 1;
      }
    }
    uVar6 = (uVar5 - uVar4) / uVar3;
    uVar2 = (in_r2 & 0xffff) * uVar6;
    uVar4 = in_r0 & 0xffff | ((uVar5 - uVar4) - uVar3 * uVar6) * 0x10000;
    if (uVar4 < uVar2) {
      if (uVar2 <= uVar4 + in_r2 || CARRY4(uVar4,in_r2)) {
        uVar6 = uVar6 - 1;
      }
      else {
        uVar6 = uVar6 - 2;
      }
    }
    uVar6 = uVar6 | uVar9 << 0x10;
LAB_00014fe8:
    uVar3 = 0;
  }
  else {
    if (in_r3 <= in_r1) {
      uVar4 = count_leading_zeroes(in_r3);
      if (uVar4 != 0) {
        uVar9 = 0x20 - uVar4;
        uVar10 = in_r2 >> (uVar9 & 0xff) | in_r3 << (uVar4 & 0xff);
        uVar5 = in_r1 >> (uVar9 & 0xff);
        uVar3 = uVar10 >> 0x10;
        uVar7 = uVar5 / uVar3;
        uVar9 = in_r0 >> (uVar9 & 0xff) | in_r1 << (uVar4 & 0xff);
        uVar2 = (uVar10 & 0xffff) * uVar7;
        uVar5 = uVar9 >> 0x10 | (uVar5 - uVar3 * uVar7) * 0x10000;
        if (uVar5 < uVar2) {
          bVar11 = CARRY4(uVar5,uVar10);
          uVar5 = uVar5 + uVar10;
          if (uVar5 < uVar2 && !bVar11) {
            uVar5 = uVar5 + uVar10;
            uVar7 = uVar7 - 2;
          }
          else {
            uVar7 = uVar7 - 1;
          }
        }
        uVar6 = (uVar5 - uVar2) / uVar3;
        uVar8 = (uVar10 & 0xffff) * uVar6;
        uVar3 = uVar9 & 0xffff | ((uVar5 - uVar2) - uVar3 * uVar6) * 0x10000;
        if (uVar3 < uVar8) {
          bVar11 = CARRY4(uVar3,uVar10);
          uVar3 = uVar3 + uVar10;
          if (uVar3 < uVar8 && !bVar11) {
            uVar3 = uVar3 + uVar10;
            uVar6 = uVar6 - 2;
          }
          else {
            uVar6 = uVar6 - 1;
          }
        }
        uVar6 = uVar6 | uVar7 << 0x10;
        lVar1 = (ulonglong)(in_r2 << (uVar4 & 0xff)) * (ulonglong)uVar6;
        uVar5 = (uint)((ulonglong)lVar1 >> 0x20);
        if (uVar5 <= uVar3 - uVar8) {
          uVar3 = (uint)(uVar5 == uVar3 - uVar8);
          if ((uint)lVar1 <= in_r0 << (uVar4 & 0xff)) {
            uVar3 = 0;
          }
          if (uVar3 == 0) goto LAB_00014ff8;
        }
        uVar6 = uVar6 - 1;
        goto LAB_00014fe8;
      }
      bVar11 = in_r3 <= in_r1;
      if (in_r1 <= in_r3) {
        bVar11 = in_r2 <= in_r0;
      }
      if (bVar11) {
        uVar3 = uVar4;
        uVar6 = 1;
        goto LAB_00014ff8;
      }
    }
    uVar3 = 0;
    uVar6 = uVar3;
  }
LAB_00014ff8:
  return CONCAT44(uVar3,uVar6);
}

